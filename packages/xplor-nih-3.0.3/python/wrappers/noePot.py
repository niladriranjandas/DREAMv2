# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_noePot')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_noePot')
    _noePot = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_noePot', [dirname(__file__)])
        except ImportError:
            import _noePot
            return _noePot
        try:
            _mod = imp.load_module('_noePot', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _noePot = swig_import_helper()
    del swig_import_helper
else:
    import _noePot
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


class Modified(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    MOD_SELF = _noePot.Modified_MOD_SELF
    MOD_SIMULATION = _noePot.Modified_MOD_SIMULATION

    def __init__(self, *args, **kwargs):
        this = _noePot.new_Modified(*args, **kwargs)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def set(self, *args, **kwargs):
        return _noePot.Modified_set(self, *args, **kwargs)

    def clear(self, *args, **kwargs):
        return _noePot.Modified_clear(self, *args, **kwargs)

    def update(self, *args, **kwargs):
        return _noePot.Modified_update(self, *args, **kwargs)

    def value(self, *args, **kwargs):
        return _noePot.Modified_value(self, *args, **kwargs)

    def __call__(self, *args, **kwargs):
        return _noePot.Modified___call__(self, *args, **kwargs)
    __swig_destroy__ = _noePot.delete_Modified
    __del__ = lambda self: None

class ModifiedPtr(Modified):
    def __init__(self, this):
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
        self.this.own(0)
        self.__class__ = Modified

Modified_swigregister = _noePot.Modified_swigregister
Modified_swigregister(Modified)

class ModifiedBase(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    modified = _swig_property(_noePot.ModifiedBase_modified_get, _noePot.ModifiedBase_modified_set)
    registeredSimulations = _swig_property(_noePot.ModifiedBase_registeredSimulations_get, _noePot.ModifiedBase_registeredSimulations_set)
    __swig_destroy__ = _noePot.delete_ModifiedBase
    __del__ = lambda self: None

    def registerTo(self, *args, **kwargs):
        return _noePot.ModifiedBase_registerTo(self, *args, **kwargs)

    def unRegister(self, *args, **kwargs):
        return _noePot.ModifiedBase_unRegister(self, *args, **kwargs)

    def updateValues(self, *args, **kwargs):
        return _noePot.ModifiedBase_updateValues(self, *args, **kwargs)

class ModifiedBasePtr(ModifiedBase):
    def __init__(self, this):
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
        self.this.own(0)
        self.__class__ = ModifiedBase

ModifiedBase_swigregister = _noePot.ModifiedBase_swigregister
ModifiedBase_swigregister(ModifiedBase)

class VarEnsWeights(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    ensWeights = _swig_property(_noePot.VarEnsWeights_ensWeights_get, _noePot.VarEnsWeights_ensWeights_set)
    mult = _swig_property(_noePot.VarEnsWeights_mult_get, _noePot.VarEnsWeights_mult_set)

    def __init__(self, *args, **kwargs):
        this = _noePot.new_VarEnsWeights(*args, **kwargs)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _noePot.delete_VarEnsWeights
    __del__ = lambda self: None

class VarEnsWeightsPtr(VarEnsWeights):
    def __init__(self, this):
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
        self.this.own(0)
        self.__class__ = VarEnsWeights

VarEnsWeights_swigregister = _noePot.VarEnsWeights_swigregister
VarEnsWeights_swigregister(VarEnsWeights)

class EnsemblePot(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _noePot.delete_EnsemblePot
    __del__ = lambda self: None

    def calcEnergy(self, *args, **kwargs):
        return _noePot.EnsemblePot_calcEnergy(self, *args, **kwargs)

    def calcEnergyAndDerivs(self, *args, **kwargs):
        return _noePot.EnsemblePot_calcEnergyAndDerivs(self, *args, **kwargs)

    def energyMaybeDerivs0(self, *args, **kwargs):
        return _noePot.EnsemblePot_energyMaybeDerivs0(self, *args, **kwargs)

    def energyMaybeDerivs1(self, *args, **kwargs):
        return _noePot.EnsemblePot_energyMaybeDerivs1(self, *args, **kwargs)

    def energyMaybeDerivs2(self, *args, **kwargs):
        return _noePot.EnsemblePot_energyMaybeDerivs2(self, *args, **kwargs)

    def energyMaybeDerivs3(self, *args, **kwargs):
        return _noePot.EnsemblePot_energyMaybeDerivs3(self, *args, **kwargs)

    def energyMaybeDerivs4(self, *args, **kwargs):
        return _noePot.EnsemblePot_energyMaybeDerivs4(self, *args, **kwargs)

    def energyMaybeDerivsPre(self, *args, **kwargs):
        return _noePot.EnsemblePot_energyMaybeDerivsPre(self, *args, **kwargs)

    def energyMaybeDerivsPost(self, *args, **kwargs):
        return _noePot.EnsemblePot_energyMaybeDerivsPost(self, *args, **kwargs)

    def simulation(self, *args):
        return _noePot.EnsemblePot_simulation(self, *args)

    def ensWeight(self, *args, **kwargs):
        return _noePot.EnsemblePot_ensWeight(self, *args, **kwargs)

    def ensWeights(self, *args, **kwargs):
        return _noePot.EnsemblePot_ensWeights(self, *args, **kwargs)

    def setEnsWeights(self, *args, **kwargs):
        return _noePot.EnsemblePot_setEnsWeights(self, *args, **kwargs)

    def addEnsWeights(self, *args, **kwargs):
        return _noePot.EnsemblePot_addEnsWeights(self, *args, **kwargs)

    def getEnsWeights(self, *args, **kwargs):
        return _noePot.EnsemblePot_getEnsWeights(self, *args, **kwargs)

    def clearEnsWeights(self, *args, **kwargs):
        return _noePot.EnsemblePot_clearEnsWeights(self, *args, **kwargs)

    def updateEnsWeights(self, *args, **kwargs):
        return _noePot.EnsemblePot_updateEnsWeights(self, *args, **kwargs)

    def useSimEnsWeights(self, *args, **kwargs):
        return _noePot.EnsemblePot_useSimEnsWeights(self, *args, **kwargs)

    def setUseSimEnsWeights(self, *args, **kwargs):
        return _noePot.EnsemblePot_setUseSimEnsWeights(self, *args, **kwargs)

    def calcWDerivs(self, *args, **kwargs):
        return _noePot.EnsemblePot_calcWDerivs(self, *args, **kwargs)

    def setCalcWDerivs(self, *args, **kwargs):
        return _noePot.EnsemblePot_setCalcWDerivs(self, *args, **kwargs)

    def ensWeightsInfo(self, *args, **kwargs):
        return _noePot.EnsemblePot_ensWeightsInfo(self, *args, **kwargs)

class EnsemblePotPtr(EnsemblePot):
    def __init__(self, this):
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
        self.this.own(0)
        self.__class__ = EnsemblePot

EnsemblePot_swigregister = _noePot.EnsemblePot_swigregister
EnsemblePot_swigregister(EnsemblePot)

class rc_EnsemblePot(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args, **kwargs):
        this = _noePot.new_rc_EnsemblePot(*args, **kwargs)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _noePot.delete_rc_EnsemblePot
    __del__ = lambda self: None

class rc_EnsemblePotPtr(rc_EnsemblePot):
    def __init__(self, this):
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
        self.this.own(0)
        self.__class__ = rc_EnsemblePot

rc_EnsemblePot_swigregister = _noePot.rc_EnsemblePot_swigregister
rc_EnsemblePot_swigregister(rc_EnsemblePot)

class NOEPot(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args, **kwargs):
        this = _noePot.new_NOEPot(*args, **kwargs)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def __deref__(self, *args, **kwargs):
        return _noePot.NOEPot___deref__(self, *args, **kwargs)

    def __ref__(self, *args, **kwargs):
        return _noePot.NOEPot___ref__(self, *args, **kwargs)

    def registerInstanceData(self, *args, **kwargs):
        return _noePot.NOEPot_registerInstanceData(self, *args, **kwargs)

    def decrRefCnt(self, *args, **kwargs):
        return _noePot.NOEPot_decrRefCnt(self, *args, **kwargs)

    def incrRefCnt(self, *args, **kwargs):
        return _noePot.NOEPot_incrRefCnt(self, *args, **kwargs)

    def refCnt(self, *args, **kwargs):
        return _noePot.NOEPot_refCnt(self, *args, **kwargs)

    def instanceData(self, *args, **kwargs):
        return _noePot.NOEPot_instanceData(self, *args, **kwargs)

    def help(self, *args, **kwargs):
        return _noePot.NOEPot_help(self, *args, **kwargs)

    __oldinit__=__init__
    def __init__(self, *args):
        self.__oldinit__(*args)
        self.registerInstanceData(self)

    __swig_destroy__ = _noePot.delete_NOEPot
    __del__ = lambda self: None

    def updateValues(self, *args, **kwargs):
        return _noePot.NOEPot_updateValues(self, *args, **kwargs)

    def removeRestraint(self, *args, **kwargs):
        return _noePot.NOEPot_removeRestraint(self, *args, **kwargs)

    def addRestraints(self, *args, **kwargs):
        return _noePot.NOEPot_addRestraints(self, *args, **kwargs)

    def energyMaybeDerivs0(self, *args, **kwargs):
        return _noePot.NOEPot_energyMaybeDerivs0(self, *args, **kwargs)

    def energyMaybeDerivs1(self, *args, **kwargs):
        return _noePot.NOEPot_energyMaybeDerivs1(self, *args, **kwargs)

    def rms(self, *args, **kwargs):
        return _noePot.NOEPot_rms(self, *args, **kwargs)

    def deviation(self, *args, **kwargs):
        return _noePot.NOEPot_deviation(self, *args, **kwargs)

    def deviationSpread(self, *args, **kwargs):
        return _noePot.NOEPot_deviationSpread(self, *args, **kwargs)

    def violations(self, *args, **kwargs):
        return _noePot.NOEPot_violations(self, *args, **kwargs)

    def numRestraints(self, *args, **kwargs):
        return _noePot.NOEPot_numRestraints(self, *args, **kwargs)

    def simulation2(self, *args, **kwargs):
        return _noePot.NOEPot_simulation2(self, *args, **kwargs)

    def info(self, *args, **kwargs):
        return _noePot.NOEPot_info(self, *args, **kwargs)

    def showRestraints(self, *args, **kwargs):
        return _noePot.NOEPot_showRestraints(self, *args, **kwargs)

    def showViolations(self, *args, **kwargs):
        return _noePot.NOEPot_showViolations(self, *args, **kwargs)

    def restraints(self, *args, **kwargs):
        return _noePot.NOEPot_restraints(self, *args, **kwargs)

    def nMono(self, *args, **kwargs):
        return _noePot.NOEPot_nMono(self, *args, **kwargs)

    def setNMono(self, *args, **kwargs):
        return _noePot.NOEPot_setNMono(self, *args, **kwargs)

    def aveExp(self, *args, **kwargs):
        return _noePot.NOEPot_aveExp(self, *args, **kwargs)

    def setAveExp(self, *args, **kwargs):
        return _noePot.NOEPot_setAveExp(self, *args, **kwargs)

    def dOffset(self, *args, **kwargs):
        return _noePot.NOEPot_dOffset(self, *args, **kwargs)

    def setDOffset(self, *args, **kwargs):
        return _noePot.NOEPot_setDOffset(self, *args, **kwargs)

    def hardExp(self, *args, **kwargs):
        return _noePot.NOEPot_hardExp(self, *args, **kwargs)

    def setHardExp(self, *args, **kwargs):
        return _noePot.NOEPot_setHardExp(self, *args, **kwargs)

    def rSwitch(self, *args, **kwargs):
        return _noePot.NOEPot_rSwitch(self, *args, **kwargs)

    def setRSwitch(self, *args, **kwargs):
        return _noePot.NOEPot_setRSwitch(self, *args, **kwargs)

    def softExp(self, *args, **kwargs):
        return _noePot.NOEPot_softExp(self, *args, **kwargs)

    def setSoftExp(self, *args, **kwargs):
        return _noePot.NOEPot_setSoftExp(self, *args, **kwargs)

    def asympSlope(self, *args, **kwargs):
        return _noePot.NOEPot_asympSlope(self, *args, **kwargs)

    def setAsympSlope(self, *args, **kwargs):
        return _noePot.NOEPot_setAsympSlope(self, *args, **kwargs)

    def allowOverlap(self, *args, **kwargs):
        return _noePot.NOEPot_allowOverlap(self, *args, **kwargs)

    def setAllowOverlap(self, *args, **kwargs):
        return _noePot.NOEPot_setAllowOverlap(self, *args, **kwargs)

    def deleteOverlapping(self, *args, **kwargs):
        return _noePot.NOEPot_deleteOverlapping(self, *args, **kwargs)

    def setDeleteOverlapping(self, *args, **kwargs):
        return _noePot.NOEPot_setDeleteOverlapping(self, *args, **kwargs)

    def verbose(self, *args, **kwargs):
        return _noePot.NOEPot_verbose(self, *args, **kwargs)

    def setVerbose(self, *args, **kwargs):
        return _noePot.NOEPot_setVerbose(self, *args, **kwargs)

    def potType(self, *args, **kwargs):
        return _noePot.NOEPot_potType(self, *args, **kwargs)

    def setPotType(self, *args, **kwargs):
        return _noePot.NOEPot_setPotType(self, *args, **kwargs)

    def aveType(self, *args, **kwargs):
        return _noePot.NOEPot_aveType(self, *args, **kwargs)

    def setAveType(self, *args, **kwargs):
        return _noePot.NOEPot_setAveType(self, *args, **kwargs)

    def showAllRestraints(self, *args, **kwargs):
        return _noePot.NOEPot_showAllRestraints(self, *args, **kwargs)

    def setShowAllRestraints(self, *args, **kwargs):
        return _noePot.NOEPot_setShowAllRestraints(self, *args, **kwargs)

    def useDistMult(self, *args, **kwargs):
        return _noePot.NOEPot_useDistMult(self, *args, **kwargs)

    def setUseDistMult(self, *args, **kwargs):
        return _noePot.NOEPot_setUseDistMult(self, *args, **kwargs)

    def distMult(self, *args, **kwargs):
        return _noePot.NOEPot_distMult(self, *args, **kwargs)

    def setDistMult(self, *args, **kwargs):
        return _noePot.NOEPot_setDistMult(self, *args, **kwargs)

    def help(self, *args, **kwargs):
        return _noePot.NOEPot_help(self, *args, **kwargs)

    def calcEnergy(self, *args, **kwargs):
        return _noePot.NOEPot_calcEnergy(self, *args, **kwargs)

    def calcEnergyAndDerivs(self, *args, **kwargs):
        return _noePot.NOEPot_calcEnergyAndDerivs(self, *args, **kwargs)

    def energyMaybeDerivs2(self, *args, **kwargs):
        return _noePot.NOEPot_energyMaybeDerivs2(self, *args, **kwargs)

    def energyMaybeDerivs3(self, *args, **kwargs):
        return _noePot.NOEPot_energyMaybeDerivs3(self, *args, **kwargs)

    def energyMaybeDerivs4(self, *args, **kwargs):
        return _noePot.NOEPot_energyMaybeDerivs4(self, *args, **kwargs)

    def energyMaybeDerivsPre(self, *args, **kwargs):
        return _noePot.NOEPot_energyMaybeDerivsPre(self, *args, **kwargs)

    def energyMaybeDerivsPost(self, *args, **kwargs):
        return _noePot.NOEPot_energyMaybeDerivsPost(self, *args, **kwargs)

    def simulation(self, *args):
        return _noePot.NOEPot_simulation(self, *args)

    def ensWeight(self, *args, **kwargs):
        return _noePot.NOEPot_ensWeight(self, *args, **kwargs)

    def ensWeights(self, *args, **kwargs):
        return _noePot.NOEPot_ensWeights(self, *args, **kwargs)

    def setEnsWeights(self, *args, **kwargs):
        return _noePot.NOEPot_setEnsWeights(self, *args, **kwargs)

    def addEnsWeights(self, *args, **kwargs):
        return _noePot.NOEPot_addEnsWeights(self, *args, **kwargs)

    def getEnsWeights(self, *args, **kwargs):
        return _noePot.NOEPot_getEnsWeights(self, *args, **kwargs)

    def clearEnsWeights(self, *args, **kwargs):
        return _noePot.NOEPot_clearEnsWeights(self, *args, **kwargs)

    def updateEnsWeights(self, *args, **kwargs):
        return _noePot.NOEPot_updateEnsWeights(self, *args, **kwargs)

    def useSimEnsWeights(self, *args, **kwargs):
        return _noePot.NOEPot_useSimEnsWeights(self, *args, **kwargs)

    def setUseSimEnsWeights(self, *args, **kwargs):
        return _noePot.NOEPot_setUseSimEnsWeights(self, *args, **kwargs)

    def calcWDerivs(self, *args, **kwargs):
        return _noePot.NOEPot_calcWDerivs(self, *args, **kwargs)

    def setCalcWDerivs(self, *args, **kwargs):
        return _noePot.NOEPot_setCalcWDerivs(self, *args, **kwargs)

    def ensWeightsInfo(self, *args, **kwargs):
        return _noePot.NOEPot_ensWeightsInfo(self, *args, **kwargs)

    def potName(self, *args, **kwargs):
        return _noePot.NOEPot_potName(self, *args, **kwargs)

    def instanceName(self, *args, **kwargs):
        return _noePot.NOEPot_instanceName(self, *args, **kwargs)

    def resetPotName(self, *args, **kwargs):
        return _noePot.NOEPot_resetPotName(self, *args, **kwargs)

    def resetInstanceName(self, *args, **kwargs):
        return _noePot.NOEPot_resetInstanceName(self, *args, **kwargs)

    def scale(self, *args, **kwargs):
        return _noePot.NOEPot_scale(self, *args, **kwargs)

    def setScale(self, *args, **kwargs):
        return _noePot.NOEPot_setScale(self, *args, **kwargs)

    def threshold(self, *args, **kwargs):
        return _noePot.NOEPot_threshold(self, *args, **kwargs)

    def setThreshold(self, *args, **kwargs):
        return _noePot.NOEPot_setThreshold(self, *args, **kwargs)

    def updateDelta(self, *args, **kwargs):
        return _noePot.NOEPot_updateDelta(self, *args, **kwargs)
    instanceData_ = _swig_property(_noePot.NOEPot_instanceData__get, _noePot.NOEPot_instanceData__set)
    instanceDataCreate = _swig_property(_noePot.NOEPot_instanceDataCreate_get, _noePot.NOEPot_instanceDataCreate_set)
    instanceDataCleanup = _swig_property(_noePot.NOEPot_instanceDataCleanup_get, _noePot.NOEPot_instanceDataCleanup_set)
    modified = _swig_property(_noePot.NOEPot_modified_get, _noePot.NOEPot_modified_set)
    registeredSimulations = _swig_property(_noePot.NOEPot_registeredSimulations_get, _noePot.NOEPot_registeredSimulations_set)

    def registerTo(self, *args, **kwargs):
        return _noePot.NOEPot_registerTo(self, *args, **kwargs)

    def unRegister(self, *args, **kwargs):
        return _noePot.NOEPot_unRegister(self, *args, **kwargs)

class NOEPotPtr(NOEPot):
    def __init__(self, this):
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
        self.this.own(0)
        self.__class__ = NOEPot

NOEPot_swigregister = _noePot.NOEPot_swigregister
NOEPot_swigregister(NOEPot)


realNOEPot = NOEPot
def NOEPot(*args):
    from potProxy import PotProxy
    return PotProxy( realNOEPot(*args) )

class Restraint_NOEPot(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def diff(self, *args, **kwargs):
        return _noePot.Restraint_NOEPot_diff(self, *args, **kwargs)

    def __init__(self, *args, **kwargs):
        this = _noePot.new_Restraint_NOEPot(*args, **kwargs)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def violated(self, *args, **kwargs):
        return _noePot.Restraint_NOEPot_violated(self, *args, **kwargs)

    def name(self, *args, **kwargs):
        return _noePot.Restraint_NOEPot_name(self, *args, **kwargs)

    def setName(self, *args, **kwargs):
        return _noePot.Restraint_NOEPot_setName(self, *args, **kwargs)
    __swig_destroy__ = _noePot.delete_Restraint_NOEPot
    __del__ = lambda self: None

class Restraint_NOEPotPtr(Restraint_NOEPot):
    def __init__(self, this):
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
        self.this.own(0)
        self.__class__ = Restraint_NOEPot

Restraint_NOEPot_swigregister = _noePot.Restraint_NOEPot_swigregister
Restraint_NOEPot_swigregister(Restraint_NOEPot)

class NOEPot_LetterClass(EnsemblePot):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    SOFT = _noePot.NOEPot_LetterClass_SOFT
    HARD = _noePot.NOEPot_LetterClass_HARD
    LOGNORMAL = _noePot.NOEPot_LetterClass_LOGNORMAL
    AVERAGE = _noePot.NOEPot_LetterClass_AVERAGE
    CENTER = _noePot.NOEPot_LetterClass_CENTER
    SUM = _noePot.NOEPot_LetterClass_SUM
    SHORTEST = _noePot.NOEPot_LetterClass_SHORTEST
    CLOSEST = _noePot.NOEPot_LetterClass_CLOSEST

    def updateValues(self, *args, **kwargs):
        return _noePot.NOEPot_LetterClass_updateValues(self, *args, **kwargs)

    def __init__(self, *args, **kwargs):
        this = _noePot.new_NOEPot_LetterClass(*args, **kwargs)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _noePot.delete_NOEPot_LetterClass
    __del__ = lambda self: None

    def removeRestraint(self, *args, **kwargs):
        return _noePot.NOEPot_LetterClass_removeRestraint(self, *args, **kwargs)

    def addRestraints(self, *args, **kwargs):
        return _noePot.NOEPot_LetterClass_addRestraints(self, *args, **kwargs)

    def energyMaybeDerivs0(self, *args, **kwargs):
        return _noePot.NOEPot_LetterClass_energyMaybeDerivs0(self, *args, **kwargs)

    def energyMaybeDerivs1(self, *args, **kwargs):
        return _noePot.NOEPot_LetterClass_energyMaybeDerivs1(self, *args, **kwargs)

    def rms(self, *args, **kwargs):
        return _noePot.NOEPot_LetterClass_rms(self, *args, **kwargs)

    def deviation(self, *args, **kwargs):
        return _noePot.NOEPot_LetterClass_deviation(self, *args, **kwargs)

    def deviationSpread(self, *args, **kwargs):
        return _noePot.NOEPot_LetterClass_deviationSpread(self, *args, **kwargs)

    def violations(self, *args, **kwargs):
        return _noePot.NOEPot_LetterClass_violations(self, *args, **kwargs)

    def numRestraints(self, *args, **kwargs):
        return _noePot.NOEPot_LetterClass_numRestraints(self, *args, **kwargs)

    def simulation2(self, *args, **kwargs):
        return _noePot.NOEPot_LetterClass_simulation2(self, *args, **kwargs)

    def info(self, *args, **kwargs):
        return _noePot.NOEPot_LetterClass_info(self, *args, **kwargs)

    def showRestraints(self, *args, **kwargs):
        return _noePot.NOEPot_LetterClass_showRestraints(self, *args, **kwargs)

    def showViolations(self, *args, **kwargs):
        return _noePot.NOEPot_LetterClass_showViolations(self, *args, **kwargs)

    def restraints(self, *args, **kwargs):
        return _noePot.NOEPot_LetterClass_restraints(self, *args, **kwargs)

    def nMono(self, *args, **kwargs):
        return _noePot.NOEPot_LetterClass_nMono(self, *args, **kwargs)

    def setNMono(self, *args, **kwargs):
        return _noePot.NOEPot_LetterClass_setNMono(self, *args, **kwargs)

    def aveExp(self, *args, **kwargs):
        return _noePot.NOEPot_LetterClass_aveExp(self, *args, **kwargs)

    def setAveExp(self, *args, **kwargs):
        return _noePot.NOEPot_LetterClass_setAveExp(self, *args, **kwargs)

    def dOffset(self, *args, **kwargs):
        return _noePot.NOEPot_LetterClass_dOffset(self, *args, **kwargs)

    def setDOffset(self, *args, **kwargs):
        return _noePot.NOEPot_LetterClass_setDOffset(self, *args, **kwargs)

    def hardExp(self, *args, **kwargs):
        return _noePot.NOEPot_LetterClass_hardExp(self, *args, **kwargs)

    def setHardExp(self, *args, **kwargs):
        return _noePot.NOEPot_LetterClass_setHardExp(self, *args, **kwargs)

    def rSwitch(self, *args, **kwargs):
        return _noePot.NOEPot_LetterClass_rSwitch(self, *args, **kwargs)

    def setRSwitch(self, *args, **kwargs):
        return _noePot.NOEPot_LetterClass_setRSwitch(self, *args, **kwargs)

    def softExp(self, *args, **kwargs):
        return _noePot.NOEPot_LetterClass_softExp(self, *args, **kwargs)

    def setSoftExp(self, *args, **kwargs):
        return _noePot.NOEPot_LetterClass_setSoftExp(self, *args, **kwargs)

    def asympSlope(self, *args, **kwargs):
        return _noePot.NOEPot_LetterClass_asympSlope(self, *args, **kwargs)

    def setAsympSlope(self, *args, **kwargs):
        return _noePot.NOEPot_LetterClass_setAsympSlope(self, *args, **kwargs)

    def allowOverlap(self, *args, **kwargs):
        return _noePot.NOEPot_LetterClass_allowOverlap(self, *args, **kwargs)

    def setAllowOverlap(self, *args, **kwargs):
        return _noePot.NOEPot_LetterClass_setAllowOverlap(self, *args, **kwargs)

    def deleteOverlapping(self, *args, **kwargs):
        return _noePot.NOEPot_LetterClass_deleteOverlapping(self, *args, **kwargs)

    def setDeleteOverlapping(self, *args, **kwargs):
        return _noePot.NOEPot_LetterClass_setDeleteOverlapping(self, *args, **kwargs)

    def verbose(self, *args, **kwargs):
        return _noePot.NOEPot_LetterClass_verbose(self, *args, **kwargs)

    def setVerbose(self, *args, **kwargs):
        return _noePot.NOEPot_LetterClass_setVerbose(self, *args, **kwargs)

    def potType(self, *args, **kwargs):
        return _noePot.NOEPot_LetterClass_potType(self, *args, **kwargs)

    def setPotType(self, *args, **kwargs):
        return _noePot.NOEPot_LetterClass_setPotType(self, *args, **kwargs)

    def aveType(self, *args, **kwargs):
        return _noePot.NOEPot_LetterClass_aveType(self, *args, **kwargs)

    def setAveType(self, *args, **kwargs):
        return _noePot.NOEPot_LetterClass_setAveType(self, *args, **kwargs)

    def showAllRestraints(self, *args, **kwargs):
        return _noePot.NOEPot_LetterClass_showAllRestraints(self, *args, **kwargs)

    def setShowAllRestraints(self, *args, **kwargs):
        return _noePot.NOEPot_LetterClass_setShowAllRestraints(self, *args, **kwargs)

    def useDistMult(self, *args, **kwargs):
        return _noePot.NOEPot_LetterClass_useDistMult(self, *args, **kwargs)

    def setUseDistMult(self, *args, **kwargs):
        return _noePot.NOEPot_LetterClass_setUseDistMult(self, *args, **kwargs)

    def distMult(self, *args, **kwargs):
        return _noePot.NOEPot_LetterClass_distMult(self, *args, **kwargs)

    def setDistMult(self, *args, **kwargs):
        return _noePot.NOEPot_LetterClass_setDistMult(self, *args, **kwargs)

    def help(self, *args, **kwargs):
        return _noePot.NOEPot_LetterClass_help(self, *args, **kwargs)

class NOEPot_LetterClassPtr(NOEPot_LetterClass):
    def __init__(self, this):
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
        self.this.own(0)
        self.__class__ = NOEPot_LetterClass

NOEPot_LetterClass_swigregister = _noePot.NOEPot_LetterClass_swigregister
NOEPot_LetterClass_swigregister(NOEPot_LetterClass)

class NOERestraint(Restraint_NOEPot):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    LESS = _noePot.NOERestraint_LESS
    GREATER = _noePot.NOERestraint_GREATER
    INSIDE = _noePot.NOERestraint_INSIDE
    selPairs_ = _swig_property(_noePot.NOERestraint_selPairs__get, _noePot.NOERestraint_selPairs__set)
    atomi = _swig_property(_noePot.NOERestraint_atomi_get, _noePot.NOERestraint_atomi_set)
    atomj = _swig_property(_noePot.NOERestraint_atomj_get, _noePot.NOERestraint_atomj_set)
    variance = _swig_property(_noePot.NOERestraint_variance_get, _noePot.NOERestraint_variance_set)
    verbose = _swig_property(_noePot.NOERestraint_verbose_get, _noePot.NOERestraint_verbose_set)

    def __init__(self, *args, **kwargs):
        this = _noePot.new_NOERestraint(*args, **kwargs)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _noePot.delete_NOERestraint
    __del__ = lambda self: None

    def ok(self, *args, **kwargs):
        return _noePot.NOERestraint_ok(self, *args, **kwargs)

    def dist(self, *args, **kwargs):
        return _noePot.NOERestraint_dist(self, *args, **kwargs)

    def status(self, *args, **kwargs):
        return _noePot.NOERestraint_status(self, *args, **kwargs)

    def comment(self, *args, **kwargs):
        return _noePot.NOERestraint_comment(self, *args, **kwargs)

    def setComment(self, *args, **kwargs):
        return _noePot.NOERestraint_setComment(self, *args, **kwargs)

    def d(self, *args, **kwargs):
        return _noePot.NOERestraint_d(self, *args, **kwargs)

    def setD(self, *args, **kwargs):
        return _noePot.NOERestraint_setD(self, *args, **kwargs)

    def dMinus(self, *args, **kwargs):
        return _noePot.NOERestraint_dMinus(self, *args, **kwargs)

    def setDMinus(self, *args, **kwargs):
        return _noePot.NOERestraint_setDMinus(self, *args, **kwargs)

    def dPlus(self, *args, **kwargs):
        return _noePot.NOERestraint_dPlus(self, *args, **kwargs)

    def setDPlus(self, *args, **kwargs):
        return _noePot.NOERestraint_setDPlus(self, *args, **kwargs)

    def weight(self, *args, **kwargs):
        return _noePot.NOERestraint_weight(self, *args, **kwargs)

    def setWeight(self, *args, **kwargs):
        return _noePot.NOERestraint_setWeight(self, *args, **kwargs)

    def probability(self, *args, **kwargs):
        return _noePot.NOERestraint_probability(self, *args, **kwargs)

    def setProbability(self, *args, **kwargs):
        return _noePot.NOERestraint_setProbability(self, *args, **kwargs)

    def logDiff(self, *args, **kwargs):
        return _noePot.NOERestraint_logDiff(self, *args, **kwargs)

    def selPairs(self, *args, **kwargs):
        return _noePot.NOERestraint_selPairs(self, *args, **kwargs)

    def name(self, *args, **kwargs):
        return _noePot.NOERestraint_name(self, *args, **kwargs)

    def __eq__(self, *args, **kwargs):
        return _noePot.NOERestraint___eq__(self, *args, **kwargs)

    def calcContrib(self, *args, **kwargs):
        return _noePot.NOERestraint_calcContrib(self, *args, **kwargs)

    def calcDistanceDiff(self, *args, **kwargs):
        return _noePot.NOERestraint_calcDistanceDiff(self, *args, **kwargs)

    def energy(self, *args, **kwargs):
        return _noePot.NOERestraint_energy(self, *args, **kwargs)

    def deriv(self, *args, **kwargs):
        return _noePot.NOERestraint_deriv(self, *args, **kwargs)

    def asString(self, *args, **kwargs):
        return _noePot.NOERestraint_asString(self, *args, **kwargs)

    def bestPair(self, *args, **kwargs):
        return _noePot.NOERestraint_bestPair(self, *args, **kwargs)

class NOERestraintPtr(NOERestraint):
    def __init__(self, this):
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
        self.this.own(0)
        self.__class__ = NOERestraint

NOERestraint_swigregister = _noePot.NOERestraint_swigregister
NOERestraint_swigregister(NOERestraint)

class rc_ptr_NOERestraint(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        this = _noePot.new_rc_ptr_NOERestraint(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _noePot.delete_rc_ptr_NOERestraint
    __del__ = lambda self: None

    def __deref__(self, *args, **kwargs):
        return _noePot.rc_ptr_NOERestraint___deref__(self, *args, **kwargs)

    def __ref__(self, *args, **kwargs):
        return _noePot.rc_ptr_NOERestraint___ref__(self, *args, **kwargs)

    def ptr(self, *args, **kwargs):
        return _noePot.rc_ptr_NOERestraint_ptr(self, *args, **kwargs)

    def incr(self, *args, **kwargs):
        return _noePot.rc_ptr_NOERestraint_incr(self, *args, **kwargs)

    def decr(self, *args, **kwargs):
        return _noePot.rc_ptr_NOERestraint_decr(self, *args, **kwargs)

    def count(self, *args, **kwargs):
        return _noePot.rc_ptr_NOERestraint_count(self, *args, **kwargs)

    def forceDelete(self, *args, **kwargs):
        return _noePot.rc_ptr_NOERestraint_forceDelete(self, *args, **kwargs)

    def reset(self, *args, **kwargs):
        return _noePot.rc_ptr_NOERestraint_reset(self, *args, **kwargs)

    def release(self, *args, **kwargs):
        return _noePot.rc_ptr_NOERestraint_release(self, *args, **kwargs)
    selPairs_ = _swig_property(_noePot.rc_ptr_NOERestraint_selPairs__get, _noePot.rc_ptr_NOERestraint_selPairs__set)
    atomi = _swig_property(_noePot.rc_ptr_NOERestraint_atomi_get, _noePot.rc_ptr_NOERestraint_atomi_set)
    atomj = _swig_property(_noePot.rc_ptr_NOERestraint_atomj_get, _noePot.rc_ptr_NOERestraint_atomj_set)
    variance = _swig_property(_noePot.rc_ptr_NOERestraint_variance_get, _noePot.rc_ptr_NOERestraint_variance_set)
    verbose = _swig_property(_noePot.rc_ptr_NOERestraint_verbose_get, _noePot.rc_ptr_NOERestraint_verbose_set)

    def ok(self, *args, **kwargs):
        return _noePot.rc_ptr_NOERestraint_ok(self, *args, **kwargs)

    def dist(self, *args, **kwargs):
        return _noePot.rc_ptr_NOERestraint_dist(self, *args, **kwargs)

    def status(self, *args, **kwargs):
        return _noePot.rc_ptr_NOERestraint_status(self, *args, **kwargs)

    def comment(self, *args, **kwargs):
        return _noePot.rc_ptr_NOERestraint_comment(self, *args, **kwargs)

    def setComment(self, *args, **kwargs):
        return _noePot.rc_ptr_NOERestraint_setComment(self, *args, **kwargs)

    def d(self, *args, **kwargs):
        return _noePot.rc_ptr_NOERestraint_d(self, *args, **kwargs)

    def setD(self, *args, **kwargs):
        return _noePot.rc_ptr_NOERestraint_setD(self, *args, **kwargs)

    def dMinus(self, *args, **kwargs):
        return _noePot.rc_ptr_NOERestraint_dMinus(self, *args, **kwargs)

    def setDMinus(self, *args, **kwargs):
        return _noePot.rc_ptr_NOERestraint_setDMinus(self, *args, **kwargs)

    def dPlus(self, *args, **kwargs):
        return _noePot.rc_ptr_NOERestraint_dPlus(self, *args, **kwargs)

    def setDPlus(self, *args, **kwargs):
        return _noePot.rc_ptr_NOERestraint_setDPlus(self, *args, **kwargs)

    def weight(self, *args, **kwargs):
        return _noePot.rc_ptr_NOERestraint_weight(self, *args, **kwargs)

    def setWeight(self, *args, **kwargs):
        return _noePot.rc_ptr_NOERestraint_setWeight(self, *args, **kwargs)

    def probability(self, *args, **kwargs):
        return _noePot.rc_ptr_NOERestraint_probability(self, *args, **kwargs)

    def setProbability(self, *args, **kwargs):
        return _noePot.rc_ptr_NOERestraint_setProbability(self, *args, **kwargs)

    def logDiff(self, *args, **kwargs):
        return _noePot.rc_ptr_NOERestraint_logDiff(self, *args, **kwargs)

    def selPairs(self, *args, **kwargs):
        return _noePot.rc_ptr_NOERestraint_selPairs(self, *args, **kwargs)

    def name(self, *args, **kwargs):
        return _noePot.rc_ptr_NOERestraint_name(self, *args, **kwargs)

    def __eq__(self, *args, **kwargs):
        return _noePot.rc_ptr_NOERestraint___eq__(self, *args, **kwargs)

    def calcContrib(self, *args, **kwargs):
        return _noePot.rc_ptr_NOERestraint_calcContrib(self, *args, **kwargs)

    def calcDistanceDiff(self, *args, **kwargs):
        return _noePot.rc_ptr_NOERestraint_calcDistanceDiff(self, *args, **kwargs)

    def energy(self, *args, **kwargs):
        return _noePot.rc_ptr_NOERestraint_energy(self, *args, **kwargs)

    def deriv(self, *args, **kwargs):
        return _noePot.rc_ptr_NOERestraint_deriv(self, *args, **kwargs)

    def asString(self, *args, **kwargs):
        return _noePot.rc_ptr_NOERestraint_asString(self, *args, **kwargs)

    def bestPair(self, *args, **kwargs):
        return _noePot.rc_ptr_NOERestraint_bestPair(self, *args, **kwargs)

    def diff(self, *args, **kwargs):
        return _noePot.rc_ptr_NOERestraint_diff(self, *args, **kwargs)

    def violated(self, *args, **kwargs):
        return _noePot.rc_ptr_NOERestraint_violated(self, *args, **kwargs)

    def setName(self, *args, **kwargs):
        return _noePot.rc_ptr_NOERestraint_setName(self, *args, **kwargs)

class rc_ptr_NOERestraintPtr(rc_ptr_NOERestraint):
    def __init__(self, this):
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
        self.this.own(0)
        self.__class__ = rc_ptr_NOERestraint

rc_ptr_NOERestraint_swigregister = _noePot.rc_ptr_NOERestraint_swigregister
rc_ptr_NOERestraint_swigregister(rc_ptr_NOERestraint)

class CDSList_NOERestraint(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __len__(self, *args, **kwargs):
        return _noePot.CDSList_NOERestraint___len__(self, *args, **kwargs)

    def __init__(self, *args):
        this = _noePot.new_CDSList_NOERestraint(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def __getitem__(self, *args):
        return _noePot.CDSList_NOERestraint___getitem__(self, *args)

    def __delitem__(self, *args, **kwargs):
        return _noePot.CDSList_NOERestraint___delitem__(self, *args, **kwargs)

    def append(self, *args, **kwargs):
        return _noePot.CDSList_NOERestraint_append(self, *args, **kwargs)

    def remove(self, *args, **kwargs):
        return _noePot.CDSList_NOERestraint_remove(self, *args, **kwargs)

    def removeAll(self, *args, **kwargs):
        return _noePot.CDSList_NOERestraint_removeAll(self, *args, **kwargs)

    def __setitem__(self, *args, **kwargs):
        return _noePot.CDSList_NOERestraint___setitem__(self, *args, **kwargs)

    def __getslice__(self, *args, **kwargs):
        return _noePot.CDSList_NOERestraint___getslice__(self, *args, **kwargs)

    def help(self, *args, **kwargs):
        return _noePot.CDSList_NOERestraint_help(self, *args, **kwargs)
    __swig_destroy__ = _noePot.delete_CDSList_NOERestraint
    __del__ = lambda self: None

class CDSList_NOERestraintPtr(CDSList_NOERestraint):
    def __init__(self, this):
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
        self.this.own(0)
        self.__class__ = CDSList_NOERestraint

CDSList_NOERestraint_swigregister = _noePot.CDSList_NOERestraint_swigregister
CDSList_NOERestraint_swigregister(CDSList_NOERestraint)

class CDSList_NOESelPair(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __len__(self, *args, **kwargs):
        return _noePot.CDSList_NOESelPair___len__(self, *args, **kwargs)

    def __init__(self, *args):
        this = _noePot.new_CDSList_NOESelPair(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def __getitem__(self, *args):
        return _noePot.CDSList_NOESelPair___getitem__(self, *args)

    def __delitem__(self, *args, **kwargs):
        return _noePot.CDSList_NOESelPair___delitem__(self, *args, **kwargs)

    def append(self, *args, **kwargs):
        return _noePot.CDSList_NOESelPair_append(self, *args, **kwargs)

    def remove(self, *args, **kwargs):
        return _noePot.CDSList_NOESelPair_remove(self, *args, **kwargs)

    def removeAll(self, *args, **kwargs):
        return _noePot.CDSList_NOESelPair_removeAll(self, *args, **kwargs)

    def __setitem__(self, *args, **kwargs):
        return _noePot.CDSList_NOESelPair___setitem__(self, *args, **kwargs)

    def __getslice__(self, *args, **kwargs):
        return _noePot.CDSList_NOESelPair___getslice__(self, *args, **kwargs)

    def help(self, *args, **kwargs):
        return _noePot.CDSList_NOESelPair_help(self, *args, **kwargs)
    __swig_destroy__ = _noePot.delete_CDSList_NOESelPair
    __del__ = lambda self: None

class CDSList_NOESelPairPtr(CDSList_NOESelPair):
    def __init__(self, this):
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
        self.this.own(0)
        self.__class__ = CDSList_NOESelPair

CDSList_NOESelPair_swigregister = _noePot.CDSList_NOESelPair_swigregister
CDSList_NOESelPair_swigregister(CDSList_NOESelPair)

class NOESelPair(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    a = _swig_property(_noePot.NOESelPair_a_get, _noePot.NOESelPair_a_set)
    b = _swig_property(_noePot.NOESelPair_b_get, _noePot.NOESelPair_b_set)

    def __init__(self, *args):
        this = _noePot.new_NOESelPair(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def __eq__(self, *args, **kwargs):
        return _noePot.NOESelPair___eq__(self, *args, **kwargs)
    __swig_destroy__ = _noePot.delete_NOESelPair
    __del__ = lambda self: None

class NOESelPairPtr(NOESelPair):
    def __init__(self, this):
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
        self.this.own(0)
        self.__class__ = NOESelPair

NOESelPair_swigregister = _noePot.NOESelPair_swigregister
NOESelPair_swigregister(NOESelPair)


def sel1_get(self):
    return self.selPairs()[0].a
def sel2_get(self):
    return self.selPairs()[0].b
rc_ptr_NOERestraint.sel1 = property(sel1_get)
rc_ptr_NOERestraint.sel2 = property(sel2_get)


pyXplorHelp = help


def help(*args):
    return _noePot.help(*args)
help = _noePot.help


