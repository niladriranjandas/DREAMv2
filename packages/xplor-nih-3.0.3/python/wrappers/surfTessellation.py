# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_surfTessellation')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_surfTessellation')
    _surfTessellation = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_surfTessellation', [dirname(__file__)])
        except ImportError:
            import _surfTessellation
            return _surfTessellation
        try:
            _mod = imp.load_module('_surfTessellation', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _surfTessellation = swig_import_helper()
    del swig_import_helper
else:
    import _surfTessellation
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


class SurfTessellation(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    surf = _swig_property(_surfTessellation.SurfTessellation_surf_get, _surfTessellation.SurfTessellation_surf_set)
    oldSurf = _swig_property(_surfTessellation.SurfTessellation_oldSurf_get, _surfTessellation.SurfTessellation_oldSurf_set)
    oldSurfUsed = _swig_property(_surfTessellation.SurfTessellation_oldSurfUsed_get, _surfTessellation.SurfTessellation_oldSurfUsed_set)
    atoms_swap = _swig_property(_surfTessellation.SurfTessellation_atoms_swap_get, _surfTessellation.SurfTessellation_atoms_swap_set)
    radii = _swig_property(_surfTessellation.SurfTessellation_radii_get, _surfTessellation.SurfTessellation_radii_set)
    diffShell_ = _swig_property(_surfTessellation.SurfTessellation_diffShell__get, _surfTessellation.SurfTessellation_diffShell__set)

    def update_radii(self, *args, **kwargs):
        return _surfTessellation.SurfTessellation_update_radii(self, *args, **kwargs)

    def check_extents_of_input(self, *args, **kwargs):
        return _surfTessellation.SurfTessellation_check_extents_of_input(self, *args, **kwargs)

    def updateValues(self, *args, **kwargs):
        return _surfTessellation.SurfTessellation_updateValues(self, *args, **kwargs)

    def __init__(self, *args, **kwargs):
        this = _surfTessellation.new_SurfTessellation(*args, **kwargs)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _surfTessellation.delete_SurfTessellation
    __del__ = lambda self: None

    def calcSurf(self, *args, **kwargs):
        return _surfTessellation.SurfTessellation_calcSurf(self, *args, **kwargs)

    def get_rmsd(self, *args, **kwargs):
        return _surfTessellation.SurfTessellation_get_rmsd(self, *args, **kwargs)

    def getAtomSel(self, *args, **kwargs):
        return _surfTessellation.SurfTessellation_getAtomSel(self, *args, **kwargs)

    def moveTol(self, *args, **kwargs):
        return _surfTessellation.SurfTessellation_moveTol(self, *args, **kwargs)

    def setMoveTol(self, *args, **kwargs):
        return _surfTessellation.SurfTessellation_setMoveTol(self, *args, **kwargs)

    def verbose(self, *args, **kwargs):
        return _surfTessellation.SurfTessellation_verbose(self, *args, **kwargs)

    def setVerbose(self, *args, **kwargs):
        return _surfTessellation.SurfTessellation_setVerbose(self, *args, **kwargs)

    def savePrev(self, *args, **kwargs):
        return _surfTessellation.SurfTessellation_savePrev(self, *args, **kwargs)

    def setSavePrev(self, *args, **kwargs):
        return _surfTessellation.SurfTessellation_setSavePrev(self, *args, **kwargs)

    def diffShell(self, *args, **kwargs):
        return _surfTessellation.SurfTessellation_diffShell(self, *args, **kwargs)

    def setDiffShell(self, *args, **kwargs):
        return _surfTessellation.SurfTessellation_setDiffShell(self, *args, **kwargs)
    makeSurfTessellation = staticmethod(_surfTessellation.SurfTessellation_makeSurfTessellation)

    def stale(self, *args, **kwargs):
        return _surfTessellation.SurfTessellation_stale(self, *args, **kwargs)

    def makeStale(self, *args, **kwargs):
        return _surfTessellation.SurfTessellation_makeStale(self, *args, **kwargs)

    def retessellateIfNecessary(self, *args, **kwargs):
        return _surfTessellation.SurfTessellation_retessellateIfNecessary(self, *args, **kwargs)

    def needsRetessellation(self, *args, **kwargs):
        return _surfTessellation.SurfTessellation_needsRetessellation(self, *args, **kwargs)

    def tessellate(self, *args, **kwargs):
        return _surfTessellation.SurfTessellation_tessellate(self, *args, **kwargs)

class SurfTessellationPtr(SurfTessellation):
    def __init__(self, this):
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
        self.this.own(0)
        self.__class__ = SurfTessellation

SurfTessellation_swigregister = _surfTessellation.SurfTessellation_swigregister
SurfTessellation_swigregister(SurfTessellation)

def SurfTessellation_makeSurfTessellation(*args, **kwargs):
    return _surfTessellation.SurfTessellation_makeSurfTessellation(*args, **kwargs)
SurfTessellation_makeSurfTessellation = _surfTessellation.SurfTessellation_makeSurfTessellation


oldSurfTessellation=SurfTessellation
def SurfTessellation(*args):
    return SurfTessellation_makeSurfTessellation(*args)   

class rc_SurfTessellation(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        this = _surfTessellation.new_rc_SurfTessellation(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _surfTessellation.delete_rc_SurfTessellation
    __del__ = lambda self: None

    def __deref__(self, *args, **kwargs):
        return _surfTessellation.rc_SurfTessellation___deref__(self, *args, **kwargs)

    def __ref__(self, *args, **kwargs):
        return _surfTessellation.rc_SurfTessellation___ref__(self, *args, **kwargs)

    def ptr(self, *args, **kwargs):
        return _surfTessellation.rc_SurfTessellation_ptr(self, *args, **kwargs)

    def incr(self, *args, **kwargs):
        return _surfTessellation.rc_SurfTessellation_incr(self, *args, **kwargs)

    def decr(self, *args, **kwargs):
        return _surfTessellation.rc_SurfTessellation_decr(self, *args, **kwargs)

    def count(self, *args, **kwargs):
        return _surfTessellation.rc_SurfTessellation_count(self, *args, **kwargs)

    def forceDelete(self, *args, **kwargs):
        return _surfTessellation.rc_SurfTessellation_forceDelete(self, *args, **kwargs)

    def reset(self, *args, **kwargs):
        return _surfTessellation.rc_SurfTessellation_reset(self, *args, **kwargs)

    def release(self, *args, **kwargs):
        return _surfTessellation.rc_SurfTessellation_release(self, *args, **kwargs)

    def help(self, *args, **kwargs):
        return _surfTessellation.rc_SurfTessellation_help(self, *args, **kwargs)
    surf = _swig_property(_surfTessellation.rc_SurfTessellation_surf_get, _surfTessellation.rc_SurfTessellation_surf_set)
    oldSurf = _swig_property(_surfTessellation.rc_SurfTessellation_oldSurf_get, _surfTessellation.rc_SurfTessellation_oldSurf_set)
    oldSurfUsed = _swig_property(_surfTessellation.rc_SurfTessellation_oldSurfUsed_get, _surfTessellation.rc_SurfTessellation_oldSurfUsed_set)
    atoms_swap = _swig_property(_surfTessellation.rc_SurfTessellation_atoms_swap_get, _surfTessellation.rc_SurfTessellation_atoms_swap_set)
    radii = _swig_property(_surfTessellation.rc_SurfTessellation_radii_get, _surfTessellation.rc_SurfTessellation_radii_set)
    diffShell_ = _swig_property(_surfTessellation.rc_SurfTessellation_diffShell__get, _surfTessellation.rc_SurfTessellation_diffShell__set)

    def update_radii(self, *args, **kwargs):
        return _surfTessellation.rc_SurfTessellation_update_radii(self, *args, **kwargs)

    def check_extents_of_input(self, *args, **kwargs):
        return _surfTessellation.rc_SurfTessellation_check_extents_of_input(self, *args, **kwargs)

    def updateValues(self, *args, **kwargs):
        return _surfTessellation.rc_SurfTessellation_updateValues(self, *args, **kwargs)

    def calcSurf(self, *args, **kwargs):
        return _surfTessellation.rc_SurfTessellation_calcSurf(self, *args, **kwargs)

    def get_rmsd(self, *args, **kwargs):
        return _surfTessellation.rc_SurfTessellation_get_rmsd(self, *args, **kwargs)

    def getAtomSel(self, *args, **kwargs):
        return _surfTessellation.rc_SurfTessellation_getAtomSel(self, *args, **kwargs)

    def moveTol(self, *args, **kwargs):
        return _surfTessellation.rc_SurfTessellation_moveTol(self, *args, **kwargs)

    def setMoveTol(self, *args, **kwargs):
        return _surfTessellation.rc_SurfTessellation_setMoveTol(self, *args, **kwargs)

    def verbose(self, *args, **kwargs):
        return _surfTessellation.rc_SurfTessellation_verbose(self, *args, **kwargs)

    def setVerbose(self, *args, **kwargs):
        return _surfTessellation.rc_SurfTessellation_setVerbose(self, *args, **kwargs)

    def savePrev(self, *args, **kwargs):
        return _surfTessellation.rc_SurfTessellation_savePrev(self, *args, **kwargs)

    def setSavePrev(self, *args, **kwargs):
        return _surfTessellation.rc_SurfTessellation_setSavePrev(self, *args, **kwargs)

    def diffShell(self, *args, **kwargs):
        return _surfTessellation.rc_SurfTessellation_diffShell(self, *args, **kwargs)

    def setDiffShell(self, *args, **kwargs):
        return _surfTessellation.rc_SurfTessellation_setDiffShell(self, *args, **kwargs)

    def makeSurfTessellation(self, *args, **kwargs):
        return _surfTessellation.rc_SurfTessellation_makeSurfTessellation(self, *args, **kwargs)

    def stale(self, *args, **kwargs):
        return _surfTessellation.rc_SurfTessellation_stale(self, *args, **kwargs)

    def makeStale(self, *args, **kwargs):
        return _surfTessellation.rc_SurfTessellation_makeStale(self, *args, **kwargs)

    def retessellateIfNecessary(self, *args, **kwargs):
        return _surfTessellation.rc_SurfTessellation_retessellateIfNecessary(self, *args, **kwargs)

    def needsRetessellation(self, *args, **kwargs):
        return _surfTessellation.rc_SurfTessellation_needsRetessellation(self, *args, **kwargs)

    def tessellate(self, *args, **kwargs):
        return _surfTessellation.rc_SurfTessellation_tessellate(self, *args, **kwargs)

class rc_SurfTessellationPtr(rc_SurfTessellation):
    def __init__(self, this):
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
        self.this.own(0)
        self.__class__ = rc_SurfTessellation

rc_SurfTessellation_swigregister = _surfTessellation.rc_SurfTessellation_swigregister
rc_SurfTessellation_swigregister(rc_SurfTessellation)


pyXplorHelp = help


def help(*args):
    return _surfTessellation.help(*args)
help = _surfTessellation.help


