# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_eefxPot')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_eefxPot')
    _eefxPot = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_eefxPot', [dirname(__file__)])
        except ImportError:
            import _eefxPot
            return _eefxPot
        try:
            _mod = imp.load_module('_eefxPot', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _eefxPot = swig_import_helper()
    del swig_import_helper
else:
    import _eefxPot
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


class Modified(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    MOD_SELF = _eefxPot.Modified_MOD_SELF
    MOD_SIMULATION = _eefxPot.Modified_MOD_SIMULATION

    def __init__(self, *args, **kwargs):
        this = _eefxPot.new_Modified(*args, **kwargs)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def set(self, *args, **kwargs):
        return _eefxPot.Modified_set(self, *args, **kwargs)

    def clear(self, *args, **kwargs):
        return _eefxPot.Modified_clear(self, *args, **kwargs)

    def update(self, *args, **kwargs):
        return _eefxPot.Modified_update(self, *args, **kwargs)

    def value(self, *args, **kwargs):
        return _eefxPot.Modified_value(self, *args, **kwargs)

    def __call__(self, *args, **kwargs):
        return _eefxPot.Modified___call__(self, *args, **kwargs)
    __swig_destroy__ = _eefxPot.delete_Modified
    __del__ = lambda self: None

class ModifiedPtr(Modified):
    def __init__(self, this):
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
        self.this.own(0)
        self.__class__ = Modified

Modified_swigregister = _eefxPot.Modified_swigregister
Modified_swigregister(Modified)

class ModifiedBase(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    modified = _swig_property(_eefxPot.ModifiedBase_modified_get, _eefxPot.ModifiedBase_modified_set)
    registeredSimulations = _swig_property(_eefxPot.ModifiedBase_registeredSimulations_get, _eefxPot.ModifiedBase_registeredSimulations_set)
    __swig_destroy__ = _eefxPot.delete_ModifiedBase
    __del__ = lambda self: None

    def registerTo(self, *args, **kwargs):
        return _eefxPot.ModifiedBase_registerTo(self, *args, **kwargs)

    def unRegister(self, *args, **kwargs):
        return _eefxPot.ModifiedBase_unRegister(self, *args, **kwargs)

    def updateValues(self, *args, **kwargs):
        return _eefxPot.ModifiedBase_updateValues(self, *args, **kwargs)

class ModifiedBasePtr(ModifiedBase):
    def __init__(self, this):
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
        self.this.own(0)
        self.__class__ = ModifiedBase

ModifiedBase_swigregister = _eefxPot.ModifiedBase_swigregister
ModifiedBase_swigregister(ModifiedBase)


import potProxy

class EEFxPot(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args, **kwargs):
        this = _eefxPot.new_EEFxPot(*args, **kwargs)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def __deref__(self, *args, **kwargs):
        return _eefxPot.EEFxPot___deref__(self, *args, **kwargs)

    def __ref__(self, *args, **kwargs):
        return _eefxPot.EEFxPot___ref__(self, *args, **kwargs)

    def elecPot(self):
      term = self.elecPot_cxx()
      term.base = self
      term = potProxy.PotProxy(term)
      term.registerInstanceData(term._obj)
      term.incrRefCnt()
      return term
    def solvPot(self):
      term = self.solvPot_cxx()
      term.base = self
      term = potProxy.PotProxy(term)
      term.registerInstanceData(term._obj)
      term.incrRefCnt()
      return term
    def vdwPot(self):
      term = self.vdwPot_cxx()
      term.base = self
      term = potProxy.PotProxy(term)
      term.registerInstanceData(term._obj)
      term.incrRefCnt()
      return term




    def registerInstanceData(self, *args, **kwargs):
        return _eefxPot.EEFxPot_registerInstanceData(self, *args, **kwargs)

    def decrRefCnt(self, *args, **kwargs):
        return _eefxPot.EEFxPot_decrRefCnt(self, *args, **kwargs)

    def incrRefCnt(self, *args, **kwargs):
        return _eefxPot.EEFxPot_incrRefCnt(self, *args, **kwargs)

    def refCnt(self, *args, **kwargs):
        return _eefxPot.EEFxPot_refCnt(self, *args, **kwargs)

    def instanceData(self, *args, **kwargs):
        return _eefxPot.EEFxPot_instanceData(self, *args, **kwargs)

    def help(self, *args, **kwargs):
        return _eefxPot.EEFxPot_help(self, *args, **kwargs)

    __oldinit__=__init__
    def __init__(self, *args):
        self.__oldinit__(*args)
        self.registerInstanceData(self)

    __swig_destroy__ = _eefxPot.delete_EEFxPot
    __del__ = lambda self: None

    def updateValues(self, *args, **kwargs):
        return _eefxPot.EEFxPot_updateValues(self, *args, **kwargs)
    numAtoms = _swig_property(_eefxPot.EEFxPot_numAtoms_get)
    elecEnergy = _swig_property(_eefxPot.EEFxPot_elecEnergy_get, _eefxPot.EEFxPot_elecEnergy_set)
    solvEnergy = _swig_property(_eefxPot.EEFxPot_solvEnergy_get, _eefxPot.EEFxPot_solvEnergy_set)
    vdwEnergy = _swig_property(_eefxPot.EEFxPot_vdwEnergy_get, _eefxPot.EEFxPot_vdwEnergy_set)
    elecPot_member = _swig_property(_eefxPot.EEFxPot_elecPot_member_get)
    solvPot_member = _swig_property(_eefxPot.EEFxPot_solvPot_member_get)
    vdwPot_member = _swig_property(_eefxPot.EEFxPot_vdwPot_member_get)
    staleGradient = _swig_property(_eefxPot.EEFxPot_staleGradient_get, _eefxPot.EEFxPot_staleGradient_set)

    def calcEnergy(self, *args, **kwargs):
        return _eefxPot.EEFxPot_calcEnergy(self, *args, **kwargs)

    def calcEnergyAndDerivs(self, *args, **kwargs):
        return _eefxPot.EEFxPot_calcEnergyAndDerivs(self, *args, **kwargs)

    def setTemperature(self, *args, **kwargs):
        return _eefxPot.EEFxPot_setTemperature(self, *args, **kwargs)

    def showParam(self, *args, **kwargs):
        return _eefxPot.EEFxPot_showParam(self, *args, **kwargs)

    def simulation(self, *args, **kwargs):
        return _eefxPot.EEFxPot_simulation(self, *args, **kwargs)

    def defaultSelection(self, *args, **kwargs):
        return _eefxPot.EEFxPot_defaultSelection(self, *args, **kwargs)

    def verbose(self, *args, **kwargs):
        return _eefxPot.EEFxPot_verbose(self, *args, **kwargs)

    def setVerbose(self, *args, **kwargs):
        return _eefxPot.EEFxPot_setVerbose(self, *args, **kwargs)

    def cutoffDist(self, *args, **kwargs):
        return _eefxPot.EEFxPot_cutoffDist(self, *args, **kwargs)

    def setCutoffDist(self, *args, **kwargs):
        return _eefxPot.EEFxPot_setCutoffDist(self, *args, **kwargs)

    def moveTol(self, *args, **kwargs):
        return _eefxPot.EEFxPot_moveTol(self, *args, **kwargs)

    def setMoveTol(self, *args, **kwargs):
        return _eefxPot.EEFxPot_setMoveTol(self, *args, **kwargs)

    def profileN(self, *args, **kwargs):
        return _eefxPot.EEFxPot_profileN(self, *args, **kwargs)

    def setProfileN(self, *args, **kwargs):
        return _eefxPot.EEFxPot_setProfileN(self, *args, **kwargs)

    def a(self, *args, **kwargs):
        return _eefxPot.EEFxPot_a(self, *args, **kwargs)

    def setA(self, *args, **kwargs):
        return _eefxPot.EEFxPot_setA(self, *args, **kwargs)

    def thickness(self, *args, **kwargs):
        return _eefxPot.EEFxPot_thickness(self, *args, **kwargs)

    def setThickness(self, *args, **kwargs):
        return _eefxPot.EEFxPot_setThickness(self, *args, **kwargs)

    def e14Factor(self, *args, **kwargs):
        return _eefxPot.EEFxPot_e14Factor(self, *args, **kwargs)

    def setE14Factor(self, *args, **kwargs):
        return _eefxPot.EEFxPot_setE14Factor(self, *args, **kwargs)

    def collectAtomEnergies(self, *args, **kwargs):
        return _eefxPot.EEFxPot_collectAtomEnergies(self, *args, **kwargs)

    def setCollectAtomEnergies(self, *args, **kwargs):
        return _eefxPot.EEFxPot_setCollectAtomEnergies(self, *args, **kwargs)
    E14FullScale = _swig_property(_eefxPot.EEFxPot_E14FullScale_get, _eefxPot.EEFxPot_E14FullScale_set)

    def setE14FullScale(self, *args, **kwargs):
        return _eefxPot.EEFxPot_setE14FullScale(self, *args, **kwargs)

    def poreR(self, *args, **kwargs):
        return _eefxPot.EEFxPot_poreR(self, *args, **kwargs)

    def setPoreR(self, *args, **kwargs):
        return _eefxPot.EEFxPot_setPoreR(self, *args, **kwargs)

    def bicelleR(self, *args, **kwargs):
        return _eefxPot.EEFxPot_bicelleR(self, *args, **kwargs)

    def setbicelleR(self, *args, **kwargs):
        return _eefxPot.EEFxPot_setbicelleR(self, *args, **kwargs)

    def rms(self, *args, **kwargs):
        return _eefxPot.EEFxPot_rms(self, *args, **kwargs)

    def violations(self, *args, **kwargs):
        return _eefxPot.EEFxPot_violations(self, *args, **kwargs)

    def numRestraints(self, *args, **kwargs):
        return _eefxPot.EEFxPot_numRestraints(self, *args, **kwargs)

    def setIMMx(self, *args, **kwargs):
        return _eefxPot.EEFxPot_setIMMx(self, *args, **kwargs)

    def IMMx(self, *args, **kwargs):
        return _eefxPot.EEFxPot_IMMx(self, *args, **kwargs)

    def useCDIE(self, *args, **kwargs):
        return _eefxPot.EEFxPot_useCDIE(self, *args, **kwargs)
    IMMx_pore_ = _swig_property(_eefxPot.EEFxPot_IMMx_pore__get, _eefxPot.EEFxPot_IMMx_pore__set)
    IMMx_bicelle_ = _swig_property(_eefxPot.EEFxPot_IMMx_bicelle__get, _eefxPot.EEFxPot_IMMx_bicelle__set)
    IMMx_micelle_ = _swig_property(_eefxPot.EEFxPot_IMMx_micelle__get, _eefxPot.EEFxPot_IMMx_micelle__set)

    def setIMMx_pore(self, *args, **kwargs):
        return _eefxPot.EEFxPot_setIMMx_pore(self, *args, **kwargs)

    def setIMMx_bicelle(self, *args, **kwargs):
        return _eefxPot.EEFxPot_setIMMx_bicelle(self, *args, **kwargs)

    def setIMMx_micelle(self, *args, **kwargs):
        return _eefxPot.EEFxPot_setIMMx_micelle(self, *args, **kwargs)

    def IMMx_pore(self, *args, **kwargs):
        return _eefxPot.EEFxPot_IMMx_pore(self, *args, **kwargs)

    def IMMx_bicelle(self, *args, **kwargs):
        return _eefxPot.EEFxPot_IMMx_bicelle(self, *args, **kwargs)

    def IMMx_micelle(self, *args, **kwargs):
        return _eefxPot.EEFxPot_IMMx_micelle(self, *args, **kwargs)

    def useGROUp(self, *args, **kwargs):
        return _eefxPot.EEFxPot_useGROUp(self, *args, **kwargs)

    def setMicelleX(self, *args, **kwargs):
        return _eefxPot.EEFxPot_setMicelleX(self, *args, **kwargs)

    def setMicelleY(self, *args, **kwargs):
        return _eefxPot.EEFxPot_setMicelleY(self, *args, **kwargs)

    def setMicelleZ(self, *args, **kwargs):
        return _eefxPot.EEFxPot_setMicelleZ(self, *args, **kwargs)
    gcEnergy = _swig_property(_eefxPot.EEFxPot_gcEnergy_get, _eefxPot.EEFxPot_gcEnergy_set)
    voltEnergy = _swig_property(_eefxPot.EEFxPot_voltEnergy_get, _eefxPot.EEFxPot_voltEnergy_set)

    def setGCvalence(self, *args, **kwargs):
        return _eefxPot.EEFxPot_setGCvalence(self, *args, **kwargs)

    def setGCconc(self, *args, **kwargs):
        return _eefxPot.EEFxPot_setGCconc(self, *args, **kwargs)

    def setGCfraction(self, *args, **kwargs):
        return _eefxPot.EEFxPot_setGCfraction(self, *args, **kwargs)

    def setGCoffset(self, *args, **kwargs):
        return _eefxPot.EEFxPot_setGCoffset(self, *args, **kwargs)

    def setGCvoltage(self, *args, **kwargs):
        return _eefxPot.EEFxPot_setGCvoltage(self, *args, **kwargs)

    def setIMMx_GC(self, *args, **kwargs):
        return _eefxPot.EEFxPot_setIMMx_GC(self, *args, **kwargs)

    def IMMx_GC(self, *args, **kwargs):
        return _eefxPot.EEFxPot_IMMx_GC(self, *args, **kwargs)

    def setIMMx_volt(self, *args, **kwargs):
        return _eefxPot.EEFxPot_setIMMx_volt(self, *args, **kwargs)

    def IMMx_volt(self, *args, **kwargs):
        return _eefxPot.EEFxPot_IMMx_volt(self, *args, **kwargs)

    def printTotalE(self, *args, **kwargs):
        return _eefxPot.EEFxPot_printTotalE(self, *args, **kwargs)

    def atomInfo(self, *args, **kwargs):
        return _eefxPot.EEFxPot_atomInfo(self, *args, **kwargs)

    def atomEnergies(self, *args, **kwargs):
        return _eefxPot.EEFxPot_atomEnergies(self, *args, **kwargs)
    selPairs = _swig_property(_eefxPot.EEFxPot_selPairs_get, _eefxPot.EEFxPot_selPairs_set)
    selPairWeights = _swig_property(_eefxPot.EEFxPot_selPairWeights_get, _eefxPot.EEFxPot_selPairWeights_set)
    selPairEnergies = _swig_property(_eefxPot.EEFxPot_selPairEnergies_get, _eefxPot.EEFxPot_selPairEnergies_set)
    selPairIncludeA = _swig_property(_eefxPot.EEFxPot_selPairIncludeA_get, _eefxPot.EEFxPot_selPairIncludeA_set)
    selPairIncludeB = _swig_property(_eefxPot.EEFxPot_selPairIncludeB_get, _eefxPot.EEFxPot_selPairIncludeB_set)

    def selectionPairs(self, *args, **kwargs):
        return _eefxPot.EEFxPot_selectionPairs(self, *args, **kwargs)

    def numSelectionPairs(self, *args, **kwargs):
        return _eefxPot.EEFxPot_numSelectionPairs(self, *args, **kwargs)

    def addSelectionPair(self, *args, **kwargs):
        return _eefxPot.EEFxPot_addSelectionPair(self, *args, **kwargs)

    def setSelectionPairWeight(self, *args, **kwargs):
        return _eefxPot.EEFxPot_setSelectionPairWeight(self, *args, **kwargs)

    def selectionPairWeight(self, *args, **kwargs):
        return _eefxPot.EEFxPot_selectionPairWeight(self, *args, **kwargs)

    def selectionPairEnergy(self, *args, **kwargs):
        return _eefxPot.EEFxPot_selectionPairEnergy(self, *args, **kwargs)

    def deleteSelectionPair(self, *args, **kwargs):
        return _eefxPot.EEFxPot_deleteSelectionPair(self, *args, **kwargs)

    def resetSelectionPairs(self, *args, **kwargs):
        return _eefxPot.EEFxPot_resetSelectionPairs(self, *args, **kwargs)

    def elecPot_cxx(self, *args, **kwargs):
        return _eefxPot.EEFxPot_elecPot_cxx(self, *args, **kwargs)

    def solvPot_cxx(self, *args, **kwargs):
        return _eefxPot.EEFxPot_solvPot_cxx(self, *args, **kwargs)

    def vdwPot_cxx(self, *args, **kwargs):
        return _eefxPot.EEFxPot_vdwPot_cxx(self, *args, **kwargs)

    def help(self, *args, **kwargs):
        return _eefxPot.EEFxPot_help(self, *args, **kwargs)

    def potName(self, *args, **kwargs):
        return _eefxPot.EEFxPot_potName(self, *args, **kwargs)

    def instanceName(self, *args, **kwargs):
        return _eefxPot.EEFxPot_instanceName(self, *args, **kwargs)

    def resetPotName(self, *args, **kwargs):
        return _eefxPot.EEFxPot_resetPotName(self, *args, **kwargs)

    def resetInstanceName(self, *args, **kwargs):
        return _eefxPot.EEFxPot_resetInstanceName(self, *args, **kwargs)

    def scale(self, *args, **kwargs):
        return _eefxPot.EEFxPot_scale(self, *args, **kwargs)

    def setScale(self, *args, **kwargs):
        return _eefxPot.EEFxPot_setScale(self, *args, **kwargs)

    def threshold(self, *args, **kwargs):
        return _eefxPot.EEFxPot_threshold(self, *args, **kwargs)

    def setThreshold(self, *args, **kwargs):
        return _eefxPot.EEFxPot_setThreshold(self, *args, **kwargs)

    def updateDelta(self, *args, **kwargs):
        return _eefxPot.EEFxPot_updateDelta(self, *args, **kwargs)
    instanceData_ = _swig_property(_eefxPot.EEFxPot_instanceData__get, _eefxPot.EEFxPot_instanceData__set)
    instanceDataCreate = _swig_property(_eefxPot.EEFxPot_instanceDataCreate_get, _eefxPot.EEFxPot_instanceDataCreate_set)
    instanceDataCleanup = _swig_property(_eefxPot.EEFxPot_instanceDataCleanup_get, _eefxPot.EEFxPot_instanceDataCleanup_set)
    modified = _swig_property(_eefxPot.EEFxPot_modified_get, _eefxPot.EEFxPot_modified_set)
    registeredSimulations = _swig_property(_eefxPot.EEFxPot_registeredSimulations_get, _eefxPot.EEFxPot_registeredSimulations_set)

    def registerTo(self, *args, **kwargs):
        return _eefxPot.EEFxPot_registerTo(self, *args, **kwargs)

    def unRegister(self, *args, **kwargs):
        return _eefxPot.EEFxPot_unRegister(self, *args, **kwargs)

class EEFxPotPtr(EEFxPot):
    def __init__(self, this):
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
        self.this.own(0)
        self.__class__ = EEFxPot

EEFxPot_swigregister = _eefxPot.EEFxPot_swigregister
EEFxPot_swigregister(EEFxPot)


realEEFxPot = EEFxPot
def EEFxPot(*args):
    from potProxy import PotProxy
    return PotProxy( realEEFxPot(*args) )

class EEFx_ElecPot(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args, **kwargs):
        this = _eefxPot.new_EEFx_ElecPot(*args, **kwargs)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def __deref__(self, *args, **kwargs):
        return _eefxPot.EEFx_ElecPot___deref__(self, *args, **kwargs)

    def __ref__(self, *args, **kwargs):
        return _eefxPot.EEFx_ElecPot___ref__(self, *args, **kwargs)

    def registerInstanceData(self, *args, **kwargs):
        return _eefxPot.EEFx_ElecPot_registerInstanceData(self, *args, **kwargs)

    def decrRefCnt(self, *args, **kwargs):
        return _eefxPot.EEFx_ElecPot_decrRefCnt(self, *args, **kwargs)

    def incrRefCnt(self, *args, **kwargs):
        return _eefxPot.EEFx_ElecPot_incrRefCnt(self, *args, **kwargs)

    def refCnt(self, *args, **kwargs):
        return _eefxPot.EEFx_ElecPot_refCnt(self, *args, **kwargs)

    def instanceData(self, *args, **kwargs):
        return _eefxPot.EEFx_ElecPot_instanceData(self, *args, **kwargs)

    def help(self, *args, **kwargs):
        return _eefxPot.EEFx_ElecPot_help(self, *args, **kwargs)

    __oldinit__=__init__
    def __init__(self, *args):
        self.__oldinit__(*args)
        self.registerInstanceData(self)

    __swig_destroy__ = _eefxPot.delete_EEFx_ElecPot
    __del__ = lambda self: None

    def calcEnergy(self, *args, **kwargs):
        return _eefxPot.EEFx_ElecPot_calcEnergy(self, *args, **kwargs)

    def calcEnergyAndDerivs(self, *args, **kwargs):
        return _eefxPot.EEFx_ElecPot_calcEnergyAndDerivs(self, *args, **kwargs)

    def rms(self, *args, **kwargs):
        return _eefxPot.EEFx_ElecPot_rms(self, *args, **kwargs)

    def violations(self, *args, **kwargs):
        return _eefxPot.EEFx_ElecPot_violations(self, *args, **kwargs)

    def numRestraints(self, *args, **kwargs):
        return _eefxPot.EEFx_ElecPot_numRestraints(self, *args, **kwargs)

    def help(self, *args, **kwargs):
        return _eefxPot.EEFx_ElecPot_help(self, *args, **kwargs)

    def potName(self, *args, **kwargs):
        return _eefxPot.EEFx_ElecPot_potName(self, *args, **kwargs)

    def instanceName(self, *args, **kwargs):
        return _eefxPot.EEFx_ElecPot_instanceName(self, *args, **kwargs)

    def resetPotName(self, *args, **kwargs):
        return _eefxPot.EEFx_ElecPot_resetPotName(self, *args, **kwargs)

    def resetInstanceName(self, *args, **kwargs):
        return _eefxPot.EEFx_ElecPot_resetInstanceName(self, *args, **kwargs)

    def scale(self, *args, **kwargs):
        return _eefxPot.EEFx_ElecPot_scale(self, *args, **kwargs)

    def setScale(self, *args, **kwargs):
        return _eefxPot.EEFx_ElecPot_setScale(self, *args, **kwargs)

    def threshold(self, *args, **kwargs):
        return _eefxPot.EEFx_ElecPot_threshold(self, *args, **kwargs)

    def setThreshold(self, *args, **kwargs):
        return _eefxPot.EEFx_ElecPot_setThreshold(self, *args, **kwargs)

    def updateValues(self, *args, **kwargs):
        return _eefxPot.EEFx_ElecPot_updateValues(self, *args, **kwargs)

    def updateDelta(self, *args, **kwargs):
        return _eefxPot.EEFx_ElecPot_updateDelta(self, *args, **kwargs)
    instanceData_ = _swig_property(_eefxPot.EEFx_ElecPot_instanceData__get, _eefxPot.EEFx_ElecPot_instanceData__set)
    instanceDataCreate = _swig_property(_eefxPot.EEFx_ElecPot_instanceDataCreate_get, _eefxPot.EEFx_ElecPot_instanceDataCreate_set)
    instanceDataCleanup = _swig_property(_eefxPot.EEFx_ElecPot_instanceDataCleanup_get, _eefxPot.EEFx_ElecPot_instanceDataCleanup_set)
    modified = _swig_property(_eefxPot.EEFx_ElecPot_modified_get, _eefxPot.EEFx_ElecPot_modified_set)
    registeredSimulations = _swig_property(_eefxPot.EEFx_ElecPot_registeredSimulations_get, _eefxPot.EEFx_ElecPot_registeredSimulations_set)

    def registerTo(self, *args, **kwargs):
        return _eefxPot.EEFx_ElecPot_registerTo(self, *args, **kwargs)

    def unRegister(self, *args, **kwargs):
        return _eefxPot.EEFx_ElecPot_unRegister(self, *args, **kwargs)

class EEFx_ElecPotPtr(EEFx_ElecPot):
    def __init__(self, this):
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
        self.this.own(0)
        self.__class__ = EEFx_ElecPot

EEFx_ElecPot_swigregister = _eefxPot.EEFx_ElecPot_swigregister
EEFx_ElecPot_swigregister(EEFx_ElecPot)


realEEFx_ElecPot = EEFx_ElecPot
def EEFx_ElecPot(*args):
    from potProxy import PotProxy
    return PotProxy( realEEFx_ElecPot(*args) )

class EEFx_SolvPot(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args, **kwargs):
        this = _eefxPot.new_EEFx_SolvPot(*args, **kwargs)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def __deref__(self, *args, **kwargs):
        return _eefxPot.EEFx_SolvPot___deref__(self, *args, **kwargs)

    def __ref__(self, *args, **kwargs):
        return _eefxPot.EEFx_SolvPot___ref__(self, *args, **kwargs)

    def registerInstanceData(self, *args, **kwargs):
        return _eefxPot.EEFx_SolvPot_registerInstanceData(self, *args, **kwargs)

    def decrRefCnt(self, *args, **kwargs):
        return _eefxPot.EEFx_SolvPot_decrRefCnt(self, *args, **kwargs)

    def incrRefCnt(self, *args, **kwargs):
        return _eefxPot.EEFx_SolvPot_incrRefCnt(self, *args, **kwargs)

    def refCnt(self, *args, **kwargs):
        return _eefxPot.EEFx_SolvPot_refCnt(self, *args, **kwargs)

    def instanceData(self, *args, **kwargs):
        return _eefxPot.EEFx_SolvPot_instanceData(self, *args, **kwargs)

    def help(self, *args, **kwargs):
        return _eefxPot.EEFx_SolvPot_help(self, *args, **kwargs)

    __oldinit__=__init__
    def __init__(self, *args):
        self.__oldinit__(*args)
        self.registerInstanceData(self)

    __swig_destroy__ = _eefxPot.delete_EEFx_SolvPot
    __del__ = lambda self: None

    def calcEnergy(self, *args, **kwargs):
        return _eefxPot.EEFx_SolvPot_calcEnergy(self, *args, **kwargs)

    def calcEnergyAndDerivs(self, *args, **kwargs):
        return _eefxPot.EEFx_SolvPot_calcEnergyAndDerivs(self, *args, **kwargs)

    def rms(self, *args, **kwargs):
        return _eefxPot.EEFx_SolvPot_rms(self, *args, **kwargs)

    def violations(self, *args, **kwargs):
        return _eefxPot.EEFx_SolvPot_violations(self, *args, **kwargs)

    def numRestraints(self, *args, **kwargs):
        return _eefxPot.EEFx_SolvPot_numRestraints(self, *args, **kwargs)

    def help(self, *args, **kwargs):
        return _eefxPot.EEFx_SolvPot_help(self, *args, **kwargs)

    def potName(self, *args, **kwargs):
        return _eefxPot.EEFx_SolvPot_potName(self, *args, **kwargs)

    def instanceName(self, *args, **kwargs):
        return _eefxPot.EEFx_SolvPot_instanceName(self, *args, **kwargs)

    def resetPotName(self, *args, **kwargs):
        return _eefxPot.EEFx_SolvPot_resetPotName(self, *args, **kwargs)

    def resetInstanceName(self, *args, **kwargs):
        return _eefxPot.EEFx_SolvPot_resetInstanceName(self, *args, **kwargs)

    def scale(self, *args, **kwargs):
        return _eefxPot.EEFx_SolvPot_scale(self, *args, **kwargs)

    def setScale(self, *args, **kwargs):
        return _eefxPot.EEFx_SolvPot_setScale(self, *args, **kwargs)

    def threshold(self, *args, **kwargs):
        return _eefxPot.EEFx_SolvPot_threshold(self, *args, **kwargs)

    def setThreshold(self, *args, **kwargs):
        return _eefxPot.EEFx_SolvPot_setThreshold(self, *args, **kwargs)

    def updateValues(self, *args, **kwargs):
        return _eefxPot.EEFx_SolvPot_updateValues(self, *args, **kwargs)

    def updateDelta(self, *args, **kwargs):
        return _eefxPot.EEFx_SolvPot_updateDelta(self, *args, **kwargs)
    instanceData_ = _swig_property(_eefxPot.EEFx_SolvPot_instanceData__get, _eefxPot.EEFx_SolvPot_instanceData__set)
    instanceDataCreate = _swig_property(_eefxPot.EEFx_SolvPot_instanceDataCreate_get, _eefxPot.EEFx_SolvPot_instanceDataCreate_set)
    instanceDataCleanup = _swig_property(_eefxPot.EEFx_SolvPot_instanceDataCleanup_get, _eefxPot.EEFx_SolvPot_instanceDataCleanup_set)
    modified = _swig_property(_eefxPot.EEFx_SolvPot_modified_get, _eefxPot.EEFx_SolvPot_modified_set)
    registeredSimulations = _swig_property(_eefxPot.EEFx_SolvPot_registeredSimulations_get, _eefxPot.EEFx_SolvPot_registeredSimulations_set)

    def registerTo(self, *args, **kwargs):
        return _eefxPot.EEFx_SolvPot_registerTo(self, *args, **kwargs)

    def unRegister(self, *args, **kwargs):
        return _eefxPot.EEFx_SolvPot_unRegister(self, *args, **kwargs)

class EEFx_SolvPotPtr(EEFx_SolvPot):
    def __init__(self, this):
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
        self.this.own(0)
        self.__class__ = EEFx_SolvPot

EEFx_SolvPot_swigregister = _eefxPot.EEFx_SolvPot_swigregister
EEFx_SolvPot_swigregister(EEFx_SolvPot)


realEEFx_SolvPot = EEFx_SolvPot
def EEFx_SolvPot(*args):
    from potProxy import PotProxy
    return PotProxy( realEEFx_SolvPot(*args) )

class EEFx_VDWPot(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args, **kwargs):
        this = _eefxPot.new_EEFx_VDWPot(*args, **kwargs)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def __deref__(self, *args, **kwargs):
        return _eefxPot.EEFx_VDWPot___deref__(self, *args, **kwargs)

    def __ref__(self, *args, **kwargs):
        return _eefxPot.EEFx_VDWPot___ref__(self, *args, **kwargs)

    def registerInstanceData(self, *args, **kwargs):
        return _eefxPot.EEFx_VDWPot_registerInstanceData(self, *args, **kwargs)

    def decrRefCnt(self, *args, **kwargs):
        return _eefxPot.EEFx_VDWPot_decrRefCnt(self, *args, **kwargs)

    def incrRefCnt(self, *args, **kwargs):
        return _eefxPot.EEFx_VDWPot_incrRefCnt(self, *args, **kwargs)

    def refCnt(self, *args, **kwargs):
        return _eefxPot.EEFx_VDWPot_refCnt(self, *args, **kwargs)

    def instanceData(self, *args, **kwargs):
        return _eefxPot.EEFx_VDWPot_instanceData(self, *args, **kwargs)

    def help(self, *args, **kwargs):
        return _eefxPot.EEFx_VDWPot_help(self, *args, **kwargs)

    __oldinit__=__init__
    def __init__(self, *args):
        self.__oldinit__(*args)
        self.registerInstanceData(self)

    __swig_destroy__ = _eefxPot.delete_EEFx_VDWPot
    __del__ = lambda self: None

    def calcEnergy(self, *args, **kwargs):
        return _eefxPot.EEFx_VDWPot_calcEnergy(self, *args, **kwargs)

    def calcEnergyAndDerivs(self, *args, **kwargs):
        return _eefxPot.EEFx_VDWPot_calcEnergyAndDerivs(self, *args, **kwargs)

    def rms(self, *args, **kwargs):
        return _eefxPot.EEFx_VDWPot_rms(self, *args, **kwargs)

    def violations(self, *args, **kwargs):
        return _eefxPot.EEFx_VDWPot_violations(self, *args, **kwargs)

    def numRestraints(self, *args, **kwargs):
        return _eefxPot.EEFx_VDWPot_numRestraints(self, *args, **kwargs)

    def help(self, *args, **kwargs):
        return _eefxPot.EEFx_VDWPot_help(self, *args, **kwargs)

    def potName(self, *args, **kwargs):
        return _eefxPot.EEFx_VDWPot_potName(self, *args, **kwargs)

    def instanceName(self, *args, **kwargs):
        return _eefxPot.EEFx_VDWPot_instanceName(self, *args, **kwargs)

    def resetPotName(self, *args, **kwargs):
        return _eefxPot.EEFx_VDWPot_resetPotName(self, *args, **kwargs)

    def resetInstanceName(self, *args, **kwargs):
        return _eefxPot.EEFx_VDWPot_resetInstanceName(self, *args, **kwargs)

    def scale(self, *args, **kwargs):
        return _eefxPot.EEFx_VDWPot_scale(self, *args, **kwargs)

    def setScale(self, *args, **kwargs):
        return _eefxPot.EEFx_VDWPot_setScale(self, *args, **kwargs)

    def threshold(self, *args, **kwargs):
        return _eefxPot.EEFx_VDWPot_threshold(self, *args, **kwargs)

    def setThreshold(self, *args, **kwargs):
        return _eefxPot.EEFx_VDWPot_setThreshold(self, *args, **kwargs)

    def updateValues(self, *args, **kwargs):
        return _eefxPot.EEFx_VDWPot_updateValues(self, *args, **kwargs)

    def updateDelta(self, *args, **kwargs):
        return _eefxPot.EEFx_VDWPot_updateDelta(self, *args, **kwargs)
    instanceData_ = _swig_property(_eefxPot.EEFx_VDWPot_instanceData__get, _eefxPot.EEFx_VDWPot_instanceData__set)
    instanceDataCreate = _swig_property(_eefxPot.EEFx_VDWPot_instanceDataCreate_get, _eefxPot.EEFx_VDWPot_instanceDataCreate_set)
    instanceDataCleanup = _swig_property(_eefxPot.EEFx_VDWPot_instanceDataCleanup_get, _eefxPot.EEFx_VDWPot_instanceDataCleanup_set)
    modified = _swig_property(_eefxPot.EEFx_VDWPot_modified_get, _eefxPot.EEFx_VDWPot_modified_set)
    registeredSimulations = _swig_property(_eefxPot.EEFx_VDWPot_registeredSimulations_get, _eefxPot.EEFx_VDWPot_registeredSimulations_set)

    def registerTo(self, *args, **kwargs):
        return _eefxPot.EEFx_VDWPot_registerTo(self, *args, **kwargs)

    def unRegister(self, *args, **kwargs):
        return _eefxPot.EEFx_VDWPot_unRegister(self, *args, **kwargs)

class EEFx_VDWPotPtr(EEFx_VDWPot):
    def __init__(self, this):
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
        self.this.own(0)
        self.__class__ = EEFx_VDWPot

EEFx_VDWPot_swigregister = _eefxPot.EEFx_VDWPot_swigregister
EEFx_VDWPot_swigregister(EEFx_VDWPot)


realEEFx_VDWPot = EEFx_VDWPot
def EEFx_VDWPot(*args):
    from potProxy import PotProxy
    return PotProxy( realEEFx_VDWPot(*args) )

class CDSList_EEFxAtomEnergies(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __len__(self, *args, **kwargs):
        return _eefxPot.CDSList_EEFxAtomEnergies___len__(self, *args, **kwargs)

    def __init__(self, *args):
        this = _eefxPot.new_CDSList_EEFxAtomEnergies(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def __getitem__(self, *args):
        return _eefxPot.CDSList_EEFxAtomEnergies___getitem__(self, *args)

    def __delitem__(self, *args, **kwargs):
        return _eefxPot.CDSList_EEFxAtomEnergies___delitem__(self, *args, **kwargs)

    def append(self, *args, **kwargs):
        return _eefxPot.CDSList_EEFxAtomEnergies_append(self, *args, **kwargs)

    def remove(self, *args, **kwargs):
        return _eefxPot.CDSList_EEFxAtomEnergies_remove(self, *args, **kwargs)

    def removeAll(self, *args, **kwargs):
        return _eefxPot.CDSList_EEFxAtomEnergies_removeAll(self, *args, **kwargs)

    def __setitem__(self, *args, **kwargs):
        return _eefxPot.CDSList_EEFxAtomEnergies___setitem__(self, *args, **kwargs)

    def __getslice__(self, *args, **kwargs):
        return _eefxPot.CDSList_EEFxAtomEnergies___getslice__(self, *args, **kwargs)

    def help(self, *args, **kwargs):
        return _eefxPot.CDSList_EEFxAtomEnergies_help(self, *args, **kwargs)
    __swig_destroy__ = _eefxPot.delete_CDSList_EEFxAtomEnergies
    __del__ = lambda self: None

class CDSList_EEFxAtomEnergiesPtr(CDSList_EEFxAtomEnergies):
    def __init__(self, this):
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
        self.this.own(0)
        self.__class__ = CDSList_EEFxAtomEnergies

CDSList_EEFxAtomEnergies_swigregister = _eefxPot.CDSList_EEFxAtomEnergies_swigregister
CDSList_EEFxAtomEnergies_swigregister(CDSList_EEFxAtomEnergies)

class EEFxAtomEnergies(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    Evdw = _swig_property(_eefxPot.EEFxAtomEnergies_Evdw_get, _eefxPot.EEFxAtomEnergies_Evdw_set)
    Eelec = _swig_property(_eefxPot.EEFxAtomEnergies_Eelec_get, _eefxPot.EEFxAtomEnergies_Eelec_set)
    Eslv = _swig_property(_eefxPot.EEFxAtomEnergies_Eslv_get, _eefxPot.EEFxAtomEnergies_Eslv_set)
    Egc = _swig_property(_eefxPot.EEFxAtomEnergies_Egc_get, _eefxPot.EEFxAtomEnergies_Egc_set)
    Evolt = _swig_property(_eefxPot.EEFxAtomEnergies_Evolt_get, _eefxPot.EEFxAtomEnergies_Evolt_set)

    def clear(self, *args, **kwargs):
        return _eefxPot.EEFxAtomEnergies_clear(self, *args, **kwargs)

    def __init__(self, *args, **kwargs):
        this = _eefxPot.new_EEFxAtomEnergies(*args, **kwargs)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _eefxPot.delete_EEFxAtomEnergies
    __del__ = lambda self: None

class EEFxAtomEnergiesPtr(EEFxAtomEnergies):
    def __init__(self, this):
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
        self.this.own(0)
        self.__class__ = EEFxAtomEnergies

EEFxAtomEnergies_swigregister = _eefxPot.EEFxAtomEnergies_swigregister
EEFxAtomEnergies_swigregister(EEFxAtomEnergies)

class EEFx_ElecPot_LetterClass(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args, **kwargs):
        this = _eefxPot.new_EEFx_ElecPot_LetterClass(*args, **kwargs)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def calcEnergy(self, *args, **kwargs):
        return _eefxPot.EEFx_ElecPot_LetterClass_calcEnergy(self, *args, **kwargs)

    def calcEnergyAndDerivs(self, *args, **kwargs):
        return _eefxPot.EEFx_ElecPot_LetterClass_calcEnergyAndDerivs(self, *args, **kwargs)

    def rms(self, *args, **kwargs):
        return _eefxPot.EEFx_ElecPot_LetterClass_rms(self, *args, **kwargs)

    def violations(self, *args, **kwargs):
        return _eefxPot.EEFx_ElecPot_LetterClass_violations(self, *args, **kwargs)

    def numRestraints(self, *args, **kwargs):
        return _eefxPot.EEFx_ElecPot_LetterClass_numRestraints(self, *args, **kwargs)

    def help(self, *args, **kwargs):
        return _eefxPot.EEFx_ElecPot_LetterClass_help(self, *args, **kwargs)
    __swig_destroy__ = _eefxPot.delete_EEFx_ElecPot_LetterClass
    __del__ = lambda self: None

class EEFx_ElecPot_LetterClassPtr(EEFx_ElecPot_LetterClass):
    def __init__(self, this):
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
        self.this.own(0)
        self.__class__ = EEFx_ElecPot_LetterClass

EEFx_ElecPot_LetterClass_swigregister = _eefxPot.EEFx_ElecPot_LetterClass_swigregister
EEFx_ElecPot_LetterClass_swigregister(EEFx_ElecPot_LetterClass)

class EEFx_SolvPot_LetterClass(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args, **kwargs):
        this = _eefxPot.new_EEFx_SolvPot_LetterClass(*args, **kwargs)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def calcEnergy(self, *args, **kwargs):
        return _eefxPot.EEFx_SolvPot_LetterClass_calcEnergy(self, *args, **kwargs)

    def calcEnergyAndDerivs(self, *args, **kwargs):
        return _eefxPot.EEFx_SolvPot_LetterClass_calcEnergyAndDerivs(self, *args, **kwargs)

    def rms(self, *args, **kwargs):
        return _eefxPot.EEFx_SolvPot_LetterClass_rms(self, *args, **kwargs)

    def violations(self, *args, **kwargs):
        return _eefxPot.EEFx_SolvPot_LetterClass_violations(self, *args, **kwargs)

    def numRestraints(self, *args, **kwargs):
        return _eefxPot.EEFx_SolvPot_LetterClass_numRestraints(self, *args, **kwargs)

    def help(self, *args, **kwargs):
        return _eefxPot.EEFx_SolvPot_LetterClass_help(self, *args, **kwargs)
    __swig_destroy__ = _eefxPot.delete_EEFx_SolvPot_LetterClass
    __del__ = lambda self: None

class EEFx_SolvPot_LetterClassPtr(EEFx_SolvPot_LetterClass):
    def __init__(self, this):
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
        self.this.own(0)
        self.__class__ = EEFx_SolvPot_LetterClass

EEFx_SolvPot_LetterClass_swigregister = _eefxPot.EEFx_SolvPot_LetterClass_swigregister
EEFx_SolvPot_LetterClass_swigregister(EEFx_SolvPot_LetterClass)

class EEFx_VDWPot_LetterClass(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args, **kwargs):
        this = _eefxPot.new_EEFx_VDWPot_LetterClass(*args, **kwargs)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def calcEnergy(self, *args, **kwargs):
        return _eefxPot.EEFx_VDWPot_LetterClass_calcEnergy(self, *args, **kwargs)

    def calcEnergyAndDerivs(self, *args, **kwargs):
        return _eefxPot.EEFx_VDWPot_LetterClass_calcEnergyAndDerivs(self, *args, **kwargs)

    def rms(self, *args, **kwargs):
        return _eefxPot.EEFx_VDWPot_LetterClass_rms(self, *args, **kwargs)

    def violations(self, *args, **kwargs):
        return _eefxPot.EEFx_VDWPot_LetterClass_violations(self, *args, **kwargs)

    def numRestraints(self, *args, **kwargs):
        return _eefxPot.EEFx_VDWPot_LetterClass_numRestraints(self, *args, **kwargs)

    def help(self, *args, **kwargs):
        return _eefxPot.EEFx_VDWPot_LetterClass_help(self, *args, **kwargs)
    __swig_destroy__ = _eefxPot.delete_EEFx_VDWPot_LetterClass
    __del__ = lambda self: None

class EEFx_VDWPot_LetterClassPtr(EEFx_VDWPot_LetterClass):
    def __init__(self, this):
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
        self.this.own(0)
        self.__class__ = EEFx_VDWPot_LetterClass

EEFx_VDWPot_LetterClass_swigregister = _eefxPot.EEFx_VDWPot_LetterClass_swigregister
EEFx_VDWPot_LetterClass_swigregister(EEFx_VDWPot_LetterClass)

class EEFxPot_LetterClass(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def updateValues(self, *args, **kwargs):
        return _eefxPot.EEFxPot_LetterClass_updateValues(self, *args, **kwargs)

    def __init__(self, *args, **kwargs):
        this = _eefxPot.new_EEFxPot_LetterClass(*args, **kwargs)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _eefxPot.delete_EEFxPot_LetterClass
    __del__ = lambda self: None
    numAtoms = _swig_property(_eefxPot.EEFxPot_LetterClass_numAtoms_get)
    elecEnergy = _swig_property(_eefxPot.EEFxPot_LetterClass_elecEnergy_get, _eefxPot.EEFxPot_LetterClass_elecEnergy_set)
    solvEnergy = _swig_property(_eefxPot.EEFxPot_LetterClass_solvEnergy_get, _eefxPot.EEFxPot_LetterClass_solvEnergy_set)
    vdwEnergy = _swig_property(_eefxPot.EEFxPot_LetterClass_vdwEnergy_get, _eefxPot.EEFxPot_LetterClass_vdwEnergy_set)
    elecPot_member = _swig_property(_eefxPot.EEFxPot_LetterClass_elecPot_member_get)
    solvPot_member = _swig_property(_eefxPot.EEFxPot_LetterClass_solvPot_member_get)
    vdwPot_member = _swig_property(_eefxPot.EEFxPot_LetterClass_vdwPot_member_get)
    staleGradient = _swig_property(_eefxPot.EEFxPot_LetterClass_staleGradient_get, _eefxPot.EEFxPot_LetterClass_staleGradient_set)

    def calcEnergy(self, *args, **kwargs):
        return _eefxPot.EEFxPot_LetterClass_calcEnergy(self, *args, **kwargs)

    def calcEnergyAndDerivs(self, *args, **kwargs):
        return _eefxPot.EEFxPot_LetterClass_calcEnergyAndDerivs(self, *args, **kwargs)

    def setTemperature(self, *args, **kwargs):
        return _eefxPot.EEFxPot_LetterClass_setTemperature(self, *args, **kwargs)

    def showParam(self, *args, **kwargs):
        return _eefxPot.EEFxPot_LetterClass_showParam(self, *args, **kwargs)

    def simulation(self, *args, **kwargs):
        return _eefxPot.EEFxPot_LetterClass_simulation(self, *args, **kwargs)

    def defaultSelection(self, *args, **kwargs):
        return _eefxPot.EEFxPot_LetterClass_defaultSelection(self, *args, **kwargs)

    def verbose(self, *args, **kwargs):
        return _eefxPot.EEFxPot_LetterClass_verbose(self, *args, **kwargs)

    def setVerbose(self, *args, **kwargs):
        return _eefxPot.EEFxPot_LetterClass_setVerbose(self, *args, **kwargs)

    def cutoffDist(self, *args, **kwargs):
        return _eefxPot.EEFxPot_LetterClass_cutoffDist(self, *args, **kwargs)

    def setCutoffDist(self, *args, **kwargs):
        return _eefxPot.EEFxPot_LetterClass_setCutoffDist(self, *args, **kwargs)

    def moveTol(self, *args, **kwargs):
        return _eefxPot.EEFxPot_LetterClass_moveTol(self, *args, **kwargs)

    def setMoveTol(self, *args, **kwargs):
        return _eefxPot.EEFxPot_LetterClass_setMoveTol(self, *args, **kwargs)

    def profileN(self, *args, **kwargs):
        return _eefxPot.EEFxPot_LetterClass_profileN(self, *args, **kwargs)

    def setProfileN(self, *args, **kwargs):
        return _eefxPot.EEFxPot_LetterClass_setProfileN(self, *args, **kwargs)

    def a(self, *args, **kwargs):
        return _eefxPot.EEFxPot_LetterClass_a(self, *args, **kwargs)

    def setA(self, *args, **kwargs):
        return _eefxPot.EEFxPot_LetterClass_setA(self, *args, **kwargs)

    def thickness(self, *args, **kwargs):
        return _eefxPot.EEFxPot_LetterClass_thickness(self, *args, **kwargs)

    def setThickness(self, *args, **kwargs):
        return _eefxPot.EEFxPot_LetterClass_setThickness(self, *args, **kwargs)

    def e14Factor(self, *args, **kwargs):
        return _eefxPot.EEFxPot_LetterClass_e14Factor(self, *args, **kwargs)

    def setE14Factor(self, *args, **kwargs):
        return _eefxPot.EEFxPot_LetterClass_setE14Factor(self, *args, **kwargs)

    def collectAtomEnergies(self, *args, **kwargs):
        return _eefxPot.EEFxPot_LetterClass_collectAtomEnergies(self, *args, **kwargs)

    def setCollectAtomEnergies(self, *args, **kwargs):
        return _eefxPot.EEFxPot_LetterClass_setCollectAtomEnergies(self, *args, **kwargs)
    E14FullScale = _swig_property(_eefxPot.EEFxPot_LetterClass_E14FullScale_get, _eefxPot.EEFxPot_LetterClass_E14FullScale_set)

    def setE14FullScale(self, *args, **kwargs):
        return _eefxPot.EEFxPot_LetterClass_setE14FullScale(self, *args, **kwargs)

    def poreR(self, *args, **kwargs):
        return _eefxPot.EEFxPot_LetterClass_poreR(self, *args, **kwargs)

    def setPoreR(self, *args, **kwargs):
        return _eefxPot.EEFxPot_LetterClass_setPoreR(self, *args, **kwargs)

    def bicelleR(self, *args, **kwargs):
        return _eefxPot.EEFxPot_LetterClass_bicelleR(self, *args, **kwargs)

    def setbicelleR(self, *args, **kwargs):
        return _eefxPot.EEFxPot_LetterClass_setbicelleR(self, *args, **kwargs)

    def rms(self, *args, **kwargs):
        return _eefxPot.EEFxPot_LetterClass_rms(self, *args, **kwargs)

    def violations(self, *args, **kwargs):
        return _eefxPot.EEFxPot_LetterClass_violations(self, *args, **kwargs)

    def numRestraints(self, *args, **kwargs):
        return _eefxPot.EEFxPot_LetterClass_numRestraints(self, *args, **kwargs)

    def setIMMx(self, *args, **kwargs):
        return _eefxPot.EEFxPot_LetterClass_setIMMx(self, *args, **kwargs)

    def IMMx(self, *args, **kwargs):
        return _eefxPot.EEFxPot_LetterClass_IMMx(self, *args, **kwargs)

    def useCDIE(self, *args, **kwargs):
        return _eefxPot.EEFxPot_LetterClass_useCDIE(self, *args, **kwargs)
    IMMx_pore_ = _swig_property(_eefxPot.EEFxPot_LetterClass_IMMx_pore__get, _eefxPot.EEFxPot_LetterClass_IMMx_pore__set)
    IMMx_bicelle_ = _swig_property(_eefxPot.EEFxPot_LetterClass_IMMx_bicelle__get, _eefxPot.EEFxPot_LetterClass_IMMx_bicelle__set)
    IMMx_micelle_ = _swig_property(_eefxPot.EEFxPot_LetterClass_IMMx_micelle__get, _eefxPot.EEFxPot_LetterClass_IMMx_micelle__set)

    def setIMMx_pore(self, *args, **kwargs):
        return _eefxPot.EEFxPot_LetterClass_setIMMx_pore(self, *args, **kwargs)

    def setIMMx_bicelle(self, *args, **kwargs):
        return _eefxPot.EEFxPot_LetterClass_setIMMx_bicelle(self, *args, **kwargs)

    def setIMMx_micelle(self, *args, **kwargs):
        return _eefxPot.EEFxPot_LetterClass_setIMMx_micelle(self, *args, **kwargs)

    def IMMx_pore(self, *args, **kwargs):
        return _eefxPot.EEFxPot_LetterClass_IMMx_pore(self, *args, **kwargs)

    def IMMx_bicelle(self, *args, **kwargs):
        return _eefxPot.EEFxPot_LetterClass_IMMx_bicelle(self, *args, **kwargs)

    def IMMx_micelle(self, *args, **kwargs):
        return _eefxPot.EEFxPot_LetterClass_IMMx_micelle(self, *args, **kwargs)

    def useGROUp(self, *args, **kwargs):
        return _eefxPot.EEFxPot_LetterClass_useGROUp(self, *args, **kwargs)

    def setMicelleX(self, *args, **kwargs):
        return _eefxPot.EEFxPot_LetterClass_setMicelleX(self, *args, **kwargs)

    def setMicelleY(self, *args, **kwargs):
        return _eefxPot.EEFxPot_LetterClass_setMicelleY(self, *args, **kwargs)

    def setMicelleZ(self, *args, **kwargs):
        return _eefxPot.EEFxPot_LetterClass_setMicelleZ(self, *args, **kwargs)
    gcEnergy = _swig_property(_eefxPot.EEFxPot_LetterClass_gcEnergy_get, _eefxPot.EEFxPot_LetterClass_gcEnergy_set)
    voltEnergy = _swig_property(_eefxPot.EEFxPot_LetterClass_voltEnergy_get, _eefxPot.EEFxPot_LetterClass_voltEnergy_set)

    def setGCvalence(self, *args, **kwargs):
        return _eefxPot.EEFxPot_LetterClass_setGCvalence(self, *args, **kwargs)

    def setGCconc(self, *args, **kwargs):
        return _eefxPot.EEFxPot_LetterClass_setGCconc(self, *args, **kwargs)

    def setGCfraction(self, *args, **kwargs):
        return _eefxPot.EEFxPot_LetterClass_setGCfraction(self, *args, **kwargs)

    def setGCoffset(self, *args, **kwargs):
        return _eefxPot.EEFxPot_LetterClass_setGCoffset(self, *args, **kwargs)

    def setGCvoltage(self, *args, **kwargs):
        return _eefxPot.EEFxPot_LetterClass_setGCvoltage(self, *args, **kwargs)

    def setIMMx_GC(self, *args, **kwargs):
        return _eefxPot.EEFxPot_LetterClass_setIMMx_GC(self, *args, **kwargs)

    def IMMx_GC(self, *args, **kwargs):
        return _eefxPot.EEFxPot_LetterClass_IMMx_GC(self, *args, **kwargs)

    def setIMMx_volt(self, *args, **kwargs):
        return _eefxPot.EEFxPot_LetterClass_setIMMx_volt(self, *args, **kwargs)

    def IMMx_volt(self, *args, **kwargs):
        return _eefxPot.EEFxPot_LetterClass_IMMx_volt(self, *args, **kwargs)

    def printTotalE(self, *args, **kwargs):
        return _eefxPot.EEFxPot_LetterClass_printTotalE(self, *args, **kwargs)

    def atomInfo(self, *args, **kwargs):
        return _eefxPot.EEFxPot_LetterClass_atomInfo(self, *args, **kwargs)

    def atomEnergies(self, *args, **kwargs):
        return _eefxPot.EEFxPot_LetterClass_atomEnergies(self, *args, **kwargs)
    selPairs = _swig_property(_eefxPot.EEFxPot_LetterClass_selPairs_get, _eefxPot.EEFxPot_LetterClass_selPairs_set)
    selPairWeights = _swig_property(_eefxPot.EEFxPot_LetterClass_selPairWeights_get, _eefxPot.EEFxPot_LetterClass_selPairWeights_set)
    selPairEnergies = _swig_property(_eefxPot.EEFxPot_LetterClass_selPairEnergies_get, _eefxPot.EEFxPot_LetterClass_selPairEnergies_set)
    selPairIncludeA = _swig_property(_eefxPot.EEFxPot_LetterClass_selPairIncludeA_get, _eefxPot.EEFxPot_LetterClass_selPairIncludeA_set)
    selPairIncludeB = _swig_property(_eefxPot.EEFxPot_LetterClass_selPairIncludeB_get, _eefxPot.EEFxPot_LetterClass_selPairIncludeB_set)

    def selectionPairs(self, *args, **kwargs):
        return _eefxPot.EEFxPot_LetterClass_selectionPairs(self, *args, **kwargs)

    def numSelectionPairs(self, *args, **kwargs):
        return _eefxPot.EEFxPot_LetterClass_numSelectionPairs(self, *args, **kwargs)

    def addSelectionPair(self, *args, **kwargs):
        return _eefxPot.EEFxPot_LetterClass_addSelectionPair(self, *args, **kwargs)

    def setSelectionPairWeight(self, *args, **kwargs):
        return _eefxPot.EEFxPot_LetterClass_setSelectionPairWeight(self, *args, **kwargs)

    def selectionPairWeight(self, *args, **kwargs):
        return _eefxPot.EEFxPot_LetterClass_selectionPairWeight(self, *args, **kwargs)

    def selectionPairEnergy(self, *args, **kwargs):
        return _eefxPot.EEFxPot_LetterClass_selectionPairEnergy(self, *args, **kwargs)

    def deleteSelectionPair(self, *args, **kwargs):
        return _eefxPot.EEFxPot_LetterClass_deleteSelectionPair(self, *args, **kwargs)

    def resetSelectionPairs(self, *args, **kwargs):
        return _eefxPot.EEFxPot_LetterClass_resetSelectionPairs(self, *args, **kwargs)

    def elecPot_cxx(self, *args, **kwargs):
        return _eefxPot.EEFxPot_LetterClass_elecPot_cxx(self, *args, **kwargs)

    def solvPot_cxx(self, *args, **kwargs):
        return _eefxPot.EEFxPot_LetterClass_solvPot_cxx(self, *args, **kwargs)

    def vdwPot_cxx(self, *args, **kwargs):
        return _eefxPot.EEFxPot_LetterClass_vdwPot_cxx(self, *args, **kwargs)

    def help(self, *args, **kwargs):
        return _eefxPot.EEFxPot_LetterClass_help(self, *args, **kwargs)

class EEFxPot_LetterClassPtr(EEFxPot_LetterClass):
    def __init__(self, this):
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
        self.this.own(0)
        self.__class__ = EEFxPot_LetterClass

EEFxPot_LetterClass_swigregister = _eefxPot.EEFxPot_LetterClass_swigregister
EEFxPot_LetterClass_swigregister(EEFxPot_LetterClass)


pyXplorHelp = help


def help(*args):
    return _eefxPot.help(*args)
help = _eefxPot.help


