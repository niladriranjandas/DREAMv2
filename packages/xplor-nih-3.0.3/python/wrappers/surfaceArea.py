# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_surfaceArea')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_surfaceArea')
    _surfaceArea = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_surfaceArea', [dirname(__file__)])
        except ImportError:
            import _surfaceArea
            return _surfaceArea
        try:
            _mod = imp.load_module('_surfaceArea', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _surfaceArea = swig_import_helper()
    del swig_import_helper
else:
    import _surfaceArea
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


class rc_ptr_SurfaceAreaSaveData(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        this = _surfaceArea.new_rc_ptr_SurfaceAreaSaveData(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _surfaceArea.delete_rc_ptr_SurfaceAreaSaveData
    __del__ = lambda self: None

    def __deref__(self, *args, **kwargs):
        return _surfaceArea.rc_ptr_SurfaceAreaSaveData___deref__(self, *args, **kwargs)

    def __ref__(self, *args, **kwargs):
        return _surfaceArea.rc_ptr_SurfaceAreaSaveData___ref__(self, *args, **kwargs)

    def ptr(self, *args, **kwargs):
        return _surfaceArea.rc_ptr_SurfaceAreaSaveData_ptr(self, *args, **kwargs)

    def incr(self, *args, **kwargs):
        return _surfaceArea.rc_ptr_SurfaceAreaSaveData_incr(self, *args, **kwargs)

    def decr(self, *args, **kwargs):
        return _surfaceArea.rc_ptr_SurfaceAreaSaveData_decr(self, *args, **kwargs)

    def count(self, *args, **kwargs):
        return _surfaceArea.rc_ptr_SurfaceAreaSaveData_count(self, *args, **kwargs)

    def forceDelete(self, *args, **kwargs):
        return _surfaceArea.rc_ptr_SurfaceAreaSaveData_forceDelete(self, *args, **kwargs)

    def reset(self, *args, **kwargs):
        return _surfaceArea.rc_ptr_SurfaceAreaSaveData_reset(self, *args, **kwargs)

    def release(self, *args, **kwargs):
        return _surfaceArea.rc_ptr_SurfaceAreaSaveData_release(self, *args, **kwargs)
    cAtomPos = _swig_property(_surfaceArea.rc_ptr_SurfaceAreaSaveData_cAtomPos_get, _surfaceArea.rc_ptr_SurfaceAreaSaveData_cAtomPos_set)
    isolated = _swig_property(_surfaceArea.rc_ptr_SurfaceAreaSaveData_isolated_get, _surfaceArea.rc_ptr_SurfaceAreaSaveData_isolated_set)
    paths = _swig_property(_surfaceArea.rc_ptr_SurfaceAreaSaveData_paths_get, _surfaceArea.rc_ptr_SurfaceAreaSaveData_paths_set)
    isoContrib = _swig_property(_surfaceArea.rc_ptr_SurfaceAreaSaveData_isoContrib_get, _surfaceArea.rc_ptr_SurfaceAreaSaveData_isoContrib_set)

class rc_ptr_SurfaceAreaSaveDataPtr(rc_ptr_SurfaceAreaSaveData):
    def __init__(self, this):
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
        self.this.own(0)
        self.__class__ = rc_ptr_SurfaceAreaSaveData

rc_ptr_SurfaceAreaSaveData_swigregister = _surfaceArea.rc_ptr_SurfaceAreaSaveData_swigregister
rc_ptr_SurfaceAreaSaveData_swigregister(rc_ptr_SurfaceAreaSaveData)

class rc_ptr_SA_Vertex(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        this = _surfaceArea.new_rc_ptr_SA_Vertex(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _surfaceArea.delete_rc_ptr_SA_Vertex
    __del__ = lambda self: None

    def __deref__(self, *args, **kwargs):
        return _surfaceArea.rc_ptr_SA_Vertex___deref__(self, *args, **kwargs)

    def __ref__(self, *args, **kwargs):
        return _surfaceArea.rc_ptr_SA_Vertex___ref__(self, *args, **kwargs)

    def ptr(self, *args, **kwargs):
        return _surfaceArea.rc_ptr_SA_Vertex_ptr(self, *args, **kwargs)

    def incr(self, *args, **kwargs):
        return _surfaceArea.rc_ptr_SA_Vertex_incr(self, *args, **kwargs)

    def decr(self, *args, **kwargs):
        return _surfaceArea.rc_ptr_SA_Vertex_decr(self, *args, **kwargs)

    def count(self, *args, **kwargs):
        return _surfaceArea.rc_ptr_SA_Vertex_count(self, *args, **kwargs)

    def forceDelete(self, *args, **kwargs):
        return _surfaceArea.rc_ptr_SA_Vertex_forceDelete(self, *args, **kwargs)

    def reset(self, *args, **kwargs):
        return _surfaceArea.rc_ptr_SA_Vertex_reset(self, *args, **kwargs)

    def release(self, *args, **kwargs):
        return _surfaceArea.rc_ptr_SA_Vertex_release(self, *args, **kwargs)
    n0 = _swig_property(_surfaceArea.rc_ptr_SA_Vertex_n0_get, _surfaceArea.rc_ptr_SA_Vertex_n0_set)
    n1 = _swig_property(_surfaceArea.rc_ptr_SA_Vertex_n1_get, _surfaceArea.rc_ptr_SA_Vertex_n1_set)
    pos = _swig_property(_surfaceArea.rc_ptr_SA_Vertex_pos_get, _surfaceArea.rc_ptr_SA_Vertex_pos_set)
    tau0 = _swig_property(_surfaceArea.rc_ptr_SA_Vertex_tau0_get, _surfaceArea.rc_ptr_SA_Vertex_tau0_set)
    tau1 = _swig_property(_surfaceArea.rc_ptr_SA_Vertex_tau1_get, _surfaceArea.rc_ptr_SA_Vertex_tau1_set)
    omega = _swig_property(_surfaceArea.rc_ptr_SA_Vertex_omega_get, _surfaceArea.rc_ptr_SA_Vertex_omega_set)
    gamma = _swig_property(_surfaceArea.rc_ptr_SA_Vertex_gamma_get, _surfaceArea.rc_ptr_SA_Vertex_gamma_set)
    eta = _swig_property(_surfaceArea.rc_ptr_SA_Vertex_eta_get, _surfaceArea.rc_ptr_SA_Vertex_eta_set)
    sinPhi = _swig_property(_surfaceArea.rc_ptr_SA_Vertex_sinPhi_get, _surfaceArea.rc_ptr_SA_Vertex_sinPhi_set)
    cosPhi = _swig_property(_surfaceArea.rc_ptr_SA_Vertex_cosPhi_get, _surfaceArea.rc_ptr_SA_Vertex_cosPhi_set)

    def swapNeighbors(self, *args, **kwargs):
        return _surfaceArea.rc_ptr_SA_Vertex_swapNeighbors(self, *args, **kwargs)

    def update(self, *args, **kwargs):
        return _surfaceArea.rc_ptr_SA_Vertex_update(self, *args, **kwargs)

class rc_ptr_SA_VertexPtr(rc_ptr_SA_Vertex):
    def __init__(self, this):
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
        self.this.own(0)
        self.__class__ = rc_ptr_SA_Vertex

rc_ptr_SA_Vertex_swigregister = _surfaceArea.rc_ptr_SA_Vertex_swigregister
rc_ptr_SA_Vertex_swigregister(rc_ptr_SA_Vertex)

class rc_ptr_SA_ArcDerivInfo(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        this = _surfaceArea.new_rc_ptr_SA_ArcDerivInfo(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _surfaceArea.delete_rc_ptr_SA_ArcDerivInfo
    __del__ = lambda self: None

    def __deref__(self, *args, **kwargs):
        return _surfaceArea.rc_ptr_SA_ArcDerivInfo___deref__(self, *args, **kwargs)

    def __ref__(self, *args, **kwargs):
        return _surfaceArea.rc_ptr_SA_ArcDerivInfo___ref__(self, *args, **kwargs)

    def ptr(self, *args, **kwargs):
        return _surfaceArea.rc_ptr_SA_ArcDerivInfo_ptr(self, *args, **kwargs)

    def incr(self, *args, **kwargs):
        return _surfaceArea.rc_ptr_SA_ArcDerivInfo_incr(self, *args, **kwargs)

    def decr(self, *args, **kwargs):
        return _surfaceArea.rc_ptr_SA_ArcDerivInfo_decr(self, *args, **kwargs)

    def count(self, *args, **kwargs):
        return _surfaceArea.rc_ptr_SA_ArcDerivInfo_count(self, *args, **kwargs)

    def forceDelete(self, *args, **kwargs):
        return _surfaceArea.rc_ptr_SA_ArcDerivInfo_forceDelete(self, *args, **kwargs)

    def reset(self, *args, **kwargs):
        return _surfaceArea.rc_ptr_SA_ArcDerivInfo_reset(self, *args, **kwargs)

    def release(self, *args, **kwargs):
        return _surfaceArea.rc_ptr_SA_ArcDerivInfo_release(self, *args, **kwargs)
    dg = _swig_property(_surfaceArea.rc_ptr_SA_ArcDerivInfo_dg_get, _surfaceArea.rc_ptr_SA_ArcDerivInfo_dg_set)
    du = _swig_property(_surfaceArea.rc_ptr_SA_ArcDerivInfo_du_get, _surfaceArea.rc_ptr_SA_ArcDerivInfo_du_set)
    dP = _swig_property(_surfaceArea.rc_ptr_SA_ArcDerivInfo_dP_get, _surfaceArea.rc_ptr_SA_ArcDerivInfo_dP_set)
    dQ = _swig_property(_surfaceArea.rc_ptr_SA_ArcDerivInfo_dQ_get, _surfaceArea.rc_ptr_SA_ArcDerivInfo_dQ_set)
    dPhi = _swig_property(_surfaceArea.rc_ptr_SA_ArcDerivInfo_dPhi_get, _surfaceArea.rc_ptr_SA_ArcDerivInfo_dPhi_set)
    dPhiPrev = _swig_property(_surfaceArea.rc_ptr_SA_ArcDerivInfo_dPhiPrev_get, _surfaceArea.rc_ptr_SA_ArcDerivInfo_dPhiPrev_set)
    dPhiNext = _swig_property(_surfaceArea.rc_ptr_SA_ArcDerivInfo_dPhiNext_get, _surfaceArea.rc_ptr_SA_ArcDerivInfo_dPhiNext_set)

class rc_ptr_SA_ArcDerivInfoPtr(rc_ptr_SA_ArcDerivInfo):
    def __init__(self, this):
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
        self.this.own(0)
        self.__class__ = rc_ptr_SA_ArcDerivInfo

rc_ptr_SA_ArcDerivInfo_swigregister = _surfaceArea.rc_ptr_SA_ArcDerivInfo_swigregister
rc_ptr_SA_ArcDerivInfo_swigregister(rc_ptr_SA_ArcDerivInfo)

class rc_ptr_SA_Neighbor(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        this = _surfaceArea.new_rc_ptr_SA_Neighbor(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _surfaceArea.delete_rc_ptr_SA_Neighbor
    __del__ = lambda self: None

    def __deref__(self, *args, **kwargs):
        return _surfaceArea.rc_ptr_SA_Neighbor___deref__(self, *args, **kwargs)

    def __ref__(self, *args, **kwargs):
        return _surfaceArea.rc_ptr_SA_Neighbor___ref__(self, *args, **kwargs)

    def ptr(self, *args, **kwargs):
        return _surfaceArea.rc_ptr_SA_Neighbor_ptr(self, *args, **kwargs)

    def incr(self, *args, **kwargs):
        return _surfaceArea.rc_ptr_SA_Neighbor_incr(self, *args, **kwargs)

    def decr(self, *args, **kwargs):
        return _surfaceArea.rc_ptr_SA_Neighbor_decr(self, *args, **kwargs)

    def count(self, *args, **kwargs):
        return _surfaceArea.rc_ptr_SA_Neighbor_count(self, *args, **kwargs)

    def forceDelete(self, *args, **kwargs):
        return _surfaceArea.rc_ptr_SA_Neighbor_forceDelete(self, *args, **kwargs)

    def reset(self, *args, **kwargs):
        return _surfaceArea.rc_ptr_SA_Neighbor_reset(self, *args, **kwargs)

    def release(self, *args, **kwargs):
        return _surfaceArea.rc_ptr_SA_Neighbor_release(self, *args, **kwargs)
    atom = _swig_property(_surfaceArea.rc_ptr_SA_Neighbor_atom_get, _surfaceArea.rc_ptr_SA_Neighbor_atom_set)
    pos_ = _swig_property(_surfaceArea.rc_ptr_SA_Neighbor_pos__get, _surfaceArea.rc_ptr_SA_Neighbor_pos__set)
    d = _swig_property(_surfaceArea.rc_ptr_SA_Neighbor_d_get, _surfaceArea.rc_ptr_SA_Neighbor_d_set)
    u = _swig_property(_surfaceArea.rc_ptr_SA_Neighbor_u_get, _surfaceArea.rc_ptr_SA_Neighbor_u_set)
    r = _swig_property(_surfaceArea.rc_ptr_SA_Neighbor_r_get, _surfaceArea.rc_ptr_SA_Neighbor_r_set)
    g = _swig_property(_surfaceArea.rc_ptr_SA_Neighbor_g_get, _surfaceArea.rc_ptr_SA_Neighbor_g_set)
    a = _swig_property(_surfaceArea.rc_ptr_SA_Neighbor_a_get, _surfaceArea.rc_ptr_SA_Neighbor_a_set)
    index = _swig_property(_surfaceArea.rc_ptr_SA_Neighbor_index_get, _surfaceArea.rc_ptr_SA_Neighbor_index_set)

    def pos(self, *args, **kwargs):
        return _surfaceArea.rc_ptr_SA_Neighbor_pos(self, *args, **kwargs)

    def radius(self, *args, **kwargs):
        return _surfaceArea.rc_ptr_SA_Neighbor_radius(self, *args, **kwargs)

    def __eq__(self, *args, **kwargs):
        return _surfaceArea.rc_ptr_SA_Neighbor___eq__(self, *args, **kwargs)

    def update(self, *args, **kwargs):
        return _surfaceArea.rc_ptr_SA_Neighbor_update(self, *args, **kwargs)

class rc_ptr_SA_NeighborPtr(rc_ptr_SA_Neighbor):
    def __init__(self, this):
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
        self.this.own(0)
        self.__class__ = rc_ptr_SA_Neighbor

rc_ptr_SA_Neighbor_swigregister = _surfaceArea.rc_ptr_SA_Neighbor_swigregister
rc_ptr_SA_Neighbor_swigregister(rc_ptr_SA_Neighbor)

class CDSList_rc_Neighbor(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __len__(self, *args, **kwargs):
        return _surfaceArea.CDSList_rc_Neighbor___len__(self, *args, **kwargs)

    def __init__(self, *args):
        this = _surfaceArea.new_CDSList_rc_Neighbor(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def __getitem__(self, *args):
        return _surfaceArea.CDSList_rc_Neighbor___getitem__(self, *args)

    def __delitem__(self, *args, **kwargs):
        return _surfaceArea.CDSList_rc_Neighbor___delitem__(self, *args, **kwargs)

    def append(self, *args, **kwargs):
        return _surfaceArea.CDSList_rc_Neighbor_append(self, *args, **kwargs)

    def remove(self, *args, **kwargs):
        return _surfaceArea.CDSList_rc_Neighbor_remove(self, *args, **kwargs)

    def removeAll(self, *args, **kwargs):
        return _surfaceArea.CDSList_rc_Neighbor_removeAll(self, *args, **kwargs)

    def __setitem__(self, *args, **kwargs):
        return _surfaceArea.CDSList_rc_Neighbor___setitem__(self, *args, **kwargs)

    def __getslice__(self, *args, **kwargs):
        return _surfaceArea.CDSList_rc_Neighbor___getslice__(self, *args, **kwargs)

    def help(self, *args, **kwargs):
        return _surfaceArea.CDSList_rc_Neighbor_help(self, *args, **kwargs)
    __swig_destroy__ = _surfaceArea.delete_CDSList_rc_Neighbor
    __del__ = lambda self: None

class CDSList_rc_NeighborPtr(CDSList_rc_Neighbor):
    def __init__(self, this):
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
        self.this.own(0)
        self.__class__ = CDSList_rc_Neighbor

CDSList_rc_Neighbor_swigregister = _surfaceArea.CDSList_rc_Neighbor_swigregister
CDSList_rc_Neighbor_swigregister(CDSList_rc_Neighbor)

class CDSList_SA_Arc(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __len__(self, *args, **kwargs):
        return _surfaceArea.CDSList_SA_Arc___len__(self, *args, **kwargs)

    def __init__(self, *args):
        this = _surfaceArea.new_CDSList_SA_Arc(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def __getitem__(self, *args):
        return _surfaceArea.CDSList_SA_Arc___getitem__(self, *args)

    def __delitem__(self, *args, **kwargs):
        return _surfaceArea.CDSList_SA_Arc___delitem__(self, *args, **kwargs)

    def append(self, *args, **kwargs):
        return _surfaceArea.CDSList_SA_Arc_append(self, *args, **kwargs)

    def remove(self, *args, **kwargs):
        return _surfaceArea.CDSList_SA_Arc_remove(self, *args, **kwargs)

    def removeAll(self, *args, **kwargs):
        return _surfaceArea.CDSList_SA_Arc_removeAll(self, *args, **kwargs)

    def __setitem__(self, *args, **kwargs):
        return _surfaceArea.CDSList_SA_Arc___setitem__(self, *args, **kwargs)

    def __getslice__(self, *args, **kwargs):
        return _surfaceArea.CDSList_SA_Arc___getslice__(self, *args, **kwargs)

    def help(self, *args, **kwargs):
        return _surfaceArea.CDSList_SA_Arc_help(self, *args, **kwargs)
    __swig_destroy__ = _surfaceArea.delete_CDSList_SA_Arc
    __del__ = lambda self: None

class CDSList_SA_ArcPtr(CDSList_SA_Arc):
    def __init__(self, this):
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
        self.this.own(0)
        self.__class__ = CDSList_SA_Arc

CDSList_SA_Arc_swigregister = _surfaceArea.CDSList_SA_Arc_swigregister
CDSList_SA_Arc_swigregister(CDSList_SA_Arc)

class CDSList_CDSList_SA_Arc(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __len__(self, *args, **kwargs):
        return _surfaceArea.CDSList_CDSList_SA_Arc___len__(self, *args, **kwargs)

    def __init__(self, *args):
        this = _surfaceArea.new_CDSList_CDSList_SA_Arc(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def __getitem__(self, *args):
        return _surfaceArea.CDSList_CDSList_SA_Arc___getitem__(self, *args)

    def __delitem__(self, *args, **kwargs):
        return _surfaceArea.CDSList_CDSList_SA_Arc___delitem__(self, *args, **kwargs)

    def append(self, *args, **kwargs):
        return _surfaceArea.CDSList_CDSList_SA_Arc_append(self, *args, **kwargs)

    def remove(self, *args, **kwargs):
        return _surfaceArea.CDSList_CDSList_SA_Arc_remove(self, *args, **kwargs)

    def removeAll(self, *args, **kwargs):
        return _surfaceArea.CDSList_CDSList_SA_Arc_removeAll(self, *args, **kwargs)

    def __setitem__(self, *args, **kwargs):
        return _surfaceArea.CDSList_CDSList_SA_Arc___setitem__(self, *args, **kwargs)

    def __getslice__(self, *args, **kwargs):
        return _surfaceArea.CDSList_CDSList_SA_Arc___getslice__(self, *args, **kwargs)

    def help(self, *args, **kwargs):
        return _surfaceArea.CDSList_CDSList_SA_Arc_help(self, *args, **kwargs)
    __swig_destroy__ = _surfaceArea.delete_CDSList_CDSList_SA_Arc
    __del__ = lambda self: None

class CDSList_CDSList_SA_ArcPtr(CDSList_CDSList_SA_Arc):
    def __init__(self, this):
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
        self.this.own(0)
        self.__class__ = CDSList_CDSList_SA_Arc

CDSList_CDSList_SA_Arc_swigregister = _surfaceArea.CDSList_CDSList_SA_Arc_swigregister
CDSList_CDSList_SA_Arc_swigregister(CDSList_CDSList_SA_Arc)

class SA_Neighbor(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args, **kwargs):
        this = _surfaceArea.new_SA_Neighbor(*args, **kwargs)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    atom = _swig_property(_surfaceArea.SA_Neighbor_atom_get, _surfaceArea.SA_Neighbor_atom_set)
    pos_ = _swig_property(_surfaceArea.SA_Neighbor_pos__get, _surfaceArea.SA_Neighbor_pos__set)
    d = _swig_property(_surfaceArea.SA_Neighbor_d_get, _surfaceArea.SA_Neighbor_d_set)
    u = _swig_property(_surfaceArea.SA_Neighbor_u_get, _surfaceArea.SA_Neighbor_u_set)
    r = _swig_property(_surfaceArea.SA_Neighbor_r_get, _surfaceArea.SA_Neighbor_r_set)
    g = _swig_property(_surfaceArea.SA_Neighbor_g_get, _surfaceArea.SA_Neighbor_g_set)
    a = _swig_property(_surfaceArea.SA_Neighbor_a_get, _surfaceArea.SA_Neighbor_a_set)
    index = _swig_property(_surfaceArea.SA_Neighbor_index_get, _surfaceArea.SA_Neighbor_index_set)

    def pos(self, *args, **kwargs):
        return _surfaceArea.SA_Neighbor_pos(self, *args, **kwargs)

    def radius(self, *args, **kwargs):
        return _surfaceArea.SA_Neighbor_radius(self, *args, **kwargs)

    def __eq__(self, *args, **kwargs):
        return _surfaceArea.SA_Neighbor___eq__(self, *args, **kwargs)

    def update(self, *args, **kwargs):
        return _surfaceArea.SA_Neighbor_update(self, *args, **kwargs)
    __swig_destroy__ = _surfaceArea.delete_SA_Neighbor
    __del__ = lambda self: None

class SA_NeighborPtr(SA_Neighbor):
    def __init__(self, this):
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
        self.this.own(0)
        self.__class__ = SA_Neighbor

SA_Neighbor_swigregister = _surfaceArea.SA_Neighbor_swigregister
SA_Neighbor_swigregister(SA_Neighbor)

class SA_TouchingList(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args, **kwargs):
        this = _surfaceArea.new_SA_TouchingList(*args, **kwargs)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def update(self, *args, **kwargs):
        return _surfaceArea.SA_TouchingList_update(self, *args, **kwargs)
    posCache = _swig_property(_surfaceArea.SA_TouchingList_posCache_get, _surfaceArea.SA_TouchingList_posCache_set)
    engulfed = _swig_property(_surfaceArea.SA_TouchingList_engulfed_get, _surfaceArea.SA_TouchingList_engulfed_set)
    __swig_destroy__ = _surfaceArea.delete_SA_TouchingList
    __del__ = lambda self: None

class SA_TouchingListPtr(SA_TouchingList):
    def __init__(self, this):
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
        self.this.own(0)
        self.__class__ = SA_TouchingList

SA_TouchingList_swigregister = _surfaceArea.SA_TouchingList_swigregister
SA_TouchingList_swigregister(SA_TouchingList)

class SA_Vertex(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args, **kwargs):
        this = _surfaceArea.new_SA_Vertex(*args, **kwargs)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    n0 = _swig_property(_surfaceArea.SA_Vertex_n0_get, _surfaceArea.SA_Vertex_n0_set)
    n1 = _swig_property(_surfaceArea.SA_Vertex_n1_get, _surfaceArea.SA_Vertex_n1_set)
    pos = _swig_property(_surfaceArea.SA_Vertex_pos_get, _surfaceArea.SA_Vertex_pos_set)
    tau0 = _swig_property(_surfaceArea.SA_Vertex_tau0_get, _surfaceArea.SA_Vertex_tau0_set)
    tau1 = _swig_property(_surfaceArea.SA_Vertex_tau1_get, _surfaceArea.SA_Vertex_tau1_set)
    omega = _swig_property(_surfaceArea.SA_Vertex_omega_get, _surfaceArea.SA_Vertex_omega_set)
    gamma = _swig_property(_surfaceArea.SA_Vertex_gamma_get, _surfaceArea.SA_Vertex_gamma_set)
    eta = _swig_property(_surfaceArea.SA_Vertex_eta_get, _surfaceArea.SA_Vertex_eta_set)
    sinPhi = _swig_property(_surfaceArea.SA_Vertex_sinPhi_get, _surfaceArea.SA_Vertex_sinPhi_set)
    cosPhi = _swig_property(_surfaceArea.SA_Vertex_cosPhi_get, _surfaceArea.SA_Vertex_cosPhi_set)

    def swapNeighbors(self, *args, **kwargs):
        return _surfaceArea.SA_Vertex_swapNeighbors(self, *args, **kwargs)

    def update(self, *args, **kwargs):
        return _surfaceArea.SA_Vertex_update(self, *args, **kwargs)
    __swig_destroy__ = _surfaceArea.delete_SA_Vertex
    __del__ = lambda self: None

class SA_VertexPtr(SA_Vertex):
    def __init__(self, this):
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
        self.this.own(0)
        self.__class__ = SA_Vertex

SA_Vertex_swigregister = _surfaceArea.SA_Vertex_swigregister
SA_Vertex_swigregister(SA_Vertex)

class SA_Arc(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        this = _surfaceArea.new_SA_Arc(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ni(self, *args, **kwargs):
        return _surfaceArea.SA_Arc_ni(self, *args, **kwargs)

    def nj(self, *args, **kwargs):
        return _surfaceArea.SA_Arc_nj(self, *args, **kwargs)

    def nk(self, *args, **kwargs):
        return _surfaceArea.SA_Arc_nk(self, *args, **kwargs)
    v0 = _swig_property(_surfaceArea.SA_Arc_v0_get, _surfaceArea.SA_Arc_v0_set)
    v1 = _swig_property(_surfaceArea.SA_Arc_v1_get, _surfaceArea.SA_Arc_v1_set)
    Phi = _swig_property(_surfaceArea.SA_Arc_Phi_get, _surfaceArea.SA_Arc_Phi_set)
    cosTheta = _swig_property(_surfaceArea.SA_Arc_cosTheta_get, _surfaceArea.SA_Arc_cosTheta_set)
    m = _swig_property(_surfaceArea.SA_Arc_m_get, _surfaceArea.SA_Arc_m_set)
    n = _swig_property(_surfaceArea.SA_Arc_n_get, _surfaceArea.SA_Arc_n_set)
    Omega = _swig_property(_surfaceArea.SA_Arc_Omega_get, _surfaceArea.SA_Arc_Omega_set)
    S = _swig_property(_surfaceArea.SA_Arc_S_get, _surfaceArea.SA_Arc_S_set)
    vertexIndex = _swig_property(_surfaceArea.SA_Arc_vertexIndex_get, _surfaceArea.SA_Arc_vertexIndex_set)
    derivInfo = _swig_property(_surfaceArea.SA_Arc_derivInfo_get, _surfaceArea.SA_Arc_derivInfo_set)
    __swig_destroy__ = _surfaceArea.delete_SA_Arc
    __del__ = lambda self: None

class SA_ArcPtr(SA_Arc):
    def __init__(self, this):
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
        self.this.own(0)
        self.__class__ = SA_Arc

SA_Arc_swigregister = _surfaceArea.SA_Arc_swigregister
SA_Arc_swigregister(SA_Arc)

class SA_ArcDerivInfo(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args, **kwargs):
        this = _surfaceArea.new_SA_ArcDerivInfo(*args, **kwargs)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    dg = _swig_property(_surfaceArea.SA_ArcDerivInfo_dg_get, _surfaceArea.SA_ArcDerivInfo_dg_set)
    du = _swig_property(_surfaceArea.SA_ArcDerivInfo_du_get, _surfaceArea.SA_ArcDerivInfo_du_set)
    dP = _swig_property(_surfaceArea.SA_ArcDerivInfo_dP_get, _surfaceArea.SA_ArcDerivInfo_dP_set)
    dQ = _swig_property(_surfaceArea.SA_ArcDerivInfo_dQ_get, _surfaceArea.SA_ArcDerivInfo_dQ_set)
    dPhi = _swig_property(_surfaceArea.SA_ArcDerivInfo_dPhi_get, _surfaceArea.SA_ArcDerivInfo_dPhi_set)
    dPhiPrev = _swig_property(_surfaceArea.SA_ArcDerivInfo_dPhiPrev_get, _surfaceArea.SA_ArcDerivInfo_dPhiPrev_set)
    dPhiNext = _swig_property(_surfaceArea.SA_ArcDerivInfo_dPhiNext_get, _surfaceArea.SA_ArcDerivInfo_dPhiNext_set)
    __swig_destroy__ = _surfaceArea.delete_SA_ArcDerivInfo
    __del__ = lambda self: None

class SA_ArcDerivInfoPtr(SA_ArcDerivInfo):
    def __init__(self, this):
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
        self.this.own(0)
        self.__class__ = SA_ArcDerivInfo

SA_ArcDerivInfo_swigregister = _surfaceArea.SA_ArcDerivInfo_swigregister
SA_ArcDerivInfo_swigregister(SA_ArcDerivInfo)

class SurfaceArea(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args, **kwargs):
        this = _surfaceArea.new_SurfaceArea(*args, **kwargs)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _surfaceArea.delete_SurfaceArea
    __del__ = lambda self: None

    def singleAtom(self, *args, **kwargs):
        return _surfaceArea.SurfaceArea_singleAtom(self, *args, **kwargs)

    def singleAtomDerivs(self, *args, **kwargs):
        return _surfaceArea.SurfaceArea_singleAtomDerivs(self, *args, **kwargs)

    def saveData(self, *args, **kwargs):
        return _surfaceArea.SurfaceArea_saveData(self, *args, **kwargs)

    def radius(self, *args, **kwargs):
        return _surfaceArea.SurfaceArea_radius(self, *args, **kwargs)

    def setRadius(self, *args, **kwargs):
        return _surfaceArea.SurfaceArea_setRadius(self, *args, **kwargs)

    def verbose(self, *args, **kwargs):
        return _surfaceArea.SurfaceArea_verbose(self, *args, **kwargs)

    def setVerbose(self, *args, **kwargs):
        return _surfaceArea.SurfaceArea_setVerbose(self, *args, **kwargs)

    def useConvexHull(self, *args, **kwargs):
        return _surfaceArea.SurfaceArea_useConvexHull(self, *args, **kwargs)

    def setUseConvexHull(self, *args, **kwargs):
        return _surfaceArea.SurfaceArea_setUseConvexHull(self, *args, **kwargs)

    def moveTol(self, *args, **kwargs):
        return _surfaceArea.SurfaceArea_moveTol(self, *args, **kwargs)

    def setMoveTol(self, *args, **kwargs):
        return _surfaceArea.SurfaceArea_setMoveTol(self, *args, **kwargs)

    def useSphereMetric(self, *args, **kwargs):
        return _surfaceArea.SurfaceArea_useSphereMetric(self, *args, **kwargs)

    def setUseSphereMetric(self, *args, **kwargs):
        return _surfaceArea.SurfaceArea_setUseSphereMetric(self, *args, **kwargs)

    def sphereGridSize(self, *args, **kwargs):
        return _surfaceArea.SurfaceArea_sphereGridSize(self, *args, **kwargs)

    def setSphereGridSize(self, *args, **kwargs):
        return _surfaceArea.SurfaceArea_setSphereGridSize(self, *args, **kwargs)

    def selection(self, *args, **kwargs):
        return _surfaceArea.SurfaceArea_selection(self, *args, **kwargs)

    def setSelection(self, *args, **kwargs):
        return _surfaceArea.SurfaceArea_setSelection(self, *args, **kwargs)

    def simulation(self, *args, **kwargs):
        return _surfaceArea.SurfaceArea_simulation(self, *args, **kwargs)

    def help(self, *args, **kwargs):
        return _surfaceArea.SurfaceArea_help(self, *args, **kwargs)

class SurfaceAreaPtr(SurfaceArea):
    def __init__(self, this):
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
        self.this.own(0)
        self.__class__ = SurfaceArea

SurfaceArea_swigregister = _surfaceArea.SurfaceArea_swigregister
SurfaceArea_swigregister(SurfaceArea)

class SurfaceAreaSaveData(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    cAtomPos = _swig_property(_surfaceArea.SurfaceAreaSaveData_cAtomPos_get, _surfaceArea.SurfaceAreaSaveData_cAtomPos_set)
    isolated = _swig_property(_surfaceArea.SurfaceAreaSaveData_isolated_get, _surfaceArea.SurfaceAreaSaveData_isolated_set)
    paths = _swig_property(_surfaceArea.SurfaceAreaSaveData_paths_get, _surfaceArea.SurfaceAreaSaveData_paths_set)
    isoContrib = _swig_property(_surfaceArea.SurfaceAreaSaveData_isoContrib_get, _surfaceArea.SurfaceAreaSaveData_isoContrib_set)
    __swig_destroy__ = _surfaceArea.delete_SurfaceAreaSaveData
    __del__ = lambda self: None

    def __init__(self, *args, **kwargs):
        this = _surfaceArea.new_SurfaceAreaSaveData(*args, **kwargs)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

class SurfaceAreaSaveDataPtr(SurfaceAreaSaveData):
    def __init__(self, this):
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
        self.this.own(0)
        self.__class__ = SurfaceAreaSaveData

SurfaceAreaSaveData_swigregister = _surfaceArea.SurfaceAreaSaveData_swigregister
SurfaceAreaSaveData_swigregister(SurfaceAreaSaveData)


pyXplorHelp = help


def help(*args):
    return _surfaceArea.help(*args)
help = _surfaceArea.help


