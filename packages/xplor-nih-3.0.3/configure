#!/bin/sh

usage()
{
	echo "usage: $0 [-symlinks <path>] [-cingsh <path>]"
	echo
	echo "  Configure Xplor-NIH executable and scripts."
	echo
	echo "  If the optional -symlinks option is given. Symlinks to"
	echo "  the xplor executable and script will be placed in the given"
	echo "  path."
	echo 
	echo " The argument to the -cingsh option should be the full path to"
	echo " the cing.sh script generated by cing's make install. If it"
	echo " is not specified then cing will still be found if its "
	echo " settings are found in the environment"
	echo
}

while [ -n "$1" ]; do
 opt=$1
 shift
 case "$opt" in
    -help|-h|--help)
        usage
	exit 0
    ;;
    -symlinks)
        symlinkPath=$1
	shift
    ;;
    -cingsh)
        cingsh=$1
	shift
    ;;
    *)
        echo "invalid option: $opt"
	usage
	exit 1
    ;;
 esac
done

pwd=`pwd`

if echo "$pwd" | grep -q ' '; then
    echo "You are attempting to install into a path location containing a space."
    echo "This is not yet supported. Sorry."
    echo "Please retry in a different directory."
    exit 1
fi


#FIX: this list should be built from Makefile.helpers
scriptFiles="xplor testDist seq2psf pdb2psf pyXplor tclXplor\
             jupyterXplor \
             targetRMSD torsionReport\
             calcTensor calcDaRh calcETensor\
             calcSAXS calcSAXS-bufSub \
             calcPSol calcPRE \
             domainDecompose findClusters mleFit pbsxplor slurmXplor\
             compareTensors calcSA\
             aveStruct ens2pdb calcSARDC contactMap ramaStrip \
             calcDimerConc scriptMaker idleXplor convertTalos plotLog \
             runSparta genSurf hbScore energyPlot detChirality headerHelp"

if [ ! -z "$cingsh" ]; then
    [ -f $cingsh ] || cingsh=$cingsh/cing.sh
    if [ ! -f $cingsh ]; then
	echo "Could not find cing.sh"
    fi
fi

for binFile in $scriptFiles; do
  sed "s%__XPLOR_DIR__%$pwd%g" <bin/$binFile.in |\
  sed "s%__CINGSH__%$cingsh%g" > bin/$binFile
  chmod 755 bin/$binFile
done

version=`bin/xplor -features | head -1 | sed 's/Xplor-NIH version //'`
baseURL="https://nmr.cit.nih.gov/xplor-nih"

for binFile in $scriptFiles; do
    sed "s%__VERSION__%$version%g" <bin/$binFile.in |\
	sed "s%__XPLOR_DIR__%$pwd%g"  |\
	sed "s%__XPLORNIH_BASE_URL__%$baseURL%g"  |\
	sed "s%__CINGSH__%$cingsh%g" > bin/$binFile
  chmod 755 bin/$binFile
done

#get the value of ARCH
str=`./bin/xplor -sh-env`

if [ $? -eq 0 ]; then
    eval $str
else
    echo $str
    echo "configure failed"
    exit 1
fi

# a hack to get things to work with Python 2.7
#   Somehow get_path('platstdlib') always has an extra local/
#   element in the path (which is explicitly removed if it's /usr/local).
#   So we add an extra local symlink so that Python can find the config
#   Makefile
if [ ! -h python/bin.$ARCH/local ]; then
    rm -f python/bin.$ARCH/local
    ln -s . python/bin.$ARCH/local
fi

#pre-compile python files

if [ -d python ]; then
    echo "import compileall; compileall.compile_dir('python')" |\
	env PYTHONOPTIMIZE=1 bin/xplor -py >/dev/null
    echo "import compileall; compileall.compile_dir('bin.$ARCH')" |\
	env PYTHONOPTIMIZE=1 bin/xplor -py  >/dev/null
fi

headerHelpDir=${XPLOR_HELPDIR}/headerHelp
[ -d "$headerHelpDir" ] || mkdir $headerHelpDir

[ "$symlinkPath" = "" ] && exit 0

mkdirhier=$pwd/bin/mkdirhier

[ -d $symlinkPath ] || $mkdirhier $symlinkPath

for script in getBest findXcookie $scriptFiles; do
    rm -f $symlinkPath/$script
    ln -s $pwd/bin/$script $symlinkPath
done

