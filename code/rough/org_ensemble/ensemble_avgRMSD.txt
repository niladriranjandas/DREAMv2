PyMOL>run averageRMS.py
PyMOL>avgRMS('1PBU','backbone',1,0,'yesfit_ALL','yes',0)
--------------------------------------------------------------------------------
Averaging 20 states [1, 20] of object "1PBU and backbone" (20 total states) to get new single-state object "yesfit_ALL"...
--------------------------------------------------------------------------------
-> proceeding WITH FITTING to reference state...

----rmsd---


 1PBU_0001 to yesfit_ALL
(1.1196763515472412, 792, 3, 1.1783547401428223, 803, 884.0, 162)

 1PBU_0002 to yesfit_ALL
(1.1532328128814697, 791, 2, 1.2206599712371826, 803, 884.0, 162)

 1PBU_0003 to yesfit_ALL
(1.1861438751220703, 787, 3, 1.3473104238510132, 803, 884.0, 162)

 1PBU_0004 to yesfit_ALL
(1.1775541305541992, 793, 2, 1.2320830821990967, 803, 884.0, 162)

 1PBU_0005 to yesfit_ALL
(1.1834808588027954, 793, 3, 1.2412025928497314, 803, 884.0, 162)

 1PBU_0006 to yesfit_ALL
(1.2105708122253418, 787, 3, 1.2896513938903809, 803, 884.0, 162)

 1PBU_0007 to yesfit_ALL
(1.2109782695770264, 791, 2, 1.2726421356201172, 803, 884.0, 162)

 1PBU_0008 to yesfit_ALL
(1.1827762126922607, 787, 3, 1.2999087572097778, 803, 884.0, 162)

 1PBU_0009 to yesfit_ALL
(1.1657812595367432, 790, 3, 1.2547215223312378, 803, 884.0, 162)

 1PBU_0010 to yesfit_ALL
(1.1582558155059814, 786, 3, 1.3281407356262207, 803, 884.0, 162)

 1PBU_0011 to yesfit_ALL
(1.1839275360107422, 788, 3, 1.304987907409668, 803, 884.0, 162)

 1PBU_0012 to yesfit_ALL
(1.1915782690048218, 792, 4, 1.2466849088668823, 803, 884.0, 162)

 1PBU_0013 to yesfit_ALL
(1.146829605102539, 789, 3, 1.2331246137619019, 803, 884.0, 162)

 1PBU_0014 to yesfit_ALL
(1.1719274520874023, 793, 3, 1.2228927612304688, 803, 884.0, 162)

 1PBU_0015 to yesfit_ALL
(1.1622021198272705, 790, 2, 1.2423152923583984, 803, 884.0, 162)

 1PBU_0016 to yesfit_ALL
(1.1687307357788086, 788, 3, 1.3148502111434937, 803, 884.0, 162)

 1PBU_0017 to yesfit_ALL
(1.1648752689361572, 789, 3, 1.2329026460647583, 803, 884.0, 162)

 1PBU_0018 to yesfit_ALL
(1.221100091934204, 775, 4, 1.3412988185882568, 803, 884.0, 162)

 1PBU_0019 to yesfit_ALL
(1.1336520910263062, 785, 3, 1.2267416715621948, 803, 884.0, 162)

 1PBU_0020 to yesfit_ALL
(1.1775654554367065, 773, 4, 1.30604088306427, 803, 884.0, 162)
PyMOL>run averageRMS.py
PyMOL>avgRMS('1XXE','backbone',1,0,'yesfit_ALL','yes',0)
--------------------------------------------------------------------------------
Averaging 25 states [1, 25] of object "1XXE and backbone" (25 total states) to get new single-state object "yesfit_ALL"...
--------------------------------------------------------------------------------
-> proceeding WITH FITTING to reference state...

----rmsd---


 1XXE_0001 to yesfit_ALL
(1.1378358602523804, 1305, 3, 1.2441043853759766, 1332, 1397.0, 268)

 1XXE_0002 to yesfit_ALL
(1.150388240814209, 1304, 3, 1.2520029544830322, 1332, 1397.0, 268)

 1XXE_0003 to yesfit_ALL
(1.197468638420105, 1308, 3, 1.2844939231872559, 1332, 1397.0, 268)

 1XXE_0004 to yesfit_ALL
(1.1787936687469482, 1306, 3, 1.2727781534194946, 1332, 1397.0, 268)

 1XXE_0005 to yesfit_ALL
(1.1909902095794678, 1304, 3, 1.290425419807434, 1332, 1397.0, 268)

 1XXE_0006 to yesfit_ALL
(1.1831135749816895, 1305, 3, 1.2779079675674438, 1332, 1397.0, 268)

 1XXE_0007 to yesfit_ALL
(1.1679613590240479, 1301, 3, 1.2724378108978271, 1332, 1397.0, 268)

 1XXE_0008 to yesfit_ALL
(1.1656458377838135, 1301, 4, 1.2789347171783447, 1332, 1397.0, 268)

 1XXE_0009 to yesfit_ALL
(1.144028663635254, 1290, 4, 1.2792770862579346, 1332, 1397.0, 268)

 1XXE_0010 to yesfit_ALL
(1.1929633617401123, 1305, 3, 1.2950499057769775, 1332, 1397.0, 268)

 1XXE_0011 to yesfit_ALL
(1.2050310373306274, 1306, 4, 1.295954942703247, 1332, 1397.0, 268)

 1XXE_0012 to yesfit_ALL
(1.1591994762420654, 1307, 3, 1.252429723739624, 1332, 1397.0, 268)

 1XXE_0013 to yesfit_ALL
(1.1737302541732788, 1298, 3, 1.2951586246490479, 1332, 1397.0, 268)

 1XXE_0014 to yesfit_ALL
(1.1697380542755127, 1298, 3, 1.3084263801574707, 1332, 1397.0, 268)

 1XXE_0015 to yesfit_ALL
(1.1737244129180908, 1299, 4, 1.2838118076324463, 1332, 1397.0, 268)

 1XXE_0016 to yesfit_ALL
(1.1839734315872192, 1303, 3, 1.2942826747894287, 1332, 1397.0, 268)

 1XXE_0017 to yesfit_ALL
(1.1939682960510254, 1296, 4, 1.3465453386306763, 1332, 1397.0, 268)

 1XXE_0018 to yesfit_ALL
(1.1735385656356812, 1301, 3, 1.286250114440918, 1332, 1397.0, 268)

 1XXE_0019 to yesfit_ALL
(1.1807289123535156, 1303, 3, 1.2788931131362915, 1332, 1397.0, 268)

 1XXE_0020 to yesfit_ALL
(1.1781837940216064, 1297, 5, 1.294880747795105, 1332, 1397.0, 268)

 1XXE_0021 to yesfit_ALL
(1.185380220413208, 1293, 3, 1.3639309406280518, 1332, 1397.0, 268)

 1XXE_0022 to yesfit_ALL
(1.1769073009490967, 1298, 3, 1.302631139755249, 1332, 1397.0, 268)

 1XXE_0023 to yesfit_ALL
(1.1733522415161133, 1300, 4, 1.278329849243164, 1332, 1397.0, 268)

 1XXE_0024 to yesfit_ALL
(1.138628602027893, 1298, 3, 1.2731455564498901, 1332, 1397.0, 268)

 1XXE_0025 to yesfit_ALL
(1.1627857685089111, 1305, 3, 1.2593716382980347, 1332, 1397.0, 268)
PyMOL>run averageRMS.py
PyMOL>avgRMS('2KOK','backbone',1,0,'yesfit_ALL','yes',0)
--------------------------------------------------------------------------------
Averaging 20 states [1, 20] of object "2KOK and backbone" (20 total states) to get new single-state object "yesfit_ALL"...
--------------------------------------------------------------------------------
-> proceeding WITH FITTING to reference state...

----rmsd---


 2KOK_0001 to yesfit_ALL
(1.2299652099609375, 540, 5, 1.530279517173767, 593, 632.0, 120)

 2KOK_0002 to yesfit_ALL
(1.483047604560852, 568, 5, 1.917575716972351, 593, 632.0, 120)

 2KOK_0003 to yesfit_ALL
(1.550648808479309, 576, 3, 1.7007429599761963, 593, 632.0, 120)

 2KOK_0004 to yesfit_ALL
(1.3456947803497314, 563, 4, 2.0174267292022705, 593, 632.0, 120)

 2KOK_0005 to yesfit_ALL
(1.4382394552230835, 567, 4, 1.9319087266921997, 593, 632.0, 120)

 2KOK_0006 to yesfit_ALL
(1.314778208732605, 566, 4, 2.8843865394592285, 593, 632.0, 120)

 2KOK_0007 to yesfit_ALL
(1.3647990226745605, 555, 5, 1.710700511932373, 593, 632.0, 120)

 2KOK_0008 to yesfit_ALL
(1.5748021602630615, 578, 4, 1.779678225517273, 593, 632.0, 120)

 2KOK_0009 to yesfit_ALL
(1.331782579421997, 576, 4, 1.5103236436843872, 593, 632.0, 120)

 2KOK_0010 to yesfit_ALL
(1.378692865371704, 574, 4, 1.529537320137024, 593, 632.0, 120)

 2KOK_0011 to yesfit_ALL
(1.4134960174560547, 568, 4, 1.6652287244796753, 593, 632.0, 120)

 2KOK_0012 to yesfit_ALL
(1.4570279121398926, 569, 3, 2.1922595500946045, 593, 632.0, 120)

 2KOK_0013 to yesfit_ALL
(1.3728469610214233, 573, 4, 1.6409029960632324, 593, 632.0, 120)

 2KOK_0014 to yesfit_ALL
(1.3097035884857178, 570, 3, 1.8269180059432983, 593, 632.0, 120)

 2KOK_0015 to yesfit_ALL
(1.4653254747390747, 573, 3, 1.8644843101501465, 593, 632.0, 120)

 2KOK_0016 to yesfit_ALL
(1.5294005870819092, 562, 4, 1.7425780296325684, 593, 632.0, 120)

 2KOK_0017 to yesfit_ALL
(1.2807033061981201, 562, 4, 1.7190626859664917, 593, 632.0, 120)

 2KOK_0018 to yesfit_ALL
(1.4411314725875854, 564, 5, 1.6137791872024536, 593, 632.0, 120)

 2KOK_0019 to yesfit_ALL
(1.4157958030700684, 570, 4, 1.8065345287322998, 593, 632.0, 120)

 2KOK_0020 to yesfit_ALL
(1.5758824348449707, 563, 4, 1.774872899055481, 593, 632.0, 120)
PyMOL>run averageRMS.py
PyMOL>avgRMS('2L7B','backbone',1,0,'yesfit_ALL','yes',0)
--------------------------------------------------------------------------------
Averaging 20 states [1, 20] of object "2L7B and backbone" (20 total states) to get new single-state object "yesfit_ALL"...
--------------------------------------------------------------------------------
-> proceeding WITH FITTING to reference state...

----rmsd---


 2L7B_0001 to yesfit_ALL
(1.1733808517456055, 1423, 4, 1.3556280136108398, 1487, 1487.0, 299)

 2L7B_0002 to yesfit_ALL
(1.3655260801315308, 1427, 5, 1.543071985244751, 1487, 1487.0, 299)

 2L7B_0003 to yesfit_ALL
(1.3285027742385864, 1421, 5, 1.5483894348144531, 1487, 1487.0, 299)

 2L7B_0004 to yesfit_ALL
(1.3724761009216309, 1429, 4, 1.5453131198883057, 1487, 1487.0, 299)

 2L7B_0005 to yesfit_ALL
(1.3744409084320068, 1426, 4, 1.5402138233184814, 1487, 1487.0, 299)

 2L7B_0006 to yesfit_ALL
(1.4065499305725098, 1418, 5, 1.7169069051742554, 1487, 1487.0, 299)

 2L7B_0007 to yesfit_ALL
(1.3480364084243774, 1428, 3, 1.5453392267227173, 1487, 1487.0, 299)

 2L7B_0008 to yesfit_ALL
(1.4450560808181763, 1411, 5, 1.704343318939209, 1487, 1487.0, 299)

 2L7B_0009 to yesfit_ALL
(1.334710717201233, 1418, 5, 1.61314058303833, 1487, 1487.0, 299)

 2L7B_0010 to yesfit_ALL
(1.2889132499694824, 1421, 4, 1.4963563680648804, 1487, 1487.0, 299)

 2L7B_0011 to yesfit_ALL
(1.4032459259033203, 1439, 4, 1.568481683731079, 1487, 1487.0, 299)

 2L7B_0012 to yesfit_ALL
(1.4126230478286743, 1421, 5, 1.6641368865966797, 1487, 1487.0, 299)

 2L7B_0013 to yesfit_ALL
(1.4374234676361084, 1429, 5, 1.6596684455871582, 1487, 1487.0, 299)

 2L7B_0014 to yesfit_ALL
(1.336957573890686, 1436, 4, 1.545662760734558, 1487, 1487.0, 299)

 2L7B_0015 to yesfit_ALL
(1.3913606405258179, 1427, 4, 1.5675750970840454, 1487, 1487.0, 299)

 2L7B_0016 to yesfit_ALL
(1.3889034986495972, 1430, 4, 1.5907493829727173, 1487, 1487.0, 299)

 2L7B_0017 to yesfit_ALL
(1.3485774993896484, 1439, 3, 1.5273010730743408, 1487, 1487.0, 299)

 2L7B_0018 to yesfit_ALL
(1.397749900817871, 1395, 5, 1.7693289518356323, 1487, 1487.0, 299)

 2L7B_0019 to yesfit_ALL
(1.3781112432479858, 1435, 3, 1.6296064853668213, 1487, 1487.0, 299)

 2L7B_0020 to yesfit_ALL
(1.3853172063827515, 1406, 5, 1.6202512979507446, 1487, 1487.0, 299)
PyMOL>run averageRMS.py
PyMOL>avgRMS('2LA3','backbone',1,0,'yesfit_ALL','yes',0)
--------------------------------------------------------------------------------
Averaging 20 states [1, 20] of object "2LA3 and backbone" (20 total states) to get new single-state object "yesfit_ALL"...
--------------------------------------------------------------------------------
-> proceeding WITH FITTING to reference state...

----rmsd---


 2LA3_0001 to yesfit_ALL
(1.1539647579193115, 933, 3, 1.1968222856521606, 945, 1022.0, 191)

 2LA3_0002 to yesfit_ALL
(1.2414971590042114, 934, 3, 1.28500235080719, 945, 1022.0, 191)

 2LA3_0003 to yesfit_ALL
(1.2837711572647095, 923, 4, 1.3716402053833008, 945, 1022.0, 191)

 2LA3_0004 to yesfit_ALL
(1.3310270309448242, 928, 4, 1.381359338760376, 945, 1022.0, 191)

 2LA3_0005 to yesfit_ALL
(1.287898302078247, 926, 3, 1.35887610912323, 945, 1022.0, 191)

 2LA3_0006 to yesfit_ALL
(1.2255523204803467, 924, 4, 1.3026849031448364, 945, 1022.0, 191)

 2LA3_0007 to yesfit_ALL
(1.438616156578064, 918, 4, 1.5777840614318848, 945, 1022.0, 191)

 2LA3_0008 to yesfit_ALL
(1.2953506708145142, 930, 3, 1.37094247341156, 945, 1022.0, 191)

 2LA3_0009 to yesfit_ALL
(1.3131765127182007, 917, 4, 1.4069950580596924, 945, 1022.0, 191)

 2LA3_0010 to yesfit_ALL
(1.4065265655517578, 922, 4, 1.522877812385559, 945, 1022.0, 191)

 2LA3_0011 to yesfit_ALL
(1.2738643884658813, 927, 3, 1.3365392684936523, 945, 1022.0, 191)

 2LA3_0012 to yesfit_ALL
(1.2438149452209473, 936, 3, 1.2756668329238892, 945, 1022.0, 191)

 2LA3_0013 to yesfit_ALL
(1.2679718732833862, 921, 3, 1.379071593284607, 945, 1022.0, 191)

 2LA3_0014 to yesfit_ALL
(1.2283881902694702, 933, 3, 1.2784569263458252, 945, 1022.0, 191)

 2LA3_0015 to yesfit_ALL
(1.285522222518921, 915, 4, 1.4101576805114746, 945, 1022.0, 191)

 2LA3_0016 to yesfit_ALL
(1.2596584558486938, 926, 3, 1.3238074779510498, 945, 1022.0, 191)

 2LA3_0017 to yesfit_ALL
(1.2692313194274902, 926, 3, 1.3624752759933472, 945, 1022.0, 191)

 2LA3_0018 to yesfit_ALL
(1.310415267944336, 935, 3, 1.3503646850585938, 945, 1022.0, 191)

 2LA3_0019 to yesfit_ALL
(1.3334845304489136, 925, 3, 1.4106107950210571, 945, 1022.0, 191)

 2LA3_0020 to yesfit_ALL
(1.3323310613632202, 930, 4, 1.3924436569213867, 945, 1022.0, 191)
PyMOL>run averageRMS.py
PyMOL>avgRMS('2LFC','backbone',1,0,'yesfit_ALL','yes',0)
--------------------------------------------------------------------------------
Averaging 20 states [1, 20] of object "2LFC and backbone" (20 total states) to get new single-state object "yesfit_ALL"...
--------------------------------------------------------------------------------
-> proceeding WITH FITTING to reference state...

----rmsd---


 2LFC_0001 to yesfit_ALL
(1.2607038021087646, 736, 5, 2.002014398574829, 796, 848.0, 160)

 2LFC_0002 to yesfit_ALL
(1.4624000787734985, 721, 5, 2.4087939262390137, 796, 848.0, 160)

 2LFC_0003 to yesfit_ALL
(1.298832893371582, 711, 5, 3.6623692512512207, 796, 848.0, 160)

 2LFC_0004 to yesfit_ALL
(1.3413875102996826, 687, 5, 2.92819881439209, 796, 848.0, 160)

 2LFC_0005 to yesfit_ALL
(1.343283772468567, 711, 5, 3.539396286010742, 796, 848.0, 160)

 2LFC_0006 to yesfit_ALL
(1.3307547569274902, 711, 5, 3.2718472480773926, 796, 848.0, 160)

 2LFC_0007 to yesfit_ALL
(1.3750338554382324, 700, 5, 2.656400442123413, 796, 848.0, 160)

 2LFC_0008 to yesfit_ALL
(1.2796915769577026, 702, 5, 3.526015520095825, 796, 848.0, 160)

 2LFC_0009 to yesfit_ALL
(1.356648325920105, 701, 5, 3.662787914276123, 796, 848.0, 160)

 2LFC_0010 to yesfit_ALL
(1.358643889427185, 707, 5, 3.1421563625335693, 796, 848.0, 160)

 2LFC_0011 to yesfit_ALL
(1.4985854625701904, 711, 5, 2.597686767578125, 796, 848.0, 160)

 2LFC_0012 to yesfit_ALL
(1.4667271375656128, 702, 5, 3.6640686988830566, 796, 848.0, 160)

 2LFC_0013 to yesfit_ALL
(1.307839274406433, 708, 5, 2.347632884979248, 796, 848.0, 160)

 2LFC_0014 to yesfit_ALL
(1.3783475160598755, 699, 5, 3.458789825439453, 796, 848.0, 160)

 2LFC_0015 to yesfit_ALL
(1.2894206047058105, 701, 5, 2.9803626537323, 796, 848.0, 160)

 2LFC_0016 to yesfit_ALL
(1.3878601789474487, 722, 5, 2.6671862602233887, 796, 848.0, 160)

 2LFC_0017 to yesfit_ALL
(1.4135398864746094, 696, 5, 3.25787091255188, 796, 848.0, 160)

 2LFC_0018 to yesfit_ALL
(1.3379167318344116, 705, 5, 2.71504545211792, 796, 848.0, 160)

 2LFC_0019 to yesfit_ALL
(1.4168161153793335, 717, 5, 2.758885383605957, 796, 848.0, 160)

 2LFC_0020 to yesfit_ALL
(1.3638906478881836, 685, 5, 3.450195789337158, 796, 848.0, 160)
PyMOL>run averageRMS.py
PyMOL>avgRMS('2M4K','backbone',1,0,'yesfit_ALL','yes',0)
--------------------------------------------------------------------------------
Averaging 20 states [1, 20] of object "2M4K and backbone" (20 total states) to get new single-state object "yesfit_ALL"...
--------------------------------------------------------------------------------
-> proceeding WITH FITTING to reference state...

----rmsd---


 2M4K_0001 to yesfit_ALL
(1.105329155921936, 378, 5, 1.2757458686828613, 402, 419.0, 81)

 2M4K_0002 to yesfit_ALL
(1.3178327083587646, 388, 5, 1.42762291431427, 402, 419.0, 81)

 2M4K_0003 to yesfit_ALL
(1.298539638519287, 399, 2, 1.345292568206787, 402, 419.0, 81)

 2M4K_0004 to yesfit_ALL
(1.3263739347457886, 394, 3, 1.4144370555877686, 402, 419.0, 81)

 2M4K_0005 to yesfit_ALL
(1.4131466150283813, 398, 2, 1.464148998260498, 402, 419.0, 81)

 2M4K_0006 to yesfit_ALL
(1.2033758163452148, 381, 5, 1.3567978143692017, 402, 419.0, 81)

 2M4K_0007 to yesfit_ALL
(1.273065447807312, 394, 3, 1.3606754541397095, 402, 419.0, 81)

 2M4K_0008 to yesfit_ALL
(1.3108375072479248, 398, 2, 1.3574117422103882, 402, 419.0, 81)

 2M4K_0009 to yesfit_ALL
(1.290306806564331, 391, 3, 1.3818550109863281, 402, 419.0, 81)

 2M4K_0010 to yesfit_ALL
(1.2800847291946411, 399, 2, 1.327341914176941, 402, 419.0, 81)

 2M4K_0011 to yesfit_ALL
(1.2573851346969604, 398, 2, 1.3160412311553955, 402, 419.0, 81)

 2M4K_0012 to yesfit_ALL
(1.337502360343933, 396, 3, 1.4063090085983276, 402, 419.0, 81)

 2M4K_0013 to yesfit_ALL
(1.3916577100753784, 396, 2, 1.4475007057189941, 402, 419.0, 81)

 2M4K_0014 to yesfit_ALL
(1.2822428941726685, 394, 2, 1.4030033349990845, 402, 419.0, 81)

 2M4K_0015 to yesfit_ALL
(1.4398245811462402, 396, 3, 1.493512511253357, 402, 419.0, 81)

 2M4K_0016 to yesfit_ALL
(1.3851615190505981, 398, 3, 1.4302560091018677, 402, 419.0, 81)

 2M4K_0017 to yesfit_ALL
(1.2674658298492432, 391, 3, 1.372225046157837, 402, 419.0, 81)

 2M4K_0018 to yesfit_ALL
(1.4045920372009277, 397, 2, 1.4677168130874634, 402, 419.0, 81)

 2M4K_0019 to yesfit_ALL
(1.3455251455307007, 397, 2, 1.428905963897705, 402, 419.0, 81)

 2M4K_0020 to yesfit_ALL
(1.2851574420928955, 389, 3, 1.4109954833984375, 402, 419.0, 81)
PyMOL>run averageRMS.py
PyMOL>avgRMS('2MC2','backbone',1,0,'yesfit_ALL','yes',0)
--------------------------------------------------------------------------------
Averaging 20 states [1, 20] of object "2MC2 and backbone" (20 total states) to get new single-state object "yesfit_ALL"...
--------------------------------------------------------------------------------
-> proceeding WITH FITTING to reference state...

----rmsd---


 2MC2_0001 to yesfit_ALL
(1.0723464488983154, 947, 5, 1.4857547283172607, 1026, 1082.0, 206)

 2MC2_0002 to yesfit_ALL
(1.1307305097579956, 903, 5, 1.7507967948913574, 1026, 1082.0, 206)

 2MC2_0003 to yesfit_ALL
(1.1210013628005981, 885, 5, 1.8635927438735962, 1026, 1082.0, 206)

 2MC2_0004 to yesfit_ALL
(1.1459122896194458, 892, 5, 2.156930446624756, 1026, 1082.0, 206)

 2MC2_0005 to yesfit_ALL
(1.127598762512207, 883, 5, 2.969176769256592, 1026, 1082.0, 206)

 2MC2_0006 to yesfit_ALL
(1.1730071306228638, 905, 5, 1.7070887088775635, 1026, 1082.0, 206)

 2MC2_0007 to yesfit_ALL
(1.133204460144043, 877, 5, 2.2961413860321045, 1026, 1082.0, 206)

 2MC2_0008 to yesfit_ALL
(1.1387462615966797, 889, 5, 2.3210232257843018, 1026, 1082.0, 206)

 2MC2_0009 to yesfit_ALL
(1.1317013502120972, 883, 5, 2.0434770584106445, 1026, 1082.0, 206)

 2MC2_0010 to yesfit_ALL
(1.1465345621109009, 892, 5, 2.639782190322876, 1026, 1082.0, 206)

 2MC2_0011 to yesfit_ALL
(1.134324550628662, 877, 5, 2.3644473552703857, 1026, 1082.0, 206)

 2MC2_0012 to yesfit_ALL
(1.1263920068740845, 890, 5, 2.6398415565490723, 1026, 1082.0, 206)

 2MC2_0013 to yesfit_ALL
(1.1375045776367188, 897, 5, 2.359837055206299, 1026, 1082.0, 206)

 2MC2_0014 to yesfit_ALL
(1.1203421354293823, 880, 5, 1.849782943725586, 1026, 1082.0, 206)

 2MC2_0015 to yesfit_ALL
(1.1625531911849976, 907, 5, 1.7088489532470703, 1026, 1082.0, 206)

 2MC2_0016 to yesfit_ALL
(1.123248815536499, 882, 5, 2.1065945625305176, 1026, 1082.0, 206)

 2MC2_0017 to yesfit_ALL
(1.1325957775115967, 870, 5, 2.0529775619506836, 1026, 1082.0, 206)

 2MC2_0018 to yesfit_ALL
(1.1335145235061646, 889, 5, 2.5952203273773193, 1026, 1082.0, 206)

 2MC2_0019 to yesfit_ALL
(1.1527526378631592, 905, 5, 1.8184341192245483, 1026, 1082.0, 206)

 2MC2_0020 to yesfit_ALL
(1.1417572498321533, 894, 5, 2.3520166873931885, 1026, 1082.0, 206)
PyMOL>run averageRMS.py
PyMOL>avgRMS('5X1X','backbone',1,0,'yesfit_ALL','yes',0)
--------------------------------------------------------------------------------
Averaging 20 states [1, 20] of object "5X1X and backbone" (20 total states) to get new single-state object "yesfit_ALL"...
--------------------------------------------------------------------------------
-> proceeding WITH FITTING to reference state...

----rmsd---


 5X1X_0001 to yesfit_ALL
(1.1690845489501953, 630, 3, 1.2314139604568481, 644, 679.0, 130)

 5X1X_0002 to yesfit_ALL
(1.2182615995407104, 629, 4, 1.2818467617034912, 644, 679.0, 130)

 5X1X_0003 to yesfit_ALL
(1.3079348802566528, 635, 3, 1.3545962572097778, 644, 679.0, 130)

 5X1X_0004 to yesfit_ALL
(1.3002567291259766, 632, 3, 1.3568165302276611, 644, 679.0, 130)

 5X1X_0005 to yesfit_ALL
(1.2509281635284424, 628, 3, 1.3224620819091797, 644, 679.0, 130)

 5X1X_0006 to yesfit_ALL
(1.38640296459198, 625, 4, 1.4771344661712646, 644, 679.0, 130)

 5X1X_0007 to yesfit_ALL
(1.227751612663269, 637, 2, 1.2748034000396729, 644, 679.0, 130)

 5X1X_0008 to yesfit_ALL
(1.3598378896713257, 633, 3, 1.4087798595428467, 644, 679.0, 130)

 5X1X_0009 to yesfit_ALL
(1.2724896669387817, 632, 5, 1.322527289390564, 644, 679.0, 130)

 5X1X_0010 to yesfit_ALL
(1.2382962703704834, 633, 4, 1.294366478919983, 644, 679.0, 130)

 5X1X_0011 to yesfit_ALL
(1.2285023927688599, 631, 3, 1.2951579093933105, 644, 679.0, 130)

 5X1X_0012 to yesfit_ALL
(1.2587800025939941, 625, 3, 1.352831244468689, 644, 679.0, 130)

 5X1X_0013 to yesfit_ALL
(1.2459564208984375, 638, 2, 1.2732168436050415, 644, 679.0, 130)

 5X1X_0014 to yesfit_ALL
(1.352795124053955, 619, 5, 1.452887773513794, 644, 679.0, 130)

 5X1X_0015 to yesfit_ALL
(1.3207863569259644, 617, 5, 1.4296542406082153, 644, 679.0, 130)

 5X1X_0016 to yesfit_ALL
(1.2635055780410767, 636, 3, 1.3122330904006958, 644, 679.0, 130)

 5X1X_0017 to yesfit_ALL
(1.3085991144180298, 632, 2, 1.3685357570648193, 644, 679.0, 130)

 5X1X_0018 to yesfit_ALL
(1.2624640464782715, 631, 3, 1.322569727897644, 644, 679.0, 130)

 5X1X_0019 to yesfit_ALL
(1.2571611404418945, 630, 5, 1.3314164876937866, 644, 679.0, 130)

 5X1X_0020 to yesfit_ALL
(1.3532018661499023, 629, 3, 1.424325942993164, 644, 679.0, 130)

############################################### c alpha ##############################################################


PyMOL>run averageRMS.py
PyMOL>avgRMS('1PBU','name ca',1,0,'yesfit_ALL','yes',0)
--------------------------------------------------------------------------------
Averaging 20 states [1, 20] of object "1PBU and name ca" (20 total states) to get new single-state object "yesfit_ALL"...
--------------------------------------------------------------------------------
-> proceeding WITH FITTING to reference state...

----rmsd---


 1PBU_0001 to yesfit_ALL
(0.0, 162, 0, 0.0, 162, 884.0, 162)

 1PBU_0002 to yesfit_ALL
(0.34801873564720154, 149, 5, 0.49035733938217163, 162, 884.0, 162)

 1PBU_0003 to yesfit_ALL
(0.3773075044155121, 149, 5, 0.7504640221595764, 162, 884.0, 162)

 1PBU_0004 to yesfit_ALL
(0.32808026671409607, 142, 4, 0.45199787616729736, 162, 884.0, 162)

 1PBU_0005 to yesfit_ALL
(0.3604506850242615, 145, 5, 0.5569624900817871, 162, 884.0, 162)

 1PBU_0006 to yesfit_ALL
(0.41311338543891907, 144, 5, 0.6777597069740295, 162, 884.0, 162)

 1PBU_0007 to yesfit_ALL
(0.40269148349761963, 148, 5, 0.5634317994117737, 162, 884.0, 162)

 1PBU_0008 to yesfit_ALL
(0.3107137680053711, 142, 5, 0.6383415460586548, 162, 884.0, 162)

 1PBU_0009 to yesfit_ALL
(0.39215636253356934, 149, 5, 0.5111163258552551, 162, 884.0, 162)

 1PBU_0010 to yesfit_ALL
(0.35096365213394165, 155, 5, 0.6949604749679565, 162, 884.0, 162)

 1PBU_0011 to yesfit_ALL
(0.38794630765914917, 150, 5, 0.6819697618484497, 162, 884.0, 162)

 1PBU_0012 to yesfit_ALL
(0.3762045204639435, 143, 5, 0.6004320383071899, 162, 884.0, 162)

 1PBU_0013 to yesfit_ALL
(0.3428336977958679, 143, 5, 0.5188706517219543, 162, 884.0, 162)

 1PBU_0014 to yesfit_ALL
(0.3488369584083557, 148, 5, 0.4361182153224945, 162, 884.0, 162)

 1PBU_0015 to yesfit_ALL
(0.39636391401290894, 149, 5, 0.49475812911987305, 162, 884.0, 162)

 1PBU_0016 to yesfit_ALL
(0.33303359150886536, 148, 5, 0.7055965065956116, 162, 884.0, 162)

 1PBU_0017 to yesfit_ALL
(0.4079536199569702, 155, 3, 0.5606889128684998, 162, 884.0, 162)

 1PBU_0018 to yesfit_ALL
(0.36274680495262146, 143, 4, 0.6503363847732544, 162, 884.0, 162)

 1PBU_0019 to yesfit_ALL
(0.33006349205970764, 144, 5, 0.49720388650894165, 162, 884.0, 162)

 1PBU_0020 to yesfit_ALL
(0.3372429609298706, 140, 5, 0.6360669732093811, 162, 884.0, 162)
PyMOL>run averageRMS.py
PyMOL>avgRMS('1XXE','name ca',1,0,'yesfit_ALL','yes',0)
--------------------------------------------------------------------------------
Averaging 25 states [1, 25] of object "1XXE and name ca" (25 total states) to get new single-state object "yesfit_ALL"...
--------------------------------------------------------------------------------
-> proceeding WITH FITTING to reference state...

----rmsd---


 1XXE_0001 to yesfit_ALL
(0.0, 268, 0, 0.0, 268, 1397.0, 268)

 1XXE_0002 to yesfit_ALL
(0.31890785694122314, 250, 4, 0.4686136841773987, 268, 1397.0, 268)

 1XXE_0003 to yesfit_ALL
(0.5261693000793457, 257, 4, 0.5879990458488464, 268, 1397.0, 268)

 1XXE_0004 to yesfit_ALL
(0.4307488203048706, 256, 4, 0.4926983714103699, 268, 1397.0, 268)

 1XXE_0005 to yesfit_ALL
(0.4223732352256775, 248, 5, 0.5420292019844055, 268, 1397.0, 268)

 1XXE_0006 to yesfit_ALL
(0.4163263142108917, 248, 4, 0.5433510541915894, 268, 1397.0, 268)

 1XXE_0007 to yesfit_ALL
(0.408506840467453, 243, 5, 0.5090638995170593, 268, 1397.0, 268)

 1XXE_0008 to yesfit_ALL
(0.3594946563243866, 245, 5, 0.5419039130210876, 268, 1397.0, 268)

 1XXE_0009 to yesfit_ALL
(0.25863006711006165, 239, 5, 0.5558404922485352, 268, 1397.0, 268)

 1XXE_0010 to yesfit_ALL
(0.40035220980644226, 249, 4, 0.48743847012519836, 268, 1397.0, 268)

 1XXE_0011 to yesfit_ALL
(0.44996386766433716, 239, 5, 0.6058676838874817, 268, 1397.0, 268)

 1XXE_0012 to yesfit_ALL
(0.3711666464805603, 254, 5, 0.4302894175052643, 268, 1397.0, 268)

 1XXE_0013 to yesfit_ALL
(0.3150806427001953, 227, 5, 0.5032833218574524, 268, 1397.0, 268)

 1XXE_0014 to yesfit_ALL
(0.3663511276245117, 250, 5, 0.6020803451538086, 268, 1397.0, 268)

 1XXE_0015 to yesfit_ALL
(0.3401505649089813, 228, 5, 0.5267025232315063, 268, 1397.0, 268)

 1XXE_0016 to yesfit_ALL
(0.42213454842567444, 254, 4, 0.5434125065803528, 268, 1397.0, 268)

 1XXE_0017 to yesfit_ALL
(0.37263816595077515, 247, 5, 0.6236833930015564, 268, 1397.0, 268)

 1XXE_0018 to yesfit_ALL
(0.39977553486824036, 239, 5, 0.5538163185119629, 268, 1397.0, 268)

 1XXE_0019 to yesfit_ALL
(0.32848507165908813, 233, 5, 0.459883451461792, 268, 1397.0, 268)

 1XXE_0020 to yesfit_ALL
(0.4443715512752533, 245, 5, 0.6060690879821777, 268, 1397.0, 268)

 1XXE_0021 to yesfit_ALL
(0.47665679454803467, 244, 5, 0.7743040323257446, 268, 1397.0, 268)

 1XXE_0022 to yesfit_ALL
(0.49765729904174805, 250, 5, 0.6027060151100159, 268, 1397.0, 268)

 1XXE_0023 to yesfit_ALL
(0.3168719410896301, 228, 5, 0.5234591960906982, 268, 1397.0, 268)

 1XXE_0024 to yesfit_ALL
(0.31634318828582764, 250, 5, 0.46050581336021423, 268, 1397.0, 268)

 1XXE_0025 to yesfit_ALL
(0.42008912563323975, 252, 5, 0.49731889367103577, 268, 1397.0, 268)
PyMOL>run averageRMS.py
PyMOL>avgRMS('2KOK','name ca',1,0,'yesfit_ALL','yes',0)
--------------------------------------------------------------------------------
Averaging 20 states [1, 20] of object "2KOK and name ca" (20 total states) to get new single-state object "yesfit_ALL"...
--------------------------------------------------------------------------------
-> proceeding WITH FITTING to reference state...

----rmsd---


 2KOK_0001 to yesfit_ALL
(0.0, 120, 0, 0.0, 120, 632.0, 120)

 2KOK_0002 to yesfit_ALL
(0.9677479267120361, 103, 5, 1.897830605506897, 120, 632.0, 120)

 2KOK_0003 to yesfit_ALL
(0.9296393394470215, 99, 5, 1.6573389768600464, 120, 632.0, 120)

 2KOK_0004 to yesfit_ALL
(0.8269184231758118, 97, 5, 2.218414545059204, 120, 632.0, 120)

 2KOK_0005 to yesfit_ALL
(0.8425591588020325, 102, 5, 1.8120061159133911, 120, 632.0, 120)

 2KOK_0006 to yesfit_ALL
(0.8136388659477234, 101, 5, 3.4089202880859375, 120, 632.0, 120)

 2KOK_0007 to yesfit_ALL
(0.8110345005989075, 96, 5, 1.5390876531600952, 120, 632.0, 120)

 2KOK_0008 to yesfit_ALL
(1.1905231475830078, 106, 5, 1.8022711277008057, 120, 632.0, 120)

 2KOK_0009 to yesfit_ALL
(0.616772472858429, 91, 5, 1.5082859992980957, 120, 632.0, 120)

 2KOK_0010 to yesfit_ALL
(0.8480969071388245, 97, 5, 1.441726803779602, 120, 632.0, 120)

 2KOK_0011 to yesfit_ALL
(1.0833971500396729, 111, 5, 1.59441077709198, 120, 632.0, 120)

 2KOK_0012 to yesfit_ALL
(1.13280189037323, 107, 5, 2.1984903812408447, 120, 632.0, 120)

 2KOK_0013 to yesfit_ALL
(0.9098150134086609, 112, 4, 1.5881434679031372, 120, 632.0, 120)

 2KOK_0014 to yesfit_ALL
(0.7468754649162292, 95, 5, 2.023559331893921, 120, 632.0, 120)

 2KOK_0015 to yesfit_ALL
(0.7754300236701965, 102, 5, 1.848848581314087, 120, 632.0, 120)

 2KOK_0016 to yesfit_ALL
(0.8453836441040039, 94, 5, 1.712476134300232, 120, 632.0, 120)

 2KOK_0017 to yesfit_ALL
(0.7767126560211182, 97, 5, 1.8165689706802368, 120, 632.0, 120)

 2KOK_0018 to yesfit_ALL
(0.9092950224876404, 100, 5, 1.550671100616455, 120, 632.0, 120)

 2KOK_0019 to yesfit_ALL
(0.7336688041687012, 99, 5, 1.8366447687149048, 120, 632.0, 120)

 2KOK_0020 to yesfit_ALL
(1.0452840328216553, 112, 5, 1.243545651435852, 120, 632.0, 120)
PyMOL>run averageRMS.py
PyMOL>avgRMS('2L7B','name ca',1,0,'yesfit_ALL','yes',0)
--------------------------------------------------------------------------------
Averaging 20 states [1, 20] of object "2L7B and name ca" (20 total states) to get new single-state object "yesfit_ALL"...
--------------------------------------------------------------------------------
-> proceeding WITH FITTING to reference state...

----rmsd---


 2L7B_0001 to yesfit_ALL
(0.0, 299, 0, 0.0, 299, 1487.0, 299)

 2L7B_0002 to yesfit_ALL
(0.8610374927520752, 271, 4, 1.3073455095291138, 299, 1487.0, 299)

 2L7B_0003 to yesfit_ALL
(0.8368822336196899, 275, 4, 1.283644676208496, 299, 1487.0, 299)

 2L7B_0004 to yesfit_ALL
(0.9245662093162537, 270, 5, 1.2923548221588135, 299, 1487.0, 299)

 2L7B_0005 to yesfit_ALL
(0.8917337656021118, 275, 4, 1.3138083219528198, 299, 1487.0, 299)

 2L7B_0006 to yesfit_ALL
(0.7875750660896301, 267, 5, 1.441732406616211, 299, 1487.0, 299)

 2L7B_0007 to yesfit_ALL
(0.7862108945846558, 259, 5, 1.2356226444244385, 299, 1487.0, 299)

 2L7B_0008 to yesfit_ALL
(0.8252053260803223, 262, 5, 1.3627885580062866, 299, 1487.0, 299)

 2L7B_0009 to yesfit_ALL
(0.8330284357070923, 267, 5, 1.4899269342422485, 299, 1487.0, 299)

 2L7B_0010 to yesfit_ALL
(0.8361814022064209, 273, 4, 1.2137796878814697, 299, 1487.0, 299)

 2L7B_0011 to yesfit_ALL
(0.9603702425956726, 271, 5, 1.375342845916748, 299, 1487.0, 299)

 2L7B_0012 to yesfit_ALL
(0.8979660868644714, 266, 5, 1.472815990447998, 299, 1487.0, 299)

 2L7B_0013 to yesfit_ALL
(0.93622887134552, 274, 5, 1.408090353012085, 299, 1487.0, 299)

 2L7B_0014 to yesfit_ALL
(0.8233215808868408, 271, 5, 1.2897168397903442, 299, 1487.0, 299)

 2L7B_0015 to yesfit_ALL
(0.9177440404891968, 267, 5, 1.3011412620544434, 299, 1487.0, 299)

 2L7B_0016 to yesfit_ALL
(0.9802443385124207, 279, 3, 1.3001562356948853, 299, 1487.0, 299)

 2L7B_0017 to yesfit_ALL
(0.7002149820327759, 265, 5, 1.1794648170471191, 299, 1487.0, 299)

 2L7B_0018 to yesfit_ALL
(0.8404674530029297, 259, 5, 1.6043012142181396, 299, 1487.0, 299)

 2L7B_0019 to yesfit_ALL
(0.8748810887336731, 262, 5, 1.510034441947937, 299, 1487.0, 299)

 2L7B_0020 to yesfit_ALL
(0.8016785383224487, 258, 5, 1.322549819946289, 299, 1487.0, 299)
PyMOL>run averageRMS.py
PyMOL>avgRMS('2LA3','name ca',1,0,'yesfit_ALL','yes',0)
--------------------------------------------------------------------------------
Averaging 20 states [1, 20] of object "2LA3 and name ca" (20 total states) to get new single-state object "yesfit_ALL"...
--------------------------------------------------------------------------------
-> proceeding WITH FITTING to reference state...

----rmsd---


 2LA3_0001 to yesfit_ALL
(0.0, 191, 0, 0.0, 191, 1022.0, 191)

 2LA3_0002 to yesfit_ALL
(0.7186827659606934, 182, 3, 0.8033087849617004, 191, 1022.0, 191)

 2LA3_0003 to yesfit_ALL
(0.6898708939552307, 179, 5, 0.8933764100074768, 191, 1022.0, 191)

 2LA3_0004 to yesfit_ALL
(0.6757190823554993, 179, 4, 0.7991214394569397, 191, 1022.0, 191)

 2LA3_0005 to yesfit_ALL
(0.6222246289253235, 171, 5, 0.9044917821884155, 191, 1022.0, 191)

 2LA3_0006 to yesfit_ALL
(0.5213146209716797, 177, 4, 0.7388365268707275, 191, 1022.0, 191)

 2LA3_0007 to yesfit_ALL
(0.732062041759491, 173, 5, 1.1475741863250732, 191, 1022.0, 191)

 2LA3_0008 to yesfit_ALL
(0.7055355310440063, 181, 3, 0.9605737924575806, 191, 1022.0, 191)

 2LA3_0009 to yesfit_ALL
(0.6215105056762695, 162, 5, 0.9951366186141968, 191, 1022.0, 191)

 2LA3_0010 to yesfit_ALL
(0.8857242465019226, 179, 5, 1.1483956575393677, 191, 1022.0, 191)

 2LA3_0011 to yesfit_ALL
(0.6466081738471985, 180, 4, 0.8558933138847351, 191, 1022.0, 191)

 2LA3_0012 to yesfit_ALL
(0.5628753900527954, 175, 4, 0.697249174118042, 191, 1022.0, 191)

 2LA3_0013 to yesfit_ALL
(0.6346566677093506, 178, 4, 0.9483820199966431, 191, 1022.0, 191)

 2LA3_0014 to yesfit_ALL
(0.5690646767616272, 171, 5, 0.8274338841438293, 191, 1022.0, 191)

 2LA3_0015 to yesfit_ALL
(0.5951632261276245, 173, 4, 0.9682977199554443, 191, 1022.0, 191)

 2LA3_0016 to yesfit_ALL
(0.5836079120635986, 175, 4, 0.8007744550704956, 191, 1022.0, 191)

 2LA3_0017 to yesfit_ALL
(0.5654365420341492, 171, 5, 0.9165446758270264, 191, 1022.0, 191)

 2LA3_0018 to yesfit_ALL
(0.7292119264602661, 178, 3, 0.8789610862731934, 191, 1022.0, 191)

 2LA3_0019 to yesfit_ALL
(0.7355700731277466, 175, 4, 0.9786266088485718, 191, 1022.0, 191)

 2LA3_0020 to yesfit_ALL
(0.6974321603775024, 180, 4, 0.906139612197876, 191, 1022.0, 191)
PyMOL>run averageRMS.py
PyMOL>avgRMS('2LFC','name ca',1,0,'yesfit_ALL','yes',0)
--------------------------------------------------------------------------------
Averaging 20 states [1, 20] of object "2LFC and name ca" (20 total states) to get new single-state object "yesfit_ALL"...
--------------------------------------------------------------------------------
-> proceeding WITH FITTING to reference state...

----rmsd---


 2LFC_0001 to yesfit_ALL
(0.0, 160, 0, 0.0, 160, 848.0, 160)

 2LFC_0002 to yesfit_ALL
(0.7904636859893799, 136, 5, 2.3140413761138916, 160, 848.0, 160)

 2LFC_0003 to yesfit_ALL
(0.65224689245224, 133, 5, 4.295773029327393, 160, 848.0, 160)

 2LFC_0004 to yesfit_ALL
(0.5602613687515259, 116, 5, 2.9212381839752197, 160, 848.0, 160)

 2LFC_0005 to yesfit_ALL
(0.7046083211898804, 130, 5, 4.035104274749756, 160, 848.0, 160)

 2LFC_0006 to yesfit_ALL
(0.7988041043281555, 136, 5, 4.019887924194336, 160, 848.0, 160)

 2LFC_0007 to yesfit_ALL
(0.8014633655548096, 131, 5, 3.2336912155151367, 160, 848.0, 160)

 2LFC_0008 to yesfit_ALL
(0.7274225950241089, 129, 5, 3.2897579669952393, 160, 848.0, 160)

 2LFC_0009 to yesfit_ALL
(0.8756161332130432, 132, 5, 4.601878643035889, 160, 848.0, 160)

 2LFC_0010 to yesfit_ALL
(0.7700285911560059, 135, 5, 3.6735260486602783, 160, 848.0, 160)

 2LFC_0011 to yesfit_ALL
(0.9804810881614685, 128, 5, 3.132781505584717, 160, 848.0, 160)

 2LFC_0012 to yesfit_ALL
(0.9258642792701721, 130, 5, 3.2107808589935303, 160, 848.0, 160)

 2LFC_0013 to yesfit_ALL
(0.7092865109443665, 141, 4, 2.3980154991149902, 160, 848.0, 160)

 2LFC_0014 to yesfit_ALL
(0.5779502391815186, 123, 5, 3.5148229598999023, 160, 848.0, 160)

 2LFC_0015 to yesfit_ALL
(0.5927678942680359, 120, 5, 3.6425983905792236, 160, 848.0, 160)

 2LFC_0016 to yesfit_ALL
(0.6064420938491821, 129, 5, 3.1280667781829834, 160, 848.0, 160)

 2LFC_0017 to yesfit_ALL
(0.7799609899520874, 124, 5, 3.144139289855957, 160, 848.0, 160)

 2LFC_0018 to yesfit_ALL
(0.7920448184013367, 127, 5, 2.402830123901367, 160, 848.0, 160)

 2LFC_0019 to yesfit_ALL
(0.7555927038192749, 131, 5, 3.0030391216278076, 160, 848.0, 160)

 2LFC_0020 to yesfit_ALL
(0.8060149550437927, 125, 5, 3.957014799118042, 160, 848.0, 160)
PyMOL>run averageRMS.py
PyMOL>avgRMS('2M4K','name ca',1,0,'yesfit_ALL','yes',0)
--------------------------------------------------------------------------------
Averaging 20 states [1, 20] of object "2M4K and name ca" (20 total states) to get new single-state object "yesfit_ALL"...
--------------------------------------------------------------------------------
-> proceeding WITH FITTING to reference state...

----rmsd---


 2M4K_0001 to yesfit_ALL
(0.0, 81, 0, 0.0, 81, 419.0, 81)

 2M4K_0002 to yesfit_ALL
(0.8279131054878235, 71, 5, 1.1943364143371582, 81, 419.0, 81)

 2M4K_0003 to yesfit_ALL
(0.9276456832885742, 81, 1, 0.9276456832885742, 81, 419.0, 81)

 2M4K_0004 to yesfit_ALL
(0.8520845174789429, 71, 5, 1.1089919805526733, 81, 419.0, 81)

 2M4K_0005 to yesfit_ALL
(1.308606505393982, 80, 2, 1.3384363651275635, 81, 419.0, 81)

 2M4K_0006 to yesfit_ALL
(0.6153997182846069, 78, 3, 0.6965206861495972, 81, 419.0, 81)

 2M4K_0007 to yesfit_ALL
(0.761711061000824, 69, 5, 1.1364752054214478, 81, 419.0, 81)

 2M4K_0008 to yesfit_ALL
(1.0548720359802246, 77, 3, 1.1769921779632568, 81, 419.0, 81)

 2M4K_0009 to yesfit_ALL
(0.8202628493309021, 78, 2, 0.9259404540061951, 81, 419.0, 81)

 2M4K_0010 to yesfit_ALL
(0.8123689889907837, 78, 2, 0.9111575484275818, 81, 419.0, 81)

 2M4K_0011 to yesfit_ALL
(0.7926264405250549, 77, 3, 0.876266360282898, 81, 419.0, 81)

 2M4K_0012 to yesfit_ALL
(0.9420260190963745, 80, 2, 0.9814355969429016, 81, 419.0, 81)

 2M4K_0013 to yesfit_ALL
(0.8622947931289673, 71, 4, 1.2576416730880737, 81, 419.0, 81)

 2M4K_0014 to yesfit_ALL
(0.9088457226753235, 78, 3, 1.0974860191345215, 81, 419.0, 81)

 2M4K_0015 to yesfit_ALL
(0.9048557877540588, 70, 5, 1.2385581731796265, 81, 419.0, 81)

 2M4K_0016 to yesfit_ALL
(1.1587592363357544, 80, 2, 1.2060025930404663, 81, 419.0, 81)

 2M4K_0017 to yesfit_ALL
(0.9199380874633789, 78, 2, 1.046259880065918, 81, 419.0, 81)

 2M4K_0018 to yesfit_ALL
(0.9397377967834473, 77, 4, 1.087390661239624, 81, 419.0, 81)

 2M4K_0019 to yesfit_ALL
(0.760708212852478, 67, 5, 1.2050496339797974, 81, 419.0, 81)

 2M4K_0020 to yesfit_ALL
(0.9032954573631287, 73, 5, 1.1876496076583862, 81, 419.0, 81)
PyMOL>run averageRMS.py
PyMOL>avgRMS('2MC2','name ca',1,0,'yesfit_ALL','yes',0)
--------------------------------------------------------------------------------
Averaging 20 states [1, 20] of object "2MC2 and name ca" (20 total states) to get new single-state object "yesfit_ALL"...
--------------------------------------------------------------------------------
-> proceeding WITH FITTING to reference state...

----rmsd---


 2MC2_0001 to yesfit_ALL
(0.0, 206, 0, 0.0, 206, 1082.0, 206)

 2MC2_0002 to yesfit_ALL
(0.12186739593744278, 153, 5, 1.3455268144607544, 206, 1082.0, 206)

 2MC2_0003 to yesfit_ALL
(0.09286089241504669, 157, 5, 1.7909547090530396, 206, 1082.0, 206)

 2MC2_0004 to yesfit_ALL
(0.1299857497215271, 153, 5, 2.0696609020233154, 206, 1082.0, 206)

 2MC2_0005 to yesfit_ALL
(0.11621018499135971, 152, 5, 2.845189094543457, 206, 1082.0, 206)

 2MC2_0006 to yesfit_ALL
(0.1112247034907341, 143, 5, 1.642539143562317, 206, 1082.0, 206)

 2MC2_0007 to yesfit_ALL
(0.10657357424497604, 160, 5, 2.524749994277954, 206, 1082.0, 206)

 2MC2_0008 to yesfit_ALL
(0.1190277561545372, 151, 5, 2.262699842453003, 206, 1082.0, 206)

 2MC2_0009 to yesfit_ALL
(0.11019383370876312, 149, 5, 2.1716997623443604, 206, 1082.0, 206)

 2MC2_0010 to yesfit_ALL
(0.1266326904296875, 154, 5, 2.5393521785736084, 206, 1082.0, 206)

 2MC2_0011 to yesfit_ALL
(0.1107824444770813, 152, 5, 2.4094767570495605, 206, 1082.0, 206)

 2MC2_0012 to yesfit_ALL
(0.10907702893018723, 156, 5, 2.8017067909240723, 206, 1082.0, 206)

 2MC2_0013 to yesfit_ALL
(0.11088276654481888, 158, 5, 2.4204535484313965, 206, 1082.0, 206)

 2MC2_0014 to yesfit_ALL
(0.12959522008895874, 157, 5, 1.7493865489959717, 206, 1082.0, 206)

 2MC2_0015 to yesfit_ALL
(0.12743660807609558, 158, 5, 1.6983413696289062, 206, 1082.0, 206)

 2MC2_0016 to yesfit_ALL
(0.12218032777309418, 157, 5, 2.2545769214630127, 206, 1082.0, 206)

 2MC2_0017 to yesfit_ALL
(0.09345519542694092, 152, 5, 2.061830759048462, 206, 1082.0, 206)

 2MC2_0018 to yesfit_ALL
(0.1036081314086914, 157, 5, 2.55515718460083, 206, 1082.0, 206)

 2MC2_0019 to yesfit_ALL
(0.13648498058319092, 155, 5, 1.6410212516784668, 206, 1082.0, 206)

 2MC2_0020 to yesfit_ALL
(0.11653628200292587, 158, 5, 2.4137048721313477, 206, 1082.0, 206)
PyMOL>run averageRMS.py
PyMOL>avgRMS('5X1X','name ca',1,0,'yesfit_ALL','yes',0)
--------------------------------------------------------------------------------
Averaging 20 states [1, 20] of object "5X1X and name ca" (20 total states) to get new single-state object "yesfit_ALL"...
--------------------------------------------------------------------------------
-> proceeding WITH FITTING to reference state...

----rmsd---


 5X1X_0001 to yesfit_ALL
(0.0, 130, 0, 0.0, 130, 679.0, 130)

 5X1X_0002 to yesfit_ALL
(0.45769014954566956, 118, 4, 0.668100893497467, 130, 679.0, 130)

 5X1X_0003 to yesfit_ALL
(0.819088876247406, 121, 4, 1.0266929864883423, 130, 679.0, 130)

 5X1X_0004 to yesfit_ALL
(0.6082814335823059, 108, 5, 0.939937174320221, 130, 679.0, 130)

 5X1X_0005 to yesfit_ALL
(0.4958401620388031, 119, 4, 0.7347346544265747, 130, 679.0, 130)

 5X1X_0006 to yesfit_ALL
(0.7481279373168945, 107, 5, 1.2376320362091064, 130, 679.0, 130)

 5X1X_0007 to yesfit_ALL
(0.5381234288215637, 121, 4, 0.6956564784049988, 130, 679.0, 130)

 5X1X_0008 to yesfit_ALL
(0.8116984367370605, 119, 5, 0.9977239966392517, 130, 679.0, 130)

 5X1X_0009 to yesfit_ALL
(0.6610225439071655, 116, 4, 0.9465848207473755, 130, 679.0, 130)

 5X1X_0010 to yesfit_ALL
(0.5794641971588135, 121, 4, 0.7515142560005188, 130, 679.0, 130)

 5X1X_0011 to yesfit_ALL
(0.5013509392738342, 121, 4, 0.6783983707427979, 130, 679.0, 130)

 5X1X_0012 to yesfit_ALL
(0.5660507678985596, 110, 5, 0.9717718958854675, 130, 679.0, 130)

 5X1X_0013 to yesfit_ALL
(0.6570136547088623, 125, 3, 0.7634881734848022, 130, 679.0, 130)

 5X1X_0014 to yesfit_ALL
(0.7178927063941956, 108, 5, 1.130908489227295, 130, 679.0, 130)

 5X1X_0015 to yesfit_ALL
(0.8245282173156738, 112, 5, 1.2134172916412354, 130, 679.0, 130)

 5X1X_0016 to yesfit_ALL
(0.42367956042289734, 112, 5, 0.7755262851715088, 130, 679.0, 130)

 5X1X_0017 to yesfit_ALL
(0.6087177395820618, 116, 5, 0.9537305235862732, 130, 679.0, 130)

 5X1X_0018 to yesfit_ALL
(0.689664363861084, 116, 5, 0.9701424837112427, 130, 679.0, 130)

 5X1X_0019 to yesfit_ALL
(0.6520600318908691, 119, 4, 0.857319712638855, 130, 679.0, 130)

 5X1X_0020 to yesfit_ALL
(0.8427920341491699, 121, 4, 1.1027857065200806, 130, 679.0, 130)
