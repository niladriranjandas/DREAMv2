function x_filled = fillInPseudo_test(x, x_resi, x_atom_name, x_resi_name, wh_Comp, A)
%% Get the coord from pdb generated by modeller/gromacs with H filled by reducer and put in pseudo atoms
%   Input:      x: (3 * no. of atoms) coord of the atoms
%     x_atom_name: (1 * no. of atoms) names of the atoms
%         wh_Comp:
%               A: rotamer libr
%%
   if nargin ~= 6 
      error('module: fillInPseudo: incorrect no. of inputs.');      
   end
   
   [dim, n_atom] = size(x);
   x_resi_list   = unique(x_resi);
   if dim > n_atom
      error('module: fillInPseudo: expected size of x is (3 * no. of atoms).');
   end
   if dim ~= 3
      error('module: fillInPseudo: dim of x must be 3.');
   end   
   
   x_filled = nan(3,length(wh_Comp.atom_names));
%% fill in all except the pseudo
   pseudo_ind = wh_Comp.info(5,:); %pseudo atom has '0' rest are non-zero
   
   count=0;
   for i=1:length(x_resi_list)
       wh_indx_i       = find(wh_Comp.residue == x_resi_list(i));
       wh_atom_names_i = wh_Comp.atom_names(wh_indx_i);
       wh_pseudo_ind_i = pseudo_ind(wh_indx_i);
       
       x_indx_i       = find(x_resi == x_resi_list(i));
       x_i            = x(:,x_indx_i);
       x_atom_names_i = x_atom_name(x_indx_i);
       x_resi_name_i  = x_resi_name(x_indx_i(1));
       
       for j = 1:length(wh_indx_i)
          count = count + 1;
           if wh_pseudo_ind_i(j)   % non pseudo atoms
            tmp_indx = ismember(x_atom_names_i, wh_atom_names_i(j));
               if all(tmp_indx==0)
                  warning('\n resi (%d,%s) atom %s not found',x_resi_list(i),char(x_resi_name_i),wh_atom_names_i{j});
                  continue
               end
            tmp_pos = find(tmp_indx);
            x_filled(:,count) = x_i(:,tmp_pos);
           end
       end
   end
x_filled_b4 = x_filled;
%% fill in pseudo   
   
   count = 0;
   for i=1:length(x_resi_list)  % for efficiency this must be integrated in last loop itself   
       seq_pos = find(wh_Comp.num_seq == x_resi_list(i));
       offset = wh_Comp.residue_bias(seq_pos);
       
       tmp_indx   = find(wh_Comp.residue == x_resi_list(i));
       tmp_pseudo = find(pseudo_ind(tmp_indx)==0);
       
       resi_details_ = find(wh_Comp.num_seq == x_resi_list(i));
       resi_details  = A(wh_Comp.seq(resi_details_)).atom;
       
       corr = 2 ; % this is because in A atom names start with C,O,N ,... instead of N,...
       pseudo_pos = setdiff(unique([resi_details.pseudo]),0);      

                           if length(pseudo_pos) ~= length(tmp_pseudo)  % wh_Comp.info(5,:) and A(i).atom.pseudo must corroborate
                              error('\n resi %d mismatch in no. of pseudo ',x_resi_list(i));
                           end
                           if ~all( ((pseudo_pos - corr) - tmp_pseudo)==0)
                               error('\n resi %d mismatch in position of pseudo ',x_resi_list(i));
                           end
        for j=1:length(tmp_pseudo)
            pseudo_calc_j = find([resi_details.pseudo] == tmp_pseudo(j)+corr);
            pseudo_calc_j = (pseudo_calc_j - corr) + offset;
            x_filled(:,count + tmp_pseudo(j)) = mean( x_filled(:,pseudo_calc_j),2);
            %x_filled(:,count + tmp_pseudo(j)) = x_filled(:,pseudo_calc_j(1));
        end
      count = count + length(tmp_indx);
   end
end